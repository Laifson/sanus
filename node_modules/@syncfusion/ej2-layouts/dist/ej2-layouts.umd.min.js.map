{"version":3,"file":"ej2-layouts.umd.min.js","sources":["../src/splitter/splitter.js","../src/dashboard-layout/dashboard-layout.js"],"sourcesContent":["var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, setStyleAttribute, ChildProperty, compile } from '@syncfusion/ej2-base';\nimport { NotifyPropertyChanges, addClass, Collection, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { Event, EventHandler, selectAll, removeClass, select, Browser, detach, formatUnit } from '@syncfusion/ej2-base';\nimport { SanitizeHtmlHelper, extend } from '@syncfusion/ej2-base';\nvar ROOT = 'e-splitter';\nvar HORIZONTAL_PANE = 'e-splitter-horizontal';\nvar VERTICAL_PANE = 'e-splitter-vertical';\nvar PANE = 'e-pane';\nvar SPLIT_H_PANE = 'e-pane-horizontal';\nvar SPLIT_V_PANE = 'e-pane-vertical';\nvar SPLIT_BAR = 'e-split-bar';\nvar SPLIT_H_BAR = 'e-split-bar-horizontal';\nvar SPLIT_V_BAR = 'e-split-bar-vertical';\nvar STATIC_PANE = 'e-static-pane';\nvar SCROLL_PANE = 'e-scrollable';\nvar RESIZE_BAR = 'e-resize-handler';\nvar RESIZABLE_BAR = 'e-resizable-split-bar';\nvar SPLIT_BAR_HOVER = 'e-split-bar-hover';\nvar SPLIT_BAR_ACTIVE = 'e-split-bar-active';\nvar HIDE_HANDLER = 'e-hide-handler';\nvar SPLIT_TOUCH = 'e-splitter-touch';\nvar DISABLED = 'e-disabled';\nvar RTL = 'e-rtl';\nvar E_ICONS = 'e-icons';\nvar COLLAPSIBLE = 'e-collapsible';\nvar NAVIGATE_ARROW = 'e-navigate-arrow';\nvar ARROW_RIGHT = 'e-arrow-right';\nvar ARROW_LEFT = 'e-arrow-left';\nvar ARROW_UP = 'e-arrow-up';\nvar ARROW_DOWN = 'e-arrow-down';\nvar HIDE_ICON = 'e-icon-hidden';\nvar EXPAND_PANE = 'e-expanded';\nvar COLLAPSE_PANE = 'e-collapsed';\nvar PANE_HIDDEN = 'e-pane-hidden';\nvar RESIZABLE_PANE = 'e-resizable';\nvar LAST_BAR = 'e-last-bar';\nvar BAR_SIZE_DEFAULT = 1;\n/**\n * Interface to configure pane properties such as its content, size, min, max, resizable, collapsed and collapsible.\n */\nvar PaneProperties = /** @class */ (function (_super) {\n    __extends(PaneProperties, _super);\n    function PaneProperties() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"size\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsible\", void 0);\n    __decorate([\n        Property(false)\n    ], PaneProperties.prototype, \"collapsed\", void 0);\n    __decorate([\n        Property(true)\n    ], PaneProperties.prototype, \"resizable\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"min\", void 0);\n    __decorate([\n        Property(null)\n    ], PaneProperties.prototype, \"max\", void 0);\n    __decorate([\n        Property()\n    ], PaneProperties.prototype, \"content\", void 0);\n    __decorate([\n        Property('')\n    ], PaneProperties.prototype, \"cssClass\", void 0);\n    return PaneProperties;\n}(ChildProperty));\nexport { PaneProperties };\n/**\n * Splitter is a layout user interface (UI) control that has resizable and collapsible split panes.\n * The container can be split into multiple panes, which are oriented horizontally or vertically.\n * The separator (divider) splits the panes and resizes and expands/collapses the panes.\n * The splitter is placed inside the split pane to make a nested layout user interface.\n *\n * ```html\n * <div id=\"splitter\">\n *  <div> Left Pane </div>\n *  <div> Center Pane </div>\n *  <div> Right Pane </div>\n * </div>\n * ```\n * ```typescript\n * <script>\n *   var splitterObj = new Splitter({ width: '300px', height: '200px'});\n *   splitterObj.appendTo('#splitter');\n * </script>\n * ```\n */\nvar Splitter = /** @class */ (function (_super) {\n    __extends(Splitter, _super);\n    /**\n     * Initializes a new instance of the Splitter class.\n     *\n     * @param options  - Specifies Splitter model properties as options.\n     * @param element  - Specifies the element that is rendered as an Splitter.\n     */\n    function Splitter(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.allPanes = [];\n        _this.paneOrder = [];\n        _this.separatorOrder = [];\n        _this.allBars = [];\n        _this.previousCoordinates = {};\n        _this.currentCoordinates = {};\n        _this.updatePrePaneInPercentage = false;\n        _this.updateNextPaneInPercentage = false;\n        _this.panesDimensions = [];\n        _this.border = 0;\n        _this.validDataAttributes = ['data-size', 'data-min', 'data-max', 'data-collapsible',\n            'data-resizable', 'data-content', 'data-collapsed'];\n        _this.validElementAttributes = ['data-orientation', 'data-width', 'data-height'];\n        _this.iconsDelay = 300;\n        _this.templateElement = [];\n        _this.collapseFlag = false;\n        _this.expandFlag = true;\n        return _this;\n    }\n    /**\n     * Gets called when the model property changes.The data that describes the old and new values of the property that changed.\n     *\n     * @param  {SplitterModel} newProp - specifies the new property\n     * @param  {SplitterModel} oldProp - specifies the old property\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.onPropertyChanged = function (newProp, oldProp) {\n        if (!this.element.classList.contains(ROOT)) {\n            return;\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'height':\n                    this.setSplitterSize(this.element, newProp.height, 'height');\n                    break;\n                case 'width':\n                    this.setSplitterSize(this.element, newProp.width, 'width');\n                    break;\n                case 'cssClass':\n                    this.setCssClass(this.element, newProp.cssClass);\n                    break;\n                case 'enabled':\n                    this.isEnabled(this.enabled);\n                    break;\n                case 'enableReversePanes':\n                    this.setReversePane();\n                    break;\n                case 'separatorSize':\n                    this.setSeparatorSize(newProp.separatorSize);\n                    break;\n                case 'orientation':\n                    this.changeOrientation(newProp.orientation);\n                    break;\n                case 'paneSettings': {\n                    if (!(newProp.paneSettings instanceof Array && oldProp.paneSettings instanceof Array)) {\n                        var paneCounts = Object.keys(newProp.paneSettings);\n                        for (var i = 0; i < paneCounts.length; i++) {\n                            var index = parseInt(Object.keys(newProp.paneSettings)[i], 10);\n                            var changedPropsCount = Object.keys(newProp.paneSettings[index]).length;\n                            for (var j = 0; j < changedPropsCount; j++) {\n                                var property = Object.keys(newProp.paneSettings[index])[j];\n                                switch (property) {\n                                    case 'content': {\n                                        var newValue = Object(newProp.paneSettings[index])[property];\n                                        if (!isNullOrUndefined(newValue)) {\n                                            this.allPanes[index].innerHTML = '';\n                                            this.setTemplate(newValue, this.allPanes[index]);\n                                        }\n                                        break;\n                                    }\n                                    case 'resizable': {\n                                        var newVal = Object(newProp.paneSettings[index])[property];\n                                        this.resizableModel(index, newVal);\n                                        break;\n                                    }\n                                    case 'collapsible':\n                                        this.collapsibleModelUpdate(index);\n                                        break;\n                                    case 'collapsed':\n                                        // eslint-disable-next-line\n                                        newProp.paneSettings[index].collapsed ? this.isCollapsed(index) : this.collapsedOnchange(index);\n                                        break;\n                                    case 'cssClass':\n                                        this.setCssClass(this.allPanes[index], newProp.paneSettings[index].cssClass);\n                                        break;\n                                    case 'size': {\n                                        var newValSize = Object(newProp.paneSettings[index])[property];\n                                        if (newValSize !== '' && !isNullOrUndefined(newValSize)) {\n                                            this.updatePaneSize(newValSize, index);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                        }\n                    }\n                    else {\n                        this.destroyPaneSettings();\n                        this.allBars = [];\n                        this.allPanes = [];\n                        this.createSplitPane(this.element);\n                        this.addSeparator(this.element);\n                        this.getPanesDimensions();\n                        this.setRTL(this.enableRtl);\n                        this.isCollapsed();\n                    }\n                    break;\n                }\n                case 'enableRtl':\n                    this.setRTL(newProp.enableRtl);\n                    break;\n            }\n        }\n    };\n    Splitter.prototype.updatePaneSize = function (newValSize, index) {\n        this.allPanes[index].style.flexBasis = newValSize;\n        var flexPaneIndexes = [];\n        var staticPaneWidth;\n        var flexCount = 0;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n            else if (this.paneSettings[i].size) {\n                staticPaneWidth = this.orientation === 'Horizontal' ? this.allPanes[index].offsetWidth : this.allPanes[index].offsetHeight;\n            }\n        }\n        staticPaneWidth = this.orientation === 'Horizontal' ? (this.allBars[0].offsetWidth * this.allBars.length) + staticPaneWidth :\n            (this.allBars[0].offsetHeight * this.allBars.length) + staticPaneWidth;\n        var flexPaneWidth = (this.orientation === 'Horizontal' ? this.element.offsetWidth : this.element.offsetHeight)\n            - staticPaneWidth - (this.border * 2);\n        var avgDiffWidth = flexPaneWidth / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = avgDiffWidth + 'px';\n        }\n        this.allPanes[index].classList.add(STATIC_PANE);\n    };\n    Splitter.prototype.preRender = function () {\n        this.onReportWindowSize = this.reportWindowSize.bind(this);\n        this.onMouseMoveHandler = this.onMouseMove.bind(this);\n        this.onMouseUpHandler = this.onMouseUp.bind(this);\n        this.onTouchMoveHandler = this.onMouseMove.bind(this);\n        this.onTouchEndHandler = this.onMouseUp.bind(this);\n        this.wrapper = this.element.cloneNode(true);\n        this.wrapperParent = this.element.parentElement;\n        removeClass([this.wrapper], ['e-control', 'e-lib', ROOT]);\n        var orientation = this.orientation === 'Horizontal' ? HORIZONTAL_PANE : VERTICAL_PANE;\n        addClass([this.element], orientation);\n        var name = Browser.info.name;\n        var css = (name === 'msie') ? 'e-ie' : '';\n        this.setCssClass(this.element, css);\n        if (Browser.isDevice) {\n            addClass([this.element], SPLIT_TOUCH);\n        }\n    };\n    Splitter.prototype.getPersistData = function () {\n        return this.addOnPersist(['paneSettings']);\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns {string} - returns the string value\n     * @private\n     */\n    Splitter.prototype.getModuleName = function () {\n        return 'splitter';\n    };\n    /**\n     * To Initialize the control rendering\n     *\n     * @returns {void}\n     * @private\n     */\n    Splitter.prototype.render = function () {\n        this.checkDataAttributes();\n        this.setCssClass(this.element, this.cssClass);\n        this.isEnabled(this.enabled);\n        this.setDimension(this.getHeight(this.element), this.getWidth(this.element));\n        this.createSplitPane(this.element);\n        this.addSeparator(this.element);\n        this.getPanesDimensions();\n        this.setPaneSettings();\n        this.setRTL(this.enableRtl);\n        if (this.enableReversePanes) {\n            this.setReversePane();\n        }\n        this.collapseFlag = true;\n        this.isCollapsed();\n        this.collapseFlag = false;\n        EventHandler.add(document, 'touchstart click', this.onDocumentClick, this);\n        this.renderComplete();\n        this.element.ownerDocument.defaultView.addEventListener('resize', this.onReportWindowSize, true);\n        EventHandler.add(this.element, 'keydown', this.onMove, this);\n    };\n    Splitter.prototype.onDocumentClick = function (e) {\n        if (!e.target.classList.contains(SPLIT_BAR) && !isNullOrUndefined(this.currentSeparator)) {\n            this.currentSeparator.classList.remove(SPLIT_BAR_HOVER);\n            this.currentSeparator.classList.remove(SPLIT_BAR_ACTIVE);\n        }\n    };\n    Splitter.prototype.checkPaneSize = function (e) {\n        var prePaneSize = this.orientation === 'Horizontal' ? this.previousPane.offsetWidth : this.previousPane.offsetHeight;\n        var nextPaneSize = this.orientation === 'Horizontal' ? this.nextPane.offsetWidth : this.nextPane.offsetHeight;\n        var splitBarSize = isNullOrUndefined(this.separatorSize) ? BAR_SIZE_DEFAULT : this.separatorSize;\n        if ((this.previousPane.style.flexBasis.indexOf('%') > 0 || this.nextPane.style.flexBasis.indexOf('%') > 0)) {\n            var previousFlexBasis = this.updatePaneFlexBasis(this.previousPane);\n            var nextFlexBasis = this.updatePaneFlexBasis(this.nextPane);\n            this.totalPercent = previousFlexBasis + nextFlexBasis;\n            this.totalWidth = this.convertPercentageToPixel(this.totalPercent + '%');\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) <\n                        this.convertPercentageToPixel((nextFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis + 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis - 1) + '%';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) <\n                        this.convertPercentageToPixel((previousFlexBasis - 1) + '%'))) {\n                    this.previousPane.style.flexBasis = (previousFlexBasis - 1) + '%';\n                    this.nextPane.style.flexBasis = (nextFlexBasis + 1) + '%';\n                }\n            }\n        }\n        else {\n            this.totalWidth = (this.orientation === 'Horizontal') ? this.previousPane.offsetWidth + this.nextPane.offsetWidth :\n                this.previousPane.offsetHeight + this.nextPane.offsetHeight;\n            if (e.type === 'keydown' && (!isNullOrUndefined(e.keyCode))) {\n                if ((e.keyCode === 39 || (e.keyCode === 40)) && nextPaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.nextPaneIndex].min) < (nextPaneSize + splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize + splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize < splitBarSize) ? '0px' :\n                        (nextPaneSize - splitBarSize) + 'px';\n                }\n                else if ((e.keyCode === 37 || (e.keyCode === 38)) && prePaneSize > 0 &&\n                    (this.getMinInPixel(this.paneSettings[this.prevPaneIndex].min) < (prePaneSize - splitBarSize))) {\n                    this.addStaticPaneClass();\n                    this.previousPane.style.flexBasis = (prePaneSize < splitBarSize) ? '0px' :\n                        (prePaneSize - splitBarSize) + 'px';\n                    this.nextPane.style.flexBasis = (nextPaneSize + splitBarSize) + 'px';\n                }\n            }\n        }\n    };\n    Splitter.prototype.onMove = function (event) {\n        if (this.allPanes.length > 1) {\n            var index = this.getSeparatorIndex(this.currentSeparator);\n            var isPrevpaneCollapsed = this.previousPane.classList.contains(COLLAPSE_PANE);\n            var isPrevpaneExpanded = this.previousPane.classList.contains(EXPAND_PANE);\n            var isNextpaneCollapsed = this.nextPane.classList.contains(COLLAPSE_PANE);\n            if (((this.orientation !== 'Horizontal' && event.keyCode === 38) || (this.orientation === 'Horizontal' &&\n                event.keyCode === 39) ||\n                (this.orientation === 'Horizontal' && event.keyCode === 37) || (this.orientation !== 'Horizontal' && event.keyCode === 40))\n                && (!isPrevpaneExpanded && !isNextpaneCollapsed && !isPrevpaneCollapsed || (isPrevpaneExpanded) && !isNextpaneCollapsed) &&\n                document.activeElement.classList.contains(SPLIT_BAR) && (this.paneSettings[index].resizable &&\n                this.paneSettings[index + 1].resizable)) {\n                event.preventDefault();\n                this.checkPaneSize(event);\n                this.triggerResizing(event);\n            }\n            else if (event.keyCode === 13 && this.paneSettings[index].collapsible &&\n                document.activeElement.classList.contains(SPLIT_BAR) && this.currentSeparator.classList.contains(SPLIT_BAR_ACTIVE)) {\n                if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n                    this.collapse(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n                else {\n                    this.expand(index);\n                    addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n                }\n            }\n        }\n    };\n    Splitter.prototype.getMinInPixel = function (minValue) {\n        var min;\n        if (isNullOrUndefined(minValue)) {\n            return 0;\n        }\n        var paneMinRange = this.convertPixelToNumber(minValue.toString());\n        if (minValue.indexOf('%') > 0) {\n            paneMinRange = this.convertPercentageToPixel(minValue);\n        }\n        min = this.convertPixelToNumber((paneMinRange).toString());\n        return min;\n    };\n    /**\n     * @param {string} value - specifies the string value\n     * @returns {string} returns the string\n     * @hidden\n     */\n    Splitter.prototype.sanitizeHelper = function (value) {\n        if (this.enableHtmlSanitizer) {\n            var item = SanitizeHtmlHelper.beforeSanitize();\n            var beforeEvent = {\n                cancel: false,\n                helper: null\n            };\n            extend(item, item, beforeEvent);\n            this.trigger('beforeSanitizeHtml', item);\n            if (item.cancel && !isNullOrUndefined(item.helper)) {\n                value = item.helper(value);\n            }\n            else if (!item.cancel) {\n                value = SanitizeHtmlHelper.serializeValue(item, value);\n            }\n        }\n        return value;\n    };\n    Splitter.prototype.checkDataAttributes = function () {\n        var api;\n        var value;\n        // Element values\n        for (var dataIndex = 0; dataIndex < this.validElementAttributes.length; dataIndex++) {\n            value = this.element.getAttribute(this.validElementAttributes[dataIndex]);\n            if (!isNullOrUndefined(value)) {\n                api = this.removeDataPrefix(this.validElementAttributes[dataIndex]);\n                // eslint-disable-next-line\n                this[api] = value;\n            }\n        }\n        // Pane values\n        for (var paneIndex = 0; paneIndex < this.element.children.length; paneIndex++) {\n            for (var dataAttr = 0; dataAttr < this.validDataAttributes.length; dataAttr++) {\n                value = this.element.children[paneIndex].getAttribute(this.validDataAttributes[dataAttr]);\n                if (!isNullOrUndefined(value)) {\n                    api = this.removeDataPrefix(this.validDataAttributes[dataAttr]);\n                    value = (api === 'collapsible' || api === 'resizable') ? (value === 'true') : value;\n                    if (isNullOrUndefined(this.paneSettings[paneIndex])) {\n                        this.paneSettings[paneIndex] = {\n                            size: '',\n                            min: null,\n                            max: null,\n                            content: '',\n                            resizable: true,\n                            collapsible: false,\n                            collapsed: false\n                        };\n                    }\n                    // eslint-disable-next-line\n                    var paneAPI = this.paneSettings[paneIndex][api];\n                    if (api === 'resizable' || api === 'collapsible' || api === 'collapsed') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                    if (isNullOrUndefined(paneAPI) || paneAPI === '') {\n                        // eslint-disable-next-line\n                        this.paneSettings[paneIndex][api] = value;\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.destroyPaneSettings = function () {\n        [].slice.call(this.element.children).forEach(function (el) {\n            detach(el);\n        });\n        this.restoreElem();\n    };\n    Splitter.prototype.setPaneSettings = function () {\n        var childCount = this.allPanes.length;\n        var paneCollection = [];\n        var paneValue = {\n            size: '',\n            min: null,\n            max: null,\n            content: '',\n            resizable: true,\n            collapsed: false,\n            collapsible: false,\n            cssClass: ''\n        };\n        for (var i = 0; i < childCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i])) {\n                paneCollection[i] = paneValue;\n            }\n            else {\n                paneCollection[i] = this.paneSettings[i];\n            }\n        }\n        this.setProperties({ 'paneSettings': paneCollection }, true);\n    };\n    Splitter.prototype.checkArrow = function (paneIndex, targetArrow) {\n        return (this.allBars[paneIndex].querySelector('.' + NAVIGATE_ARROW + '.' + targetArrow));\n    };\n    Splitter.prototype.removeDataPrefix = function (attribute) {\n        return attribute.slice(attribute.lastIndexOf('-') + 1);\n    };\n    Splitter.prototype.setRTL = function (rtl) {\n        // eslint-disable-next-line\n        rtl ? addClass([this.element], RTL) : removeClass([this.element], RTL);\n    };\n    Splitter.prototype.setReversePane = function () {\n        this.allPanes = this.allPanes.reverse();\n        this.allBars = this.allBars.reverse();\n        addClass([this.allBars[this.allBars.length - 1]], LAST_BAR);\n        removeClass([this.allBars[0]], LAST_BAR);\n        this.setProperties({ 'paneSettings': this.paneSettings.reverse() }, true);\n        if (this.enableReversePanes) {\n            this.element.setAttribute('dir', 'rtl');\n        }\n        else {\n            this.element.removeAttribute('dir');\n        }\n    };\n    Splitter.prototype.setSplitterSize = function (element, size, property) {\n        var style = property === 'width' ? { 'width': formatUnit(size) } : { 'height': formatUnit(size) };\n        setStyleAttribute(element, style);\n    };\n    Splitter.prototype.getPanesDimensions = function () {\n        for (var index = 0; index < this.allPanes.length; index++) {\n            // eslint-disable-next-line\n            this.orientation === 'Horizontal' ? this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().width) :\n                this.panesDimensions.push(this.allPanes[index].getBoundingClientRect().height);\n        }\n    };\n    Splitter.prototype.setCssClass = function (element, className) {\n        if (className) {\n            addClass([element], className.split(className.indexOf(',') > -1 ? ',' : ' '));\n        }\n    };\n    Splitter.prototype.hideResizer = function (target) {\n        addClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n    };\n    Splitter.prototype.showResizer = function (target) {\n        if (!isNullOrUndefined(this.previousPane) && this.previousPane.classList.contains(RESIZABLE_PANE) &&\n            !isNullOrUndefined(this.nextPane) && this.nextPane.classList.contains(RESIZABLE_PANE)) {\n            removeClass([select('.' + RESIZE_BAR, target)], HIDE_HANDLER);\n        }\n    };\n    Splitter.prototype.resizableModel = function (index, newVal) {\n        var paneIndex = (index === (this.allBars.length)) ? (index - 1) : index;\n        var i = index;\n        EventHandler.remove(this.allBars[paneIndex], 'mousedown', this.onMouseDown);\n        if (newVal) {\n            EventHandler.add(this.allBars[paneIndex], 'mousedown', this.onMouseDown, this);\n            if (this.isResizable()) {\n                this.showResizer(this.allBars[paneIndex]);\n                removeClass([select('.' + RESIZE_BAR, this.allBars[paneIndex])], HIDE_HANDLER);\n                this.allBars[paneIndex].classList.add(RESIZABLE_BAR);\n                // eslint-disable-next-line\n                (index === (this.allBars.length)) ? this.allPanes[index].classList.add(RESIZABLE_PANE) :\n                    this.allPanes[paneIndex].classList.add(RESIZABLE_PANE);\n                this.updateResizablePanes(i);\n            }\n        }\n        else {\n            this.updateResizablePanes(i);\n            this.hideResizer(this.allBars[paneIndex]);\n            this.allBars[paneIndex].classList.remove(RESIZABLE_BAR);\n            // eslint-disable-next-line\n            (index === (this.allBars.length)) ? this.allPanes[index].classList.remove(RESIZABLE_PANE) :\n                this.allPanes[paneIndex].classList.remove(RESIZABLE_PANE);\n        }\n    };\n    Splitter.prototype.collapsibleModelUpdate = function (index) {\n        var paneIndex = index === (this.allBars.length) ? (index - 1) : index;\n        var arrow2 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_LEFT) : this.checkArrow(paneIndex, ARROW_UP);\n        var arrow1 = (this.orientation === 'Horizontal')\n            ? this.checkArrow(paneIndex, ARROW_RIGHT) : this.checkArrow(paneIndex, ARROW_DOWN);\n        this.paneCollapsible(this.allPanes[index], index);\n        this.updateCollapseIcons(paneIndex, arrow1, arrow2);\n    };\n    Splitter.prototype.collapseArrow = function (barIndex, arrow) {\n        return selectAll('.' + arrow, this.allBars[barIndex])[0];\n    };\n    Splitter.prototype.updateIsCollapsed = function (index, collapseArrow, lastBarArrow) {\n        if (!isNullOrUndefined(index)) {\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, lastBarArrow) : this.collapseArrow(barIndex, collapseArrow);\n            }\n            targetEle.click();\n        }\n    };\n    Splitter.prototype.isCollapsed = function (index) {\n        var _this = this;\n        if (!isNullOrUndefined(index) && this.paneSettings[index].collapsed\n            && isNullOrUndefined(this.allPanes[index].classList.contains(COLLAPSE_PANE))) {\n            return;\n        }\n        this.expandFlag = false;\n        if (!isNullOrUndefined(index)) {\n            this.collapseFlag = true;\n            var targetEle = void 0;\n            var lastBarIndex = (index === this.allBars.length);\n            var barIndex = lastBarIndex ? index - 1 : index;\n            if (!lastBarIndex && this.allPanes[index + 1].classList.contains(COLLAPSE_PANE) && index !== 0) {\n                targetEle = this.collapseArrow(barIndex - 1, this.targetArrows().lastBarArrow);\n            }\n            else {\n                targetEle = (lastBarIndex) ? this.collapseArrow(barIndex, this.targetArrows().lastBarArrow) :\n                    this.collapseArrow(barIndex, this.targetArrows().collapseArrow);\n            }\n            var event_1 = { target: targetEle };\n            var eventArgs = this.beforeAction(event_1);\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    var collapsedindex = [];\n                    collapsedindex[0] = index;\n                    var j = 1;\n                    for (var i = 0; i < _this.allPanes.length; i++) {\n                        if (_this.allPanes[i].classList.contains(COLLAPSE_PANE)) {\n                            collapsedindex[j] = i;\n                            j++;\n                        }\n                    }\n                    collapsedindex = collapsedindex.sort();\n                    _this.updateIsCollapsed(index, _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                    for (var i = 0; i < collapsedindex.length; i++) {\n                        if (!_this.allPanes[collapsedindex[i]].classList.contains(COLLAPSE_PANE)) {\n                            _this.updateIsCollapsed(collapsedindex[i], _this.targetArrows().collapseArrow, _this.targetArrows().lastBarArrow);\n                        }\n                    }\n                    for (var i = collapsedindex.length; i > 0; i--) {\n                        if (!_this.allPanes[collapsedindex[i - 1]].classList.contains(COLLAPSE_PANE)) {\n                            var targetArrow = _this.targetArrows();\n                            _this.updateIsCollapsed(collapsedindex[i - 1], targetArrow.collapseArrow, targetArrow.lastBarArrow);\n                        }\n                    }\n                    var collapseEventArgs = _this.afterAction(event_1);\n                    _this.trigger('collapsed', collapseEventArgs);\n                    _this.collapseFlag = false;\n                }\n            });\n        }\n        else {\n            for (var m = 0; m < this.allPanes.length; m++) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed) {\n                    this.updateIsCollapsed(m, this.targetArrows().collapseArrow, this.targetArrows().lastBarArrow);\n                }\n            }\n            for (var m = this.allPanes.length - 1; m >= 0; m--) {\n                if (!isNullOrUndefined(this.paneSettings[m]) && this.paneSettings[m].collapsed &&\n                    !this.allPanes[m].classList.contains(COLLAPSE_PANE)) {\n                    var collapseArrow = this.orientation === 'Horizontal' ? ARROW_RIGHT : ARROW_DOWN;\n                    if (m !== 0) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                    if (!this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                        var targetEle = this.collapseArrow(m - 1, collapseArrow);\n                        targetEle.click();\n                    }\n                }\n            }\n        }\n        this.expandFlag = true;\n    };\n    Splitter.prototype.targetArrows = function () {\n        this.splitterProperty();\n        return {\n            collapseArrow: (this.orientation === 'Horizontal') ? ARROW_LEFT : ARROW_UP,\n            lastBarArrow: (this.orientation === 'Vertical') ? ARROW_DOWN : ARROW_RIGHT\n        };\n    };\n    Splitter.prototype.collapsedOnchange = function (index) {\n        if (!isNullOrUndefined(this.paneSettings[index]) && !isNullOrUndefined(this.paneSettings[index].collapsed)\n            && this.allPanes[index].classList.contains(COLLAPSE_PANE)) {\n            this.updateIsCollapsed(index, this.targetArrows().lastBarArrow, this.targetArrows().collapseArrow);\n        }\n    };\n    Splitter.prototype.isEnabled = function (enabled) {\n        // eslint-disable-next-line\n        enabled ? removeClass([this.element], DISABLED) : addClass([this.element], DISABLED);\n    };\n    Splitter.prototype.setSeparatorSize = function (size) {\n        var sizeValue = isNullOrUndefined(size) ? 'auto' : size + 'px';\n        var separator = this.orientation === 'Horizontal' ? SPLIT_H_BAR : SPLIT_V_BAR;\n        for (var index = 0; index < this.allBars.length; index++) {\n            var splitBar = selectAll('.' + separator, this.element)[index];\n            var resizeBar = selectAll('.' + RESIZE_BAR, splitBar)[0];\n            if (this.orientation === 'Horizontal') {\n                splitBar.style.width = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.width = sizeValue;\n                }\n            }\n            else {\n                splitBar.style.height = sizeValue;\n                if (!isNullOrUndefined(resizeBar)) {\n                    resizeBar.style.height = sizeValue;\n                }\n            }\n        }\n    };\n    Splitter.prototype.changeOrientation = function (orientation) {\n        var isVertical = orientation === 'Vertical';\n        this.element.classList.remove(isVertical ? HORIZONTAL_PANE : VERTICAL_PANE);\n        this.element.classList.add(isVertical ? VERTICAL_PANE : HORIZONTAL_PANE);\n        for (var index = 0; index < this.allPanes.length; index++) {\n            this.allPanes[index].classList.remove(isVertical ? SPLIT_H_PANE : SPLIT_V_PANE);\n            this.allPanes[index].classList.add(isVertical ? SPLIT_V_PANE : SPLIT_H_PANE);\n        }\n        for (var index = 0; index < this.allBars.length; index++) {\n            detach(this.allBars[index]);\n        }\n        this.allBars = [];\n        this.addSeparator(this.element);\n    };\n    Splitter.prototype.checkSplitPane = function (currentBar, elementIndex) {\n        var paneEle = this.collectPanes(currentBar.parentElement.children)[elementIndex];\n        return paneEle;\n    };\n    Splitter.prototype.collectPanes = function (childNodes) {\n        var elements = [];\n        for (var i = 0; i < childNodes.length; i++) {\n            if (childNodes[i].classList.contains(PANE)) {\n                elements.push(childNodes[i]);\n            }\n        }\n        return elements;\n    };\n    Splitter.prototype.getPrevPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order + 1) : this.getOrderPane(order - 1);\n    };\n    Splitter.prototype.getNextPane = function (order) {\n        return this.enableReversePanes ? this.getOrderPane(order - 1) : this.getOrderPane(order + 1);\n    };\n    Splitter.prototype.getOrderPane = function (order) {\n        var pane;\n        for (var i = 0; i < this.element.children.length; i++) {\n            if (parseInt(this.element.children[i].style.order, 10) === order) {\n                pane = this.element.children[i];\n            }\n        }\n        return pane;\n    };\n    Splitter.prototype.getOrderIndex = function (order, type) {\n        var index;\n        var panes;\n        if (type === 'pane') {\n            panes = this.allPanes;\n        }\n        else {\n            panes = this.allBars;\n        }\n        for (var i = 0; i < panes.length; i++) {\n            if (parseInt(panes[i].style.order, 10) === order) {\n                index = i;\n            }\n        }\n        return index;\n    };\n    Splitter.prototype.updateSeparatorSize = function (resizeHanlder) {\n        var sizeValue = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? (resizeHanlder.style.width = sizeValue) : resizeHanlder.style.height = sizeValue;\n    };\n    Splitter.prototype.addResizeHandler = function (currentBar) {\n        var resizeHanlder = this.createElement('div');\n        addClass([resizeHanlder], [RESIZE_BAR, E_ICONS]);\n        this.updateSeparatorSize(resizeHanlder);\n        currentBar.appendChild(resizeHanlder);\n    };\n    Splitter.prototype.getHeight = function (target) {\n        var height = this.height;\n        height = target.style.height !== '' && this.height === '100%' ? target.style.height : this.height;\n        return height;\n    };\n    Splitter.prototype.getWidth = function (target) {\n        var width = this.width;\n        width = target.style.width !== '' && this.width === '100%' ? target.style.width : this.width;\n        return width;\n    };\n    Splitter.prototype.setDimension = function (height, width) {\n        setStyleAttribute(this.element, { 'height': height, 'width': width });\n    };\n    Splitter.prototype.updateCollapseIcons = function (index, arrow1, arrow2) {\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].collapsible)) {\n                // eslint-disable-next-line\n                this.paneSettings[index].collapsible ? removeClass([arrow2], [HIDE_ICON]) : addClass([arrow2], [HIDE_ICON]);\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    // eslint-disable-next-line\n                    this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                }\n                if (!isNullOrUndefined(this.paneSettings[index + 1])) {\n                    if ((this.paneSettings[index + 1].collapsible)) {\n                        // eslint-disable-next-line\n                        this.paneSettings[index + 1].collapsible ? removeClass([arrow1], [HIDE_ICON]) : addClass([arrow1], [HIDE_ICON]);\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.updateIconClass = function () {\n        if (this.orientation === 'Horizontal') {\n            this.leftArrow = ARROW_LEFT;\n            this.rightArrow = ARROW_RIGHT;\n        }\n        else {\n            this.leftArrow = ARROW_UP;\n            this.rightArrow = ARROW_DOWN;\n        }\n    };\n    Splitter.prototype.createSeparator = function (i) {\n        var separator = this.createElement('div');\n        this.allBars.push(separator);\n        var arrow1 = this.createElement('button');\n        var arrow2 = this.createElement('button');\n        arrow1.setAttribute('tabindex', '-1');\n        arrow2.setAttribute('tabindex', '-1');\n        arrow1.setAttribute('aria-label', 'Toggle navigation');\n        arrow2.setAttribute('aria-label', 'Toggle navigation');\n        arrow1.setAttribute('type', 'button');\n        arrow2.setAttribute('type', 'button');\n        var size = isNullOrUndefined(this.separatorSize) ? '1px' : this.separatorSize + 'px';\n        // eslint-disable-next-line\n        var proxy = this;\n        if (this.orientation === 'Horizontal') {\n            this.updateIconClass();\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_LEFT, HIDE_ICON]);\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_RIGHT, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_H_BAR]);\n            separator.style.width = size;\n        }\n        else {\n            addClass([arrow1], [NAVIGATE_ARROW, ARROW_DOWN, HIDE_ICON]);\n            addClass([arrow2], [NAVIGATE_ARROW, ARROW_UP, HIDE_ICON]);\n            addClass([separator], [SPLIT_BAR, SPLIT_V_BAR]);\n            this.updateIconClass();\n            separator.style.height = size;\n        }\n        this.addMouseActions(separator);\n        separator.appendChild(arrow2);\n        this.addResizeHandler(separator);\n        separator.appendChild(arrow1);\n        this.updateCollapseIcons(i, arrow1, arrow2);\n        separator.setAttribute('tabindex', '0');\n        if (this.enableReversePanes) {\n            separator.setAttribute('dir', 'ltr');\n        }\n        else {\n            separator.removeAttribute('dir');\n        }\n        separator.addEventListener('focus', function () {\n            separator.classList.add(SPLIT_BAR_ACTIVE);\n            proxy.currentSeparator = separator;\n            proxy.getPaneDetails();\n        });\n        separator.addEventListener('blur', function () {\n            separator.classList.remove(SPLIT_BAR_ACTIVE);\n        });\n        return separator;\n    };\n    Splitter.prototype.updateResizablePanes = function (index) {\n        this.getPaneDetails();\n        // eslint-disable-next-line\n        this.isResizable() ? this.allPanes[index].classList.add(RESIZABLE_PANE) : this.allPanes[index].classList.remove(RESIZABLE_PANE);\n    };\n    Splitter.prototype.addSeparator = function (target) {\n        var childCount = this.allPanes.length;\n        var clonedEle = target.children;\n        var separator;\n        var proxy;\n        for (var i = 0; i < childCount; i++) {\n            if (i < childCount - 1) {\n                separator = this.createSeparator(i);\n                setStyleAttribute(separator, { 'order': (i * 2) + 1 });\n                this.separatorOrder.push((i * 2) + 1);\n                clonedEle[i].parentNode.appendChild(separator);\n                this.currentSeparator = separator;\n                separator.setAttribute('role', 'separator');\n                separator.setAttribute('aria-orientation', this.orientation.toLowerCase());\n                this.wireClickEvents();\n                if (!isNullOrUndefined(separator)) {\n                    if (this.isResizable()) {\n                        EventHandler.add(separator, 'mousedown', this.onMouseDown, this);\n                        var eventName = (Browser.info.name === 'msie') ? 'pointerdown' : 'touchstart';\n                        EventHandler.add(separator, eventName, this.onMouseDown, this);\n                        separator.classList.add(RESIZABLE_BAR);\n                        this.updateResizablePanes(i);\n                    }\n                    else {\n                        addClass([select('.' + RESIZE_BAR, separator)], HIDE_HANDLER);\n                    }\n                }\n            }\n            else {\n                if (separator) {\n                    addClass([separator], LAST_BAR);\n                }\n                if (childCount > 1) {\n                    this.updateResizablePanes(i);\n                }\n            }\n        }\n        if (Browser.info.name === 'msie') {\n            var allBar = this.element.querySelectorAll('.e-splitter .e-resize-handler');\n            for (var i = 0; i < allBar.length; i++) {\n                var sepSize = isNullOrUndefined(this.separatorSize) ? 1 : this.separatorSize;\n                allBar[i].style.paddingLeft = sepSize / 2 + 'px';\n                allBar[i].style.paddingRight = sepSize / 2 + 'px';\n            }\n        }\n    };\n    Splitter.prototype.isResizable = function () {\n        var resizable = false;\n        if ((!isNullOrUndefined(this.paneSettings[this.getPreviousPaneIndex()]) &&\n            this.paneSettings[this.getPreviousPaneIndex()].resizable &&\n            !isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()]) &&\n            this.paneSettings[this.getNextPaneIndex()].resizable) ||\n            isNullOrUndefined(this.paneSettings[this.getNextPaneIndex()])) {\n            resizable = true;\n        }\n        return resizable;\n    };\n    Splitter.prototype.addMouseActions = function (separator) {\n        var _this = this;\n        var sTout;\n        var hoverTimeOut;\n        separator.addEventListener('mouseenter', function () {\n            /* istanbul ignore next */\n            sTout = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n        separator.addEventListener('mouseleave', function () {\n            clearTimeout(sTout);\n            removeClass([separator], [SPLIT_BAR_HOVER]);\n        });\n        separator.addEventListener('mouseout', function () {\n            clearTimeout(hoverTimeOut);\n        });\n        separator.addEventListener('mouseover', function () {\n            /* istanbul ignore next */\n            hoverTimeOut = setTimeout(function () {\n                addClass([separator], [SPLIT_BAR_HOVER]);\n            }, _this.iconsDelay);\n        });\n    };\n    Splitter.prototype.getEventType = function (e) {\n        return (e.indexOf('mouse') > -1) ? 'mouse' : 'touch';\n    };\n    Splitter.prototype.updateCurrentSeparator = function (target) {\n        this.currentSeparator = this.isSeparator(target) ? target.parentElement : target;\n    };\n    Splitter.prototype.isSeparator = function (target) {\n        return (target.classList.contains(SPLIT_BAR) ? false : true);\n    };\n    Splitter.prototype.isMouseEvent = function (e) {\n        var isMouse = false;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType) &&\n            this.getEventType(e.pointerType) === 'mouse')) {\n            isMouse = true;\n        }\n        return isMouse;\n    };\n    Splitter.prototype.updateCursorPosition = function (e, type) {\n        if (this.isMouseEvent(e)) {\n            this.changeCoordinates({ x: e.pageX, y: e.pageY }, type);\n        }\n        else {\n            var eventType = Browser.info.name !== 'msie' ? e.touches[0] : e;\n            this.changeCoordinates({ x: eventType.pageX, y: eventType.pageY }, type);\n        }\n    };\n    Splitter.prototype.changeCoordinates = function (coordinates, type) {\n        if (type === 'previous') {\n            this.previousCoordinates = coordinates;\n        }\n        else {\n            this.currentCoordinates = coordinates;\n        }\n    };\n    Splitter.prototype.reportWindowSize = function () {\n        var _this = this;\n        var paneCount = this.allPanes.length;\n        if (!document.body.contains(this.element)) {\n            document.defaultView.removeEventListener('resize', this.onReportWindowSize);\n            return;\n        }\n        for (var i = 0; i < paneCount; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n            if (paneCount - 1 === i) {\n                var staticPaneCount = this.element.querySelectorAll('.' + STATIC_PANE).length;\n                if (staticPaneCount === paneCount) {\n                    removeClass([this.allPanes[i]], STATIC_PANE);\n                }\n            }\n        }\n        if (paneCount > 0) {\n            setTimeout(function () {\n                _this.updateSplitterSize(true);\n            }, 200);\n        }\n    };\n    Splitter.prototype.updateSplitterSize = function (iswindowResize) {\n        var totalWidth = 0;\n        var flexPaneIndexes = [];\n        var flexCount = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        for (var j = 0; j < this.allBars.length; j++) {\n            totalWidth += this.orientation === 'Horizontal' ? parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginLeft, 10) : parseInt(getComputedStyle(this.allBars[j]).marginTop, 10) +\n                parseInt(getComputedStyle(this.allBars[j]).marginBottom, 10);\n        }\n        var diff = this.orientation === 'Horizontal' ? this.element.offsetWidth -\n            ((this.border * 2) + totalWidth) :\n            this.element.offsetHeight - ((this.border * 2) + totalWidth);\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.paneSettings[i].size && !(this.allPanes[i].innerText === '')) {\n                flexPaneIndexes[flexCount] = i;\n                flexCount++;\n            }\n        }\n        var avgDiffWidth = diff / flexPaneIndexes.length;\n        for (var j = 0; j < flexPaneIndexes.length; j++) {\n            this.allPanes[flexPaneIndexes[j]].style.flexBasis = this.orientation === 'Horizontal' ?\n                (this.allPanes[flexPaneIndexes[j]].offsetWidth + avgDiffWidth) + 'px' :\n                (this.allPanes[flexPaneIndexes[j]].offsetHeight + avgDiffWidth) + 'px';\n        }\n        if (this.allPanes.length === 2 && iswindowResize) {\n            var paneCount = this.allPanes.length;\n            var minValue = void 0;\n            var paneMinRange = void 0;\n            var paneIndex = 0;\n            var updatePane = void 0;\n            var flexPane = void 0;\n            for (var i = 0; i < paneCount; i++) {\n                if (!isNullOrUndefined(this.paneSettings[i].min)) {\n                    paneMinRange = this.convertPixelToNumber((this.paneSettings[i].min).toString());\n                    if (this.paneSettings[i].min.indexOf('%') > 0) {\n                        paneMinRange = this.convertPercentageToPixel(this.paneSettings[i].min);\n                    }\n                    minValue = this.convertPixelToNumber((paneMinRange).toString());\n                    if (this.allPanes[i].offsetWidth < minValue) {\n                        if (i === paneIndex) {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i + 1];\n                        }\n                        else {\n                            updatePane = this.allPanes[i];\n                            flexPane = this.allPanes[i - 1];\n                        }\n                        var sizeDiff = minValue - this.allPanes[i].offsetWidth;\n                        var isPercent = updatePane.style.flexBasis.indexOf('%') > -1;\n                        updatePane.style.flexBasis = isPercent ? this.convertPixelToPercentage(updatePane.offsetWidth + sizeDiff) + '%'\n                            : (updatePane.offsetWidth + sizeDiff) + 'px';\n                        flexPane.style.flexBasis = flexPane.style.flexBasis.indexOf('%') > -1 ?\n                            this.convertPixelToPercentage(flexPane.offsetWidth - sizeDiff) + '%' : (flexPane.offsetWidth - sizeDiff) + 'px';\n                    }\n                }\n            }\n        }\n    };\n    Splitter.prototype.wireResizeEvents = function () {\n        document.addEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.addEventListener('mouseup', this.onMouseUpHandler, true);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.addEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.addEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.unwireResizeEvents = function () {\n        this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize);\n        var touchMoveEvent = (Browser.info.name === 'msie') ? 'pointermove' : 'touchmove';\n        var touchEndEvent = (Browser.info.name === 'msie') ? 'pointerup' : 'touchend';\n        document.removeEventListener('mousemove', this.onMouseMoveHandler, true);\n        document.removeEventListener('mouseup', this.onMouseUpHandler, true);\n        document.removeEventListener(touchMoveEvent, this.onTouchMoveHandler, true);\n        document.removeEventListener(touchEndEvent, this.onTouchEndHandler, true);\n    };\n    Splitter.prototype.wireClickEvents = function () {\n        EventHandler.add(this.currentSeparator, 'touchstart click', this.clickHandler, this);\n    };\n    Splitter.prototype.clickHandler = function (e) {\n        if (!e.target.classList.contains(NAVIGATE_ARROW)) {\n            var hoverBars = selectAll('.' + ROOT + ' > .' + SPLIT_BAR + '.' + SPLIT_BAR_HOVER);\n            if (hoverBars.length > 0) {\n                removeClass(hoverBars, SPLIT_BAR_HOVER);\n            }\n            e.target.classList.add(SPLIT_BAR_HOVER);\n        }\n        var icon = e.target;\n        if (icon.classList.contains(ARROW_LEFT) || icon.classList.contains(ARROW_UP)) {\n            this.collapseAction(e);\n        }\n        if (icon.classList.contains(ARROW_RIGHT) || icon.classList.contains(ARROW_DOWN)) {\n            this.expandAction(e);\n        }\n        var totalWidth = 0;\n        var children = this.element.children;\n        for (var i = 0; i < children.length; i++) {\n            totalWidth += this.orientation === 'Horizontal' ? children[i].offsetWidth :\n                children[i].offsetHeight;\n        }\n        if (totalWidth > this.element.offsetWidth) {\n            this.updateSplitterSize();\n        }\n    };\n    Splitter.prototype.expandAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.expandFlag) {\n            this.trigger('beforeExpand', eventArgs, function (beforeExpandArgs) {\n                if (!beforeExpandArgs.cancel) {\n                    _this.expandPane(e);\n                }\n                var expandEventArgs = _this.afterAction(e);\n                _this.trigger('expanded', expandEventArgs);\n            });\n        }\n        else {\n            this.expandPane(e);\n        }\n    };\n    Splitter.prototype.expandPane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (!this.previousPane.classList.contains(COLLAPSE_PANE) &&\n            this.previousPane.classList.contains(STATIC_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.nextPane.classList.contains(EXPAND_PANE) && this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) && !(collapseCount === this.allPanes.length - 2));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (!this.previousPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.nextPane], EXPAND_PANE);\n            removeClass([this.previousPane], collapseClass);\n            addClass([this.previousPane], EXPAND_PANE);\n            addClass([this.nextPane], collapseClass);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, true);\n            }\n        }\n        else {\n            removeClass([this.previousPane], collapseClass);\n            removeClass([this.nextPane], EXPAND_PANE);\n            if (this.expandFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, false);\n            }\n        }\n        this.updateIconsOnExpand(e);\n        this.previousPane.setAttribute('aria-expanded', 'true');\n        this.nextPane.setAttribute('aria-expanded', 'false');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.previousPane.classList.remove(EXPAND_PANE);\n            this.previousPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.checkStaticPanes = function () {\n        var staticPane = true;\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (!this.allPanes[i].classList.contains(COLLAPSE_PANE) && staticPane) {\n                if (this.allPanes[i].classList.contains(STATIC_PANE)) {\n                    staticPane = true;\n                }\n                else {\n                    staticPane = false;\n                }\n            }\n        }\n        return staticPane;\n    };\n    Splitter.prototype.updateFlexGrow = function (status) {\n        var collapseCount = 0;\n        for (var j = 0; j < this.element.children.length; j++) {\n            if (this.element.children[j].classList.contains(COLLAPSE_PANE)) {\n                collapseCount = collapseCount + 1;\n            }\n        }\n        var visiblePane = collapseCount === this.allPanes.length - 2;\n        var panes = this.allPanes;\n        for (var i = 0; i < panes.length; i++) {\n            if (panes[i].classList.contains(EXPAND_PANE)) {\n                panes[i].style.flexGrow = '1';\n            }\n            else if (panes[i].classList.contains(COLLAPSE_PANE)) {\n                panes[i].style.flexGrow = '0';\n            }\n            else {\n                panes[i].style.flexGrow = '';\n            }\n            if (status && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n                this.nextPane.style.flexGrow = '1';\n            }\n            if (visiblePane && !this.allPanes[i].classList.contains(COLLAPSE_PANE) && this.paneSettings[i].size &&\n                i !== this.allPanes.length - 1) {\n                panes[i].style.flexGrow = '';\n            }\n        }\n    };\n    Splitter.prototype.hideTargetBarIcon = function (targetBar, targetArrow) {\n        addClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.showTargetBarIcon = function (targetBar, targetArrow) {\n        removeClass([select('.' + targetArrow, targetBar)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnCollapse = function (e) {\n        this.splitterProperty();\n        if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            addClass([e.target], HIDE_ICON);\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            this.resizableModel(this.currentBarIndex, false);\n            if (this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.prevBar, this.rightArrow);\n            }\n            if (this.previousPane.previousElementSibling && !this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE)) {\n                if (this.previousPane.classList.contains(COLLAPSE_PANE) && this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.leftArrow);\n                }\n            }\n            if (!isNullOrUndefined(this.prevBar)) {\n                this.resizableModel(this.currentBarIndex - 1, false);\n                this.hideTargetBarIcon(this.prevBar, this.arrow);\n            }\n            if (!this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n        }\n        else if (!this.splitInstance.prevPaneCollapsed && !this.splitInstance.nextPaneExpanded) {\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!this.splitInstance.nextPaneNextEle.classList.contains(COLLAPSE_PANE) &&\n                this.paneSettings[this.currentBarIndex + 1].resizable) {\n                this.resizableModel(this.currentBarIndex + 1, true);\n            }\n            if (!this.paneSettings[this.currentBarIndex].collapsible) {\n                addClass([e.target], HIDE_ICON);\n            }\n            if (this.previousPane && this.prevPaneIndex === 0 && (this.paneSettings[this.prevPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.currentSeparator, this.leftArrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (this.paneSettings[this.nextPaneIndex].collapsible)) {\n                this.showTargetBarIcon(this.getPrevBar(this.nextPaneIndex), this.rightArrow);\n            }\n            if (!(this.previousPane.classList.contains(COLLAPSE_PANE)) && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.currentSeparator, this.rightArrow);\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                if (this.nextPane.nextElementSibling && (this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                    this.paneSettings[this.nextPaneIndex + 1].collapsible) ||\n                    (!this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.nextPaneIndex].collapsible)) {\n                    this.showTargetBarIcon(this.nextBar, this.leftArrow);\n                }\n                else if (!this.paneSettings[this.splitInstance.nextPaneIndex + 1].collapsible &&\n                    this.paneSettings[this.currentBarIndex]) {\n                    this.hideTargetBarIcon(this.nextBar, this.arrow);\n                }\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                !this.nextPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && !this.paneSettings[this.nextPaneIndex + 1].collapsible) {\n                this.hideTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.collapseAction = function (e) {\n        var _this = this;\n        this.splitterDetails(e);\n        var eventArgs = this.beforeAction(e);\n        if (this.collapseFlag) {\n            this.collapsePane(e);\n        }\n        else {\n            this.trigger('beforeCollapse', eventArgs, function (beforeCollapseArgs) {\n                if (!beforeCollapseArgs.cancel) {\n                    _this.collapsePane(e);\n                    var collapseEventArgs = _this.afterAction(e);\n                    _this.trigger('collapsed', collapseEventArgs);\n                }\n            });\n        }\n    };\n    Splitter.prototype.collapsePane = function (e) {\n        this.removeStaticPanes();\n        var collapseCount = this.element.querySelectorAll('.' + COLLAPSE_PANE).length;\n        var flexStatus = (this.previousPane.classList.contains(STATIC_PANE) &&\n            !this.previousPane.classList.contains(COLLAPSE_PANE) && !this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            this.nextPane.nextElementSibling.classList.contains(PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(STATIC_PANE) &&\n            !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE) &&\n            !(collapseCount === this.allPanes.length - 2)) || (this.nextPane.classList.contains(COLLAPSE_PANE) &&\n            !this.previousPane.classList.contains(STATIC_PANE) && this.nextPane.classList.contains(STATIC_PANE));\n        var collapseClass = [COLLAPSE_PANE, PANE_HIDDEN];\n        if (this.nextPane.classList.contains(COLLAPSE_PANE)) {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.nextPaneIndex, false);\n            }\n        }\n        else {\n            removeClass([this.previousPane], EXPAND_PANE);\n            removeClass([this.nextPane], collapseClass);\n            addClass([this.nextPane], EXPAND_PANE);\n            addClass([this.previousPane], collapseClass);\n            if (!this.collapseFlag) {\n                this.updatePaneSettings(this.prevPaneIndex, true);\n            }\n        }\n        this.updateIconsOnCollapse(e);\n        this.previousPane.setAttribute('aria-expanded', 'false');\n        this.nextPane.setAttribute('aria-expanded', 'true');\n        this.updateFlexGrow(this.checkStaticPanes());\n        if (flexStatus) {\n            this.nextPane.classList.remove(EXPAND_PANE);\n            this.nextPane.style.flexGrow = '';\n        }\n    };\n    Splitter.prototype.removeStaticPanes = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            if (isNullOrUndefined(this.paneSettings[i].size)) {\n                this.allPanes[i].classList.remove(STATIC_PANE);\n            }\n        }\n    };\n    Splitter.prototype.beforeAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.updatePaneSettings = function (index, collapsed) {\n        var paneValues = this.paneSettings;\n        paneValues[index].collapsed = collapsed;\n        this.setProperties({ 'paneSettings': paneValues }, true);\n    };\n    Splitter.prototype.splitterProperty = function () {\n        this.splitInstance = {\n            currentBarIndex: this.currentBarIndex,\n            nextPaneCollapsible: this.nextPane.classList.contains(COLLAPSIBLE),\n            prevPaneCollapsible: this.previousPane.classList.contains(COLLAPSIBLE),\n            prevPaneExpanded: this.previousPane.classList.contains(EXPAND_PANE),\n            nextPaneExpanded: this.nextPane.classList.contains(EXPAND_PANE),\n            nextPaneCollapsed: this.nextPane.classList.contains(COLLAPSE_PANE),\n            prevPaneCollapsed: this.previousPane.classList.contains(COLLAPSE_PANE),\n            nextPaneIndex: this.getNextPaneIndex(),\n            prevPaneIndex: this.getPreviousPaneIndex(),\n            nextPaneNextEle: this.nextPane.nextElementSibling,\n            prevPanePreEle: this.previousPane.previousElementSibling\n        };\n    };\n    Splitter.prototype.showCurrentBarIcon = function () {\n        removeClass([select('.' + this.arrow, this.currentSeparator)], HIDE_ICON);\n    };\n    Splitter.prototype.updateIconsOnExpand = function (e) {\n        this.splitterProperty();\n        addClass([e.target], HIDE_ICON);\n        if (!this.splitInstance.prevPaneExpanded && !this.splitInstance.nextPaneCollapsed) {\n            if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                removeClass([e.target], HIDE_ICON);\n            }\n            if (this.paneSettings[this.currentBarIndex].resizable) {\n                this.resizableModel(this.currentBarIndex, true);\n            }\n            if (!isNullOrUndefined(this.prevBar) &&\n                !this.splitInstance.prevPanePreEle.classList.contains(COLLAPSE_PANE)) {\n                if (this.paneSettings[this.currentBarIndex - 1].resizable) {\n                    this.resizableModel(this.currentBarIndex - 1, true);\n                }\n                if (this.paneSettings[this.prevPaneIndex].collapsible) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex - 1].collapsible) {\n                    this.hideTargetBarIcon(this.prevBar, this.arrow);\n                    if (this.paneSettings[this.currentBarIndex].collapsible &&\n                        !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                        this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                    }\n                }\n                else if (this.paneSettings[this.currentBarIndex].collapsible &&\n                    !this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n            else {\n                if (this.previousPane.previousElementSibling && this.paneSettings[this.prevPaneIndex].collapsible &&\n                    (this.previousPane.previousElementSibling.classList.contains(COLLAPSE_PANE) &&\n                        this.paneSettings[this.prevPaneIndex - 1].collapsible)) {\n                    this.showTargetBarIcon(this.prevBar, this.rightArrow);\n                }\n                if (!this.paneSettings[this.currentBarIndex + 1].collapsible) {\n                    this.hideTargetBarIcon(this.currentSeparator, this.rightArrow);\n                }\n            }\n        }\n        else if (this.splitInstance.prevPaneExpanded && this.splitInstance.nextPaneCollapsed) {\n            this.resizableModel(this.currentBarIndex, false);\n            this.resizableModel(this.currentBarIndex + 1, false);\n            if (this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showCurrentBarIcon();\n            }\n            if (!isNullOrUndefined(this.nextBar)) {\n                this.hideTargetBarIcon(this.nextBar, this.arrow);\n            }\n            if (this.nextPane && this.nextPaneIndex === this.allPanes.length - 1 && (!this.paneSettings[this.nextPaneIndex].collapsible &&\n                this.splitInstance.nextPaneCollapsed)) {\n                this.hideTargetBarIcon(this.currentSeparator, this.arrow);\n            }\n            if (!(this.nextPaneIndex === this.allPanes.length - 1) && this.nextPane.nextElementSibling &&\n                this.nextPane.classList.contains(COLLAPSE_PANE) &&\n                !this.nextPane.nextElementSibling.classList.contains(COLLAPSE_PANE)\n                && this.paneSettings[this.nextPaneIndex].collapsible) {\n                this.showTargetBarIcon(this.nextBar, this.rightArrow);\n            }\n        }\n    };\n    Splitter.prototype.afterAction = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator\n        };\n        return eventArgs;\n    };\n    Splitter.prototype.currentIndex = function (e) {\n        this.currentBarIndex = this.getOrderIndex(parseInt(e.target.parentElement.style.order, 10), 'splitbar');\n    };\n    Splitter.prototype.getSeparatorIndex = function (target) {\n        var array = [].slice.call(this.allBars);\n        array = this.enableReversePanes ? array.reverse() : array;\n        return array.indexOf(target);\n    };\n    Splitter.prototype.getPrevBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar - 1)];\n        return prevbar;\n    };\n    Splitter.prototype.getNextBar = function (currentBar) {\n        var prevbar = this.allBars[(currentBar + 1)];\n        return prevbar;\n    };\n    Splitter.prototype.updateBars = function (index) {\n        this.prevBar = this.getPrevBar(index);\n        this.nextBar = this.getNextBar(index);\n    };\n    Splitter.prototype.splitterDetails = function (e) {\n        if (this.orientation === 'Horizontal') {\n            this.arrow = e.target.classList.contains(ARROW_LEFT) ? ARROW_RIGHT : ARROW_LEFT;\n        }\n        else {\n            this.arrow = e.target.classList.contains(ARROW_UP) ? ARROW_DOWN : ARROW_UP;\n        }\n        this.updateCurrentSeparator(e.target);\n        this.currentIndex(e);\n        this.updateBars(this.currentBarIndex);\n        this.getPaneDetails();\n    };\n    Splitter.prototype.triggerResizing = function (e) {\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension],\n            separator: this.currentSeparator\n        };\n        this.trigger('resizing', eventArgs);\n    };\n    Splitter.prototype.onMouseDown = function (e) {\n        var _this = this;\n        e.preventDefault();\n        var target = e.target;\n        if (target.classList.contains(NAVIGATE_ARROW)) {\n            return;\n        }\n        this.updateCurrentSeparator(target);\n        addClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.updateCursorPosition(e, 'previous');\n        this.getPaneDetails();\n        var eventArgs = {\n            element: this.element,\n            event: e,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.getPreviousPaneIndex(), this.getNextPaneIndex()],\n            separator: this.currentSeparator,\n            cancel: false\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'none';\n        }\n        this.trigger('resizeStart', eventArgs, function (resizeStartArgs) {\n            if (!resizeStartArgs.cancel) {\n                _this.wireResizeEvents();\n                _this.checkPaneSize(e);\n            }\n        });\n    };\n    Splitter.prototype.updatePaneFlexBasis = function (pane) {\n        var previous;\n        if (pane.style.flexBasis.indexOf('%') > 0) {\n            previous = this.removePercentageUnit(pane.style.flexBasis);\n        }\n        else {\n            if (pane.style.flexBasis !== '') {\n                previous = this.convertPixelToPercentage(this.convertPixelToNumber(pane.style.flexBasis));\n            }\n            else {\n                var offset = (this.orientation === 'Horizontal') ? (pane.offsetWidth) : (pane.offsetHeight);\n                previous = this.convertPixelToPercentage(offset);\n            }\n        }\n        return previous;\n    };\n    Splitter.prototype.removePercentageUnit = function (value) {\n        return parseFloat(value.slice(0, value.indexOf('%')));\n    };\n    Splitter.prototype.convertPercentageToPixel = function (value, targetElement) {\n        var percentage = value.toString();\n        var convertedValue;\n        if (percentage.indexOf('%') > -1) {\n            convertedValue = parseFloat(percentage.slice(0, percentage.indexOf('%')));\n            var offsetValue = void 0;\n            if (!isNullOrUndefined(targetElement)) {\n                offsetValue = this.panesDimensions[this.allPanes.indexOf(targetElement)];\n            }\n            else {\n                offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n            }\n            convertedValue = Math.ceil(offsetValue * (convertedValue / 100));\n        }\n        else {\n            convertedValue = parseInt(percentage, 10);\n        }\n        return convertedValue;\n    };\n    Splitter.prototype.convertPixelToPercentage = function (value) {\n        var offsetValue = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return (value / offsetValue) * 100;\n    };\n    Splitter.prototype.convertPixelToNumber = function (value) {\n        if (value.indexOf('p') > -1) {\n            return parseFloat(value.slice(0, value.indexOf('p')));\n        }\n        else {\n            return parseFloat(value);\n        }\n    };\n    Splitter.prototype.calcDragPosition = function (rectValue, offsetValue) {\n        var separatorPosition = this.orientation === 'Horizontal' ? (this.currentCoordinates.x - rectValue) :\n            (this.currentCoordinates.y - rectValue);\n        var separator;\n        separator = separatorPosition / offsetValue;\n        separator = (separator > 1) ? 1 : (separator < 0) ? 0 : separator;\n        return separator * offsetValue;\n    };\n    Splitter.prototype.getSeparatorPosition = function (e) {\n        this.updateCursorPosition(e, 'current');\n        var rectBound = (this.orientation === 'Horizontal') ? this.element.getBoundingClientRect().left :\n            this.element.getBoundingClientRect().top + window.scrollY;\n        var offSet = (this.orientation === 'Horizontal') ? this.element.offsetWidth : this.element.offsetHeight;\n        return this.calcDragPosition(rectBound, offSet);\n    };\n    Splitter.prototype.getMinMax = function (paneIndex, target, selection) {\n        var defaultVal = selection === 'min' ? 0 : null;\n        // eslint-disable-next-line\n        var paneValue = null;\n        if (selection === 'min') {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n                paneValue = this.paneSettings[paneIndex].min;\n            }\n        }\n        else {\n            if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n                !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n                paneValue = this.paneSettings[paneIndex].max;\n            }\n        }\n        if (this.paneSettings.length > 0 && !isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(paneValue)) {\n            if (paneValue.indexOf('%') > 0) {\n                paneValue = this.convertPercentageToPixel(paneValue).toString();\n            }\n            return this.convertPixelToNumber(paneValue);\n        }\n        else {\n            return defaultVal;\n        }\n    };\n    Splitter.prototype.getPreviousPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) + 1 :\n            parseInt(this.currentSeparator.style.order, 10) - 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getNextPaneIndex = function () {\n        var separatorIndex = this.enableReversePanes ? parseInt(this.currentSeparator.style.order, 10) - 1 :\n            parseInt(this.currentSeparator.style.order, 10) + 1;\n        return this.getOrderIndex(separatorIndex, 'pane');\n    };\n    Splitter.prototype.getPaneDetails = function () {\n        var prevPane = null;\n        var nextPane = null;\n        this.order = parseInt(this.currentSeparator.style.order, 10);\n        if (this.allPanes.length > 1) {\n            prevPane = this.getPrevPane(this.order);\n            nextPane = this.getNextPane(this.order);\n        }\n        if (prevPane && nextPane) {\n            this.previousPane = prevPane;\n            this.nextPane = nextPane;\n            this.prevPaneIndex = this.getPreviousPaneIndex();\n            this.nextPaneIndex = this.getNextPaneIndex();\n        }\n        else {\n            return;\n        }\n    };\n    Splitter.prototype.getPaneHeight = function (pane) {\n        return ((this.orientation === 'Horizontal') ? pane.offsetWidth.toString() :\n            pane.offsetHeight.toString());\n    };\n    Splitter.prototype.isValidSize = function (paneIndex) {\n        var isValid = false;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) &&\n            !isNullOrUndefined(this.paneSettings[paneIndex].size) &&\n            this.paneSettings[paneIndex].size.indexOf('%') > -1) {\n            isValid = true;\n        }\n        return isValid;\n    };\n    Splitter.prototype.getPaneDimensions = function () {\n        this.previousPaneHeightWidth = (this.previousPane.style.flexBasis === '') ? this.getPaneHeight(this.previousPane) :\n            this.previousPane.style.flexBasis;\n        this.nextPaneHeightWidth = (this.nextPane.style.flexBasis === '') ? this.getPaneHeight(this.nextPane) :\n            this.nextPane.style.flexBasis;\n        if (this.isValidSize(this.prevPaneIndex)) {\n            this.previousPaneHeightWidth = this.convertPercentageToPixel(this.previousPaneHeightWidth).toString();\n            this.updatePrePaneInPercentage = true;\n        }\n        if (this.isValidSize(this.nextPaneIndex)) {\n            this.nextPaneHeightWidth = this.convertPercentageToPixel(this.nextPaneHeightWidth).toString();\n            this.updateNextPaneInPercentage = true;\n        }\n        this.prePaneDimenson = this.convertPixelToNumber(this.previousPaneHeightWidth.toString());\n        this.nextPaneDimension = this.convertPixelToNumber(this.nextPaneHeightWidth.toString());\n    };\n    Splitter.prototype.checkCoordinates = function (pageX, pageY) {\n        var coordinatesChanged = true;\n        if ((pageX === this.previousCoordinates.x || pageY === this.previousCoordinates.y)) {\n            coordinatesChanged = false;\n        }\n        return coordinatesChanged;\n    };\n    Splitter.prototype.isCursorMoved = function (e) {\n        var cursorMoved = true;\n        if (this.getEventType(e.type) === 'mouse' || (!isNullOrUndefined(e.pointerType)) &&\n            this.getEventType(e.pointerType) === 'mouse') {\n            cursorMoved = this.checkCoordinates(e.pageX, e.pageY);\n        }\n        else {\n            cursorMoved = (Browser.info.name !== 'msie') ?\n                this.checkCoordinates(e.touches[0].pageX, e.touches[0].pageY) :\n                this.checkCoordinates(e.pageX, e.pageY);\n        }\n        return cursorMoved;\n    };\n    Splitter.prototype.getBorder = function () {\n        this.border = 0;\n        var border = this.orientation === 'Horizontal' ? ((this.element.offsetWidth - this.element.clientWidth) / 2) :\n            (this.element.offsetHeight - this.element.clientHeight) / 2;\n        this.border = Browser.info.name !== 'chrome' ? this.border : border;\n    };\n    Splitter.prototype.onMouseMove = function (e) {\n        if (!this.isCursorMoved(e)) {\n            return;\n        }\n        this.getPaneDetails();\n        this.getPaneDimensions();\n        this.triggerResizing(e);\n        var left = this.validateDraggedPosition(this.getSeparatorPosition(e), this.prePaneDimenson, this.nextPaneDimension);\n        var separatorNewPosition;\n        this.getBorder();\n        if (this.orientation === 'Horizontal') {\n            separatorNewPosition = (this.element.getBoundingClientRect().left + left) -\n                this.currentSeparator.getBoundingClientRect().left + this.border;\n        }\n        else {\n            separatorNewPosition = (this.element.getBoundingClientRect().top + left) -\n                this.currentSeparator.getBoundingClientRect().top + this.border;\n        }\n        this.nextPaneHeightWidth =\n            (typeof (this.nextPaneHeightWidth) === 'string' && this.nextPaneHeightWidth.indexOf('p') > -1) ?\n                this.convertPixelToNumber(this.nextPaneHeightWidth) : parseInt(this.nextPaneHeightWidth, 10);\n        this.prevPaneCurrentWidth = separatorNewPosition + this.convertPixelToNumber(this.previousPaneHeightWidth);\n        this.nextPaneCurrentWidth = this.nextPaneHeightWidth - separatorNewPosition;\n        this.validateMinMaxValues();\n        if (this.nextPaneCurrentWidth < 0) {\n            this.nextPaneCurrentWidth = 0;\n        }\n        /* istanbul ignore next */\n        if (this.prevPaneCurrentWidth < 0) {\n            this.prevPaneCurrentWidth = 0;\n        }\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) > this.totalWidth) {\n            if (this.nextPaneCurrentWidth < this.prevPaneCurrentWidth) {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n            else {\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth)\n                    - this.totalWidth);\n            }\n        }\n        /* istanbul ignore next */\n        if ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth) < this.totalWidth) {\n            var difference = this.totalWidth - ((this.nextPaneCurrentWidth + this.prevPaneCurrentWidth));\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + difference;\n        }\n        this.calculateCurrentDimensions();\n        this.addStaticPaneClass();\n        this.previousPane.style.flexBasis = this.prevPaneCurrentWidth;\n        this.nextPane.style.flexBasis = this.nextPaneCurrentWidth;\n        if (!(this.allPanes.length > 2)) {\n            this.updateSplitterSize();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMinRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMinRange = null;\n        var paneMinDimensions;\n        var difference = 0;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].min)) {\n            paneMinRange = this.paneSettings[paneIndex].min.toString();\n        }\n        if (!isNullOrUndefined(paneMinRange)) {\n            if (paneMinRange.indexOf('%') > 0) {\n                paneMinRange = this.convertPercentageToPixel(paneMinRange).toString();\n            }\n            paneMinDimensions = this.convertPixelToNumber(paneMinRange);\n            if (paneCurrentWidth < paneMinDimensions) {\n                difference = (paneCurrentWidth - paneMinDimensions) <= 0 ? 0 :\n                    (paneCurrentWidth - paneMinDimensions);\n                this.totalWidth = this.totalWidth - difference;\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMinDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.validateMaxRange = function (paneIndex, paneCurrentWidth, pane) {\n        var paneMaxRange = null;\n        var paneMaxDimensions;\n        var validatedVal;\n        if (!isNullOrUndefined(this.paneSettings[paneIndex]) && !isNullOrUndefined(this.paneSettings[paneIndex].max)) {\n            paneMaxRange = this.paneSettings[paneIndex].max.toString();\n        }\n        if (!isNullOrUndefined(paneMaxRange)) {\n            if (paneMaxRange.indexOf('%') > 0) {\n                paneMaxRange = this.convertPercentageToPixel(paneMaxRange).toString();\n            }\n            paneMaxDimensions = this.convertPixelToNumber(paneMaxRange);\n            if (paneCurrentWidth > paneMaxDimensions) {\n                this.totalWidth = this.totalWidth - (paneCurrentWidth - paneMaxDimensions);\n                this.totalPercent = this.convertPixelToPercentage(this.totalWidth);\n                validatedVal = paneMaxDimensions;\n            }\n        }\n        return isNullOrUndefined(validatedVal) ? paneCurrentWidth : validatedVal;\n    };\n    Splitter.prototype.validateMinMaxValues = function () {\n        //validate previous pane minimum range\n        this.prevPaneCurrentWidth = this.validateMinRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // Validate next pane minimum range\n        this.nextPaneCurrentWidth = this.validateMinRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n        // validate previous pane maximum range\n        this.prevPaneCurrentWidth = this.validateMaxRange(this.prevPaneIndex, this.prevPaneCurrentWidth, this.previousPane);\n        // validate next pane maximum range\n        this.nextPaneCurrentWidth = this.validateMaxRange(this.nextPaneIndex, this.nextPaneCurrentWidth, this.nextPane);\n    };\n    Splitter.prototype.equatePaneWidths = function () {\n        var difference;\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) > this.totalPercent) {\n            difference = (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) - this.totalPercent;\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth - (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth - (difference / 2) + '%';\n        }\n        if ((this.prevPaneCurrentWidth + this.nextPaneCurrentWidth) < this.totalPercent) {\n            difference = this.totalPercent - (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth);\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + (difference / 2) + '%';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + (difference / 2) + '%';\n        }\n    };\n    Splitter.prototype.calculateCurrentDimensions = function () {\n        if (this.updatePrePaneInPercentage || this.updateNextPaneInPercentage) {\n            this.prevPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.prevPaneCurrentWidth)\n                * 10) / 10));\n            this.nextPaneCurrentWidth = Math.round(Number(Math.round(this.convertPixelToPercentage(this.nextPaneCurrentWidth)\n                * 10) / 10));\n            if (this.prevPaneCurrentWidth === 0) {\n                this.nextPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.nextPaneCurrentWidth === 0) {\n                this.prevPaneCurrentWidth = this.totalPercent;\n            }\n            if (this.prevPaneCurrentWidth + this.nextPaneCurrentWidth !== this.totalPercent) {\n                this.equatePaneWidths();\n            }\n            else {\n                this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + '%';\n                this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + '%';\n            }\n            this.prevPaneCurrentWidth = (this.updatePrePaneInPercentage) ? this.prevPaneCurrentWidth :\n                this.convertPercentageToPixel(this.prevPaneCurrentWidth) + 'px';\n            this.nextPaneCurrentWidth = (this.updateNextPaneInPercentage) ? this.nextPaneCurrentWidth :\n                this.convertPercentageToPixel(this.nextPaneCurrentWidth) + 'px';\n            this.updatePrePaneInPercentage = false;\n            this.updateNextPaneInPercentage = false;\n        }\n        else {\n            this.prevPaneCurrentWidth = this.prevPaneCurrentWidth + 'px';\n            this.nextPaneCurrentWidth = this.nextPaneCurrentWidth + 'px';\n        }\n    };\n    Splitter.prototype.addStaticPaneClass = function () {\n        if (!this.previousPane.classList.contains(STATIC_PANE)) {\n            this.previousPane.classList.add(STATIC_PANE);\n        }\n        if (!this.nextPane.classList.contains(STATIC_PANE)) {\n            this.nextPane.classList.add(STATIC_PANE);\n        }\n    };\n    Splitter.prototype.validateDraggedPosition = function (draggedPos, prevPaneHeightWidth, nextPaneHeightWidth) {\n        var separatorTopLeft = (this.orientation === 'Horizontal') ? this.currentSeparator.offsetLeft :\n            this.currentSeparator.offsetTop;\n        var prePaneRange = separatorTopLeft - prevPaneHeightWidth;\n        var nextPaneRange = nextPaneHeightWidth + separatorTopLeft;\n        var pane1MinSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'min');\n        var pane2MinSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'min');\n        var pane1MaxSize = this.getMinMax(this.prevPaneIndex, this.previousPane, 'max');\n        var pane2MaxSize = this.getMinMax(this.nextPaneIndex, this.nextPane, 'max');\n        var validatedSize = draggedPos;\n        if (draggedPos > nextPaneRange - pane2MinSize) {\n            validatedSize = nextPaneRange - pane2MinSize;\n        }\n        else if (draggedPos < prePaneRange + pane1MinSize) {\n            validatedSize = prePaneRange + pane1MinSize;\n        }\n        if (!isNullOrUndefined(pane1MaxSize)) {\n            if (draggedPos > prePaneRange + pane1MaxSize) {\n                validatedSize = prePaneRange + pane1MaxSize;\n            }\n        }\n        else if (!isNullOrUndefined(pane2MaxSize)) {\n            if (draggedPos < nextPaneRange - pane2MaxSize) {\n                validatedSize = nextPaneRange - pane2MaxSize;\n            }\n        }\n        return validatedSize;\n    };\n    Splitter.prototype.onMouseUp = function (e) {\n        removeClass([this.currentSeparator], SPLIT_BAR_ACTIVE);\n        this.unwireResizeEvents();\n        var eventArgs = {\n            event: e,\n            element: this.element,\n            pane: [this.previousPane, this.nextPane],\n            index: [this.prevPaneIndex, this.nextPaneIndex],\n            separator: this.currentSeparator,\n            paneSize: [this.prePaneDimenson, this.nextPaneDimension]\n        };\n        for (var i = 0; i < this.element.querySelectorAll('iframe').length; i++) {\n            this.element.querySelectorAll('iframe')[i].style.pointerEvents = 'auto';\n        }\n        this.trigger('resizeStop', eventArgs);\n        if (this.enablePersistence) {\n            var paneValues = this.paneSettings;\n            paneValues[this.getPreviousPaneIndex()].size = this.allPanes[this.getPreviousPaneIndex()].style.flexBasis;\n            paneValues[this.getNextPaneIndex()].size = this.allPanes[this.getNextPaneIndex()].style.flexBasis;\n            this.setProperties({ 'paneSettings': paneValues }, true);\n        }\n    };\n    Splitter.prototype.panesDimension = function (index, child) {\n        var childCount = child.length;\n        var size;\n        parseInt(this.getHeight(this.element), 10);\n        if (!isNullOrUndefined(this.paneSettings[index])) {\n            if (!isNullOrUndefined(this.paneSettings[index].size)) {\n                size = this.paneSettings[index].size;\n                if (index < childCount) {\n                    setStyleAttribute(child[index], { 'flex-basis': size, 'order': index * 2 });\n                    if (index < childCount - 1 && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                    else if (!this.sizeFlag) {\n                        child[index].style.flexBasis = null;\n                    }\n                    if ((index === childCount - 1) && this.sizeFlag && this.paneSettings[index].size !== '') {\n                        addClass([child[index]], STATIC_PANE);\n                    }\n                }\n            }\n            else {\n                this.sizeFlag = true;\n                setStyleAttribute(child[index], { 'order': index * 2 });\n            }\n        }\n        else {\n            setStyleAttribute(child[index], { 'order': index * 2 });\n        }\n        this.paneOrder.push(index * 2);\n    };\n    Splitter.prototype.setTemplate = function (template, toElement) {\n        toElement.innerHTML = '';\n        template = typeof (template) === 'string' ? this.sanitizeHelper(template) : template;\n        this.templateCompile(toElement, template);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        if (this.isReact) {\n            this.renderReactTemplates();\n        }\n    };\n    // eslint-disable-next-line\n    Splitter.prototype.templateCompile = function (ele, cnt) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        var tempEle = this.createElement('div');\n        this.compileElement(tempEle, cnt, 'content');\n        if (tempEle.childNodes.length !== 0) {\n            [].slice.call(tempEle.childNodes).forEach(function (childEle) {\n                ele.appendChild(childEle);\n            });\n        }\n    };\n    Splitter.prototype.compileElement = function (ele, val, prop) {\n        // eslint-disable-next-line\n        var blazorContain = Object.keys(window);\n        if (typeof (val) === 'string') {\n            if (val[0] === '.' || val[0] === '#') {\n                var eleVal = document.querySelector(val);\n                if (!isNullOrUndefined(eleVal)) {\n                    this.templateElement.push(eleVal);\n                    if (eleVal.style.display === 'none') {\n                        eleVal.style.removeProperty('display');\n                    }\n                    if (eleVal.getAttribute('style') === '') {\n                        eleVal.removeAttribute('style');\n                    }\n                    ele.appendChild(eleVal);\n                    return;\n                }\n                else {\n                    val = val.trim();\n                }\n            }\n            else {\n                val = val.trim();\n            }\n        }\n        var templateFn;\n        if (!isNullOrUndefined(val.outerHTML)) {\n            templateFn = compile(val.outerHTML);\n        }\n        else {\n            templateFn = compile(val);\n        }\n        var templateFUN;\n        if (!isNullOrUndefined(templateFn)) {\n            templateFUN = templateFn({}, this, prop, this.element.id + 'content' + this.allPanes.length.toString(), true);\n        }\n        if (!isNullOrUndefined(templateFn) && templateFUN && templateFUN.length > 0) {\n            [].slice.call(templateFUN).forEach(function (el) {\n                ele.appendChild(el);\n            });\n        }\n    };\n    Splitter.prototype.paneCollapsible = function (pane, index) {\n        // eslint-disable-next-line\n        this.paneSettings[index].collapsible ? addClass([pane], COLLAPSIBLE) : removeClass([pane], COLLAPSIBLE);\n    };\n    Splitter.prototype.createSplitPane = function (target) {\n        var childCount = target.children.length;\n        for (var i = 0; i < this.paneSettings.length; i++) {\n            if (childCount < this.paneSettings.length) {\n                var childElement = this.createElement('div');\n                this.element.appendChild(childElement);\n                childCount = childCount + 1;\n            }\n        }\n        childCount = target.children.length;\n        var child = [].slice.call(target.children);\n        this.sizeFlag = false;\n        if (childCount > 0) {\n            for (var i = 0; i < childCount; i++) {\n                // To accept only div and span element as pane\n                if (child[i].nodeName === 'DIV' || child[i].nodeName === 'SPAN') {\n                    this.allPanes.push(child[i]);\n                    if (this.orientation === 'Horizontal') {\n                        addClass([child[i]], [PANE, SPLIT_H_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    else {\n                        addClass([child[i]], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n                        this.panesDimension(i, child);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && !isNullOrUndefined(this.paneSettings[i].content)) {\n                        this.setTemplate(this.paneSettings[i].content, child[i]);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i]) && this.paneSettings[i].cssClass) {\n                        this.setCssClass(child[i], this.paneSettings[i].cssClass);\n                    }\n                    if (!isNullOrUndefined(this.paneSettings[i])) {\n                        this.paneCollapsible(child[i], i);\n                    }\n                }\n            }\n        }\n    };\n    /**\n     * expands corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be expanded at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.expand = function (index) {\n        this.collapsedOnchange(index);\n        this.updatePaneSettings(index, false);\n    };\n    /**\n     * collapses corresponding pane based on the index is passed.\n     *\n     * @param { number } index - Specifies the index value of the corresponding pane to be collapsed at initial rendering of splitter.\n     * @returns {void}\n     */\n    Splitter.prototype.collapse = function (index) {\n        this.isCollapsed(index);\n        this.updatePaneSettings(index, true);\n    };\n    /**\n     * Removes the control from the DOM and also removes all its related events.\n     *\n     * @returns {void}\n     */\n    Splitter.prototype.destroy = function () {\n        if (!this.isDestroyed) {\n            _super.prototype.destroy.call(this);\n            EventHandler.remove(document, 'touchstart click', this.onDocumentClick);\n            this.element.ownerDocument.defaultView.removeEventListener('resize', this.onReportWindowSize, true);\n            while (this.element.attributes.length > 0) {\n                this.element.removeAttribute(this.element.attributes[0].name);\n            }\n            this.element.innerHTML = this.wrapper.innerHTML;\n            for (var i = 0; i < this.wrapper.attributes.length; i++) {\n                this.element.setAttribute(this.wrapper.attributes[i].name, this.wrapper.attributes[i].value);\n            }\n            if (this.refreshing) {\n                addClass([this.element], ['e-control', 'e-lib', ROOT]);\n                this.allBars = [];\n                this.allPanes = [];\n            }\n            this.restoreElem();\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            if (this.isReact) {\n                this.clearTemplate();\n            }\n        }\n    };\n    Splitter.prototype.restoreElem = function () {\n        if (this.templateElement.length > 0) {\n            for (var i = 0; i < this.templateElement.length; i++) {\n                this.templateElement[i].style.display = 'none';\n                document.body.appendChild(this.templateElement[i]);\n            }\n        }\n    };\n    Splitter.prototype.addPaneClass = function (pane) {\n        // eslint-disable-next-line\n        this.orientation === 'Horizontal' ? addClass([pane], [PANE, SPLIT_H_PANE, SCROLL_PANE]) :\n            addClass([pane], [PANE, SPLIT_V_PANE, SCROLL_PANE]);\n        return pane;\n    };\n    Splitter.prototype.removePaneOrders = function (paneClass) {\n        var childNodes = this.element.childNodes;\n        var panes = [];\n        for (var i = 0; childNodes.length < 0; i++) {\n            if (childNodes[i].classList.contains(paneClass)) {\n                panes.push(childNodes[i]);\n            }\n        }\n        for (var i = 0; i < panes.length; i++) {\n            panes[i].style.removeProperty('order');\n        }\n    };\n    Splitter.prototype.setPaneOrder = function () {\n        for (var i = 0; i < this.allPanes.length; i++) {\n            this.panesDimension(i, this.allPanes);\n        }\n    };\n    Splitter.prototype.removeSeparator = function () {\n        for (var i = 0; i < this.allBars.length; i++) {\n            detach(this.allBars[i]);\n        }\n        this.allBars = [];\n    };\n    Splitter.prototype.updatePanes = function () {\n        this.setPaneOrder();\n        this.removeSeparator();\n        this.addSeparator(this.element);\n    };\n    /**\n     * Allows you to add a pane dynamically to the specified index position by passing the pane properties.\n     *\n     * @param { PanePropertiesModel } paneProperties - Specifies the pane’s properties that apply to new pane.\n     * @param { number } index - Specifies the index where the pane will be inserted.\n     * @returns {void}\n     */\n    Splitter.prototype.addPane = function (paneProperties, index) {\n        var newPane = this.createElement('div');\n        newPane = this.addPaneClass(newPane);\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var paneDetails = {\n            size: isNullOrUndefined(paneProperties.size) ? '' : paneProperties.size,\n            min: isNullOrUndefined(paneProperties.min) ? null : paneProperties.min,\n            max: isNullOrUndefined(paneProperties.max) ? null : paneProperties.max,\n            content: isNullOrUndefined(paneProperties.content) ? '' : paneProperties.content,\n            resizable: isNullOrUndefined(paneProperties.resizable) ? true : paneProperties.resizable,\n            collapsible: isNullOrUndefined(paneProperties.collapsible) ? false : paneProperties.collapsible,\n            collapsed: isNullOrUndefined(paneProperties.collapsed) ? false : paneProperties.collapsed,\n            cssClass: isNullOrUndefined(paneProperties.cssClass) ? '' : paneProperties.cssClass\n        };\n        this.paneSettings.splice(index, 0, paneDetails);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.orientation === 'Horizontal') {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_H_PANE)[index]);\n            this.removePaneOrders(SPLIT_H_PANE);\n        }\n        else {\n            this.element.insertBefore(newPane, this.element.querySelectorAll('.' + SPLIT_V_PANE)[index]);\n            this.removePaneOrders(SPLIT_V_PANE);\n        }\n        this.allPanes.splice(index, 0, newPane);\n        this.updatePanes();\n        this.setTemplate(this.paneSettings[index].content, newPane);\n        this.setCssClass(this.allPanes[index], paneProperties.cssClass);\n        this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n    };\n    /**\n     * Allows you to remove the specified pane dynamically by passing its index value.\n     *\n     * @param { number } index - Specifies the index value to remove the corresponding pane.\n     * @returns {void}\n     */\n    Splitter.prototype.removePane = function (index) {\n        index = (index > this.allPanes.length + 1) ? this.allPanes.length : index;\n        var elementClass = (this.orientation === 'Horizontal') ? SPLIT_H_PANE : SPLIT_V_PANE;\n        if (isNullOrUndefined(this.element.querySelectorAll('.' + elementClass)[index])) {\n            return;\n        }\n        detach(this.element.querySelectorAll('.' + elementClass)[index]);\n        this.allPanes.splice(index, 1);\n        this.removePaneOrders(elementClass);\n        this.updatePanes();\n        this.paneSettings.splice(index, 1);\n        this.setProperties({ 'paneSettings': this.paneSettings }, true);\n        if (this.allPanes.length > 0) {\n            this.allPanes[this.allPanes.length - 1].classList.remove(STATIC_PANE);\n        }\n    };\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"height\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enableReversePanes\", void 0);\n    __decorate([\n        Property('100%')\n    ], Splitter.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], Splitter.prototype, \"enablePersistence\", void 0);\n    __decorate([\n        Collection([], PaneProperties)\n    ], Splitter.prototype, \"paneSettings\", void 0);\n    __decorate([\n        Property('Horizontal')\n    ], Splitter.prototype, \"orientation\", void 0);\n    __decorate([\n        Property('')\n    ], Splitter.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(true)\n    ], Splitter.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(null)\n    ], Splitter.prototype, \"separatorSize\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeSanitizeHtml\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeCollapse\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"beforeExpand\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], Splitter.prototype, \"expanded\", void 0);\n    Splitter = __decorate([\n        NotifyPropertyChanges\n    ], Splitter);\n    return Splitter;\n}(Component));\nexport { Splitter };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, Property, NotifyPropertyChanges, isUndefined } from '@syncfusion/ej2-base';\nimport { Collection, Draggable, isNullOrUndefined, append, setValue } from '@syncfusion/ej2-base';\nimport { Event, formatUnit, ChildProperty, compile, closest, SanitizeHtmlHelper, getValue } from '@syncfusion/ej2-base';\nimport { setStyleAttribute as setStyle, addClass, detach, removeClass, EventHandler, Browser, extend } from '@syncfusion/ej2-base';\n// constant class definitions\nvar preventSelect = 'e-prevent';\nvar dragging = 'e-dragging';\nvar draggable = 'e-draggable';\nvar dragRestrict = 'e-drag-restrict';\nvar drag = 'e-drag';\nvar resize = 'e-resize';\nvar resizeicon = 'e-dl-icon';\nvar responsive = 'e-responsive';\nvar east = 'e-east';\nvar west = 'e-west';\nvar north = 'e-north';\nvar south = 'e-south';\nvar single = 'e-single';\nvar double = 'e-double';\nvar northEast = 'e-north-east';\nvar southEast = 'e-south-east';\nvar northWest = 'e-north-west';\nvar southWest = 'e-south-west';\nvar panel = 'e-panel';\nvar panelContent = 'e-panel-content';\nvar panelContainer = 'e-panel-container';\nvar disable = 'e-disabled';\nvar header = 'e-panel-header';\nvar panelTransition = 'e-panel-transition';\n/**\n * Defines the panel of the DashboardLayout component.\n */\nvar Panel = /** @class */ (function (_super) {\n    __extends(Panel, _super);\n    function Panel() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"id\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"cssClass\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"header\", void 0);\n    __decorate([\n        Property('')\n    ], Panel.prototype, \"content\", void 0);\n    __decorate([\n        Property(true)\n    ], Panel.prototype, \"enabled\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"row\", void 0);\n    __decorate([\n        Property(0)\n    ], Panel.prototype, \"col\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeX\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"sizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeY\", void 0);\n    __decorate([\n        Property(1)\n    ], Panel.prototype, \"minSizeX\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeY\", void 0);\n    __decorate([\n        Property(null)\n    ], Panel.prototype, \"maxSizeX\", void 0);\n    __decorate([\n        Property(1000)\n    ], Panel.prototype, \"zIndex\", void 0);\n    return Panel;\n}(ChildProperty));\nexport { Panel };\n/**\n * The DashboardLayout is a grid structured layout control, that helps to create a dashboard with panels.\n * Panels hold the UI components or data to be visualized with flexible options like resize, reorder, drag-n-drop, remove and add,\n * that allows users to easily place the panels at a desired position within the grid layout.\n * ```html\n * <div id=\"default-layout\">\n * ```\n * ```typescript\n * <script>\n *   let dashBoardObject : DashboardLayout = new DashboardLayout();\n *   dashBoardObject.appendTo('#default-layout');\n * </script>\n * ```\n */\nvar DashboardLayout = /** @class */ (function (_super) {\n    __extends(DashboardLayout, _super);\n    function DashboardLayout(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.rows = 1;\n        _this.panelID = 0;\n        _this.movePanelCalled = false;\n        _this.resizeCalled = false;\n        _this.mOffX = 0;\n        _this.mOffY = 0;\n        _this.maxTop = 9999;\n        _this.maxRows = 100;\n        _this.mouseX = 0;\n        _this.mouseY = 0;\n        _this.minTop = 0;\n        _this.minLeft = 0;\n        _this.isInlineRendering = false;\n        _this.removeAllCalled = false;\n        // to check whether removePanel is executed in mobile device\n        _this.isPanelRemoved = false;\n        // to maintain sizeY in mobile device\n        _this.panelsSizeY = 0;\n        _this.resizeHeight = false;\n        setValue('mergePersistData', _this.mergePersistPanelData, _this);\n        return _this;\n    }\n    /**\n     * Initialize the event handler\n     *\n     * @private\n     */\n    DashboardLayout.prototype.preRender = function () {\n        this.panelCollection = [];\n        this.sortedArray = [];\n        this.gridPanelCollection = [];\n        this.overlapElement = [];\n        this.overlapElementClone = [];\n        this.overlapSubElementClone = [];\n        this.collisionChecker = {};\n        this.dragCollection = [];\n        this.elementRef = { top: '', left: '', height: '', width: '' };\n        this.dimensions = [];\n        this.allItems = [];\n        this.oldRowCol = {};\n        this.availableClasses = [];\n        this.setOldRowCol();\n        this.calculateCellSize();\n        this.contentTemplateChild = [].slice.call(this.element.children);\n    };\n    DashboardLayout.prototype.setOldRowCol = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (!this.panels[i].id) {\n                this.panelPropertyChange(this.panels[i], { id: 'layout_' + this.panelID.toString() });\n                this.panelID = this.panelID + 1;\n            }\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n    };\n    DashboardLayout.prototype.createPanelElement = function (cssClass, idValue) {\n        var ele = this.createElement('div');\n        if (cssClass && cssClass.length > 0) {\n            addClass([ele], cssClass);\n        }\n        if (idValue) {\n            ele.setAttribute('id', idValue);\n        }\n        return ele;\n    };\n    /**\n     * To Initialize the control rendering.\n     *\n     * @returns void\n     * @private\n     */\n    DashboardLayout.prototype.render = function () {\n        this.initialize();\n        this.isRenderComplete = true;\n        if (this.showGridLines && !this.checkMediaQuery()) {\n            this.initGridLines();\n        }\n        this.updateDragArea();\n        this.renderComplete();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initGridLines = function () {\n        this.table = document.createElement('table');\n        var tbody = document.createElement('tbody');\n        this.table.classList.add('e-dashboard-gridline-table');\n        for (var i = 0; i < this.maxRow(); i++) {\n            var tr = document.createElement('tr');\n            for (var j = 0; j < this.columns; j++) {\n                var td = document.createElement('td');\n                td.classList.add('e-dashboard-gridline');\n                this.setAttributes({ value: { row: i.toString(), col: j.toString(), sizeX: '1', sizeY: '1' } }, td);\n                td.setAttribute('id', '' + j);\n                this.setPanelPosition(td, i, j);\n                this.setHeightAndWidth(td, { row: i, col: j, sizeX: 1, sizeY: 1 });\n                tr.appendChild(td);\n            }\n            tbody.appendChild(tr);\n        }\n        this.table.appendChild(tbody);\n        this.element.appendChild(this.table);\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.initialize = function () {\n        this.updateRowHeight();\n        if (this.element.childElementCount > 0 && this.element.querySelectorAll('.e-panel').length > 0) {\n            var panelElements = [];\n            this.setProperties({ panels: [] }, true);\n            this.isInlineRendering = true;\n            for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                panelElements.push((this.element.querySelectorAll('.e-panel')[i]));\n            }\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                if (this.enableRtl) {\n                    addClass([panelElement], 'e-rtl');\n                }\n                this.getInlinePanels(panelElement);\n                this.maxCol();\n                this.maxRow();\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                var panelElement = this.element.querySelector('#' + this.panels[i].id);\n                this.setMinMaxValues(this.panels[i]);\n                if (this.maxColumnValue < this.panels[i].col || this.maxColumnValue < (this.panels[i].col + this.panels[i].sizeX)) {\n                    var colValue = this.maxColumnValue - this.panels[i].sizeX;\n                    this.panelPropertyChange(this.panels[i], { col: colValue < 0 ? 0 : colValue });\n                }\n                this.setXYAttributes(panelElement, this.panels[i]);\n                var panel_1 = this.renderPanels(panelElement, this.panels[i], this.panels[i].id, false);\n                this.panelCollection.push(panel_1);\n                this.setHeightAndWidth(panelElement, this.panels[i]);\n                this.tempObject = this;\n                if (this.mediaQuery && !window.matchMedia('(' + this.mediaQuery + ')').matches) {\n                    this.setPanelPosition(panelElement, this.panels[i].row, this.panels[i].col);\n                    this.mainElement = panelElement;\n                    this.updatePanelLayout(panelElement, this.panels[i]);\n                    this.mainElement = null;\n                }\n                this.setClasses([panelElement]);\n            }\n            this.updateOldRowColumn();\n            if (this.checkMediaQuery()) {\n                this.checkMediaQuerySizing();\n            }\n        }\n        else {\n            this.renderDashBoardCells(this.panels);\n        }\n        if (this.allowDragging && (this.mediaQuery ? !window.matchMedia('(' + this.mediaQuery + ')').matches : true)) {\n            this.enableDraggingContent(this.panelCollection);\n        }\n        this.sortedPanel();\n        this.bindEvents();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkColumnValue = this.maxColumnValue;\n        if (!(this.checkMediaQuery())) {\n            this.panelResponsiveUpdate();\n        }\n        this.setEnableRtl();\n    };\n    DashboardLayout.prototype.checkMediaQuery = function () {\n        return (this.mediaQuery && window.matchMedia('(' + this.mediaQuery + ')').matches);\n    };\n    DashboardLayout.prototype.calculateCellSize = function () {\n        this.cellSize = [];\n        if ((this.checkMediaQuery())) {\n            this.cellSize[1] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio;\n        }\n        else {\n            this.cellSize[0] = this.element.parentElement &&\n                ((this.element.parentElement.offsetWidth));\n            this.cellSize[0] = this.element.parentElement\n                && ((this.element.parentElement.offsetWidth - ((this.maxCol() - 1) * this.cellSpacing[0]))\n                    / (this.maxCol()));\n            this.cellSize[1] = this.cellSize[0] / this.cellAspectRatio;\n        }\n    };\n    DashboardLayout.prototype.maxRow = function (recheck) {\n        var maxRow = 1;\n        if (this.rows > 1 && isNullOrUndefined(recheck)) {\n            maxRow = this.rows;\n            return maxRow;\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].sizeY + this.panels[i].row > maxRow) {\n                maxRow = this.panels[i].sizeY + this.panels[i].row;\n            }\n        }\n        if (this.panels.length === 0) {\n            maxRow = this.columns;\n        }\n        return maxRow;\n    };\n    DashboardLayout.prototype.maxCol = function () {\n        var maxCol = 1;\n        maxCol = this.columns;\n        this.maxColumnValue = maxCol;\n        return maxCol;\n    };\n    DashboardLayout.prototype.updateOldRowColumn = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            var id = this.panels[i].id;\n            if (document.getElementById(id)) {\n                var row = parseInt(document.getElementById(id).getAttribute('data-row'), 10);\n                var col = parseInt(document.getElementById(id).getAttribute('data-col'), 10);\n                this.oldRowCol[this.panels[i].id] = { row: row, col: col };\n            }\n            else {\n                continue;\n            }\n        }\n    };\n    DashboardLayout.prototype.createSubElement = function (cssClass, idValue, className) {\n        var element = this.createElement('div');\n        if (className) {\n            addClass([element], [className]);\n        }\n        if (cssClass && cssClass.length > 0) {\n            addClass([element], cssClass);\n        }\n        if (idValue) {\n            element.setAttribute('id', idValue);\n        }\n        return element;\n    };\n    // eslint-disable-next-line\n    DashboardLayout.prototype.templateParser = function (template) {\n        if (template) {\n            try {\n                if (document.querySelectorAll(template).length) {\n                    return compile(document.querySelector(template).innerHTML.trim());\n                }\n            }\n            catch (error) {\n                var sanitizedValue = SanitizeHtmlHelper.sanitize(template);\n                return compile((this.enableHtmlSanitizer && typeof (template) === 'string') ? sanitizedValue : template);\n            }\n        }\n        return undefined;\n    };\n    DashboardLayout.prototype.renderTemplate = function (content, appendElement, type, isStringTemplate, prop) {\n        // eslint-disable-next-line\n        var templateFn = this.templateParser(content);\n        var templateElements = [];\n        if ((content[0] === '.' || content[0] === '#') &&\n            document.querySelector(content).tagName !== 'SCRIPT') {\n            var eleVal = document.querySelector(content);\n            if (!isNullOrUndefined(eleVal)) {\n                if (eleVal.style.display === 'none') {\n                    eleVal.style.removeProperty('display');\n                }\n                if (eleVal.getAttribute('style') === '') {\n                    eleVal.removeAttribute('style');\n                }\n                appendElement.appendChild(eleVal);\n                return;\n            }\n            else {\n                content = content.trim();\n            }\n        }\n        else {\n            // eslint-disable-next-line\n            var compilerFn = templateFn({}, this, prop, type, isStringTemplate, null, appendElement);\n            if (compilerFn) {\n                for (var _i = 0, compilerFn_1 = compilerFn; _i < compilerFn_1.length; _i++) {\n                    var item = compilerFn_1[_i];\n                    templateElements.push(item);\n                }\n                append([].slice.call(templateElements), appendElement);\n            }\n        }\n    };\n    DashboardLayout.prototype.renderPanels = function (cellElement, panelModel, panelId, isStringTemplate) {\n        addClass([cellElement], [panel, panelTransition]);\n        var cssClass = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n        this.panelContent = cellElement.querySelector('.e-panel-container') ?\n            cellElement.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cellElement.id + '_content', panelContainer);\n        cellElement.appendChild(this.panelContent);\n        if (!panelModel.enabled) {\n            this.disablePanel(cellElement);\n        }\n        if (panelModel.header) {\n            var headerTemplateElement = cellElement.querySelector('.e-panel-header') ?\n                cellElement.querySelector('.e-panel-header') : this.createSubElement([], cellElement.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            if (!cellElement.querySelector('.e-panel-header')) {\n                var id = this.element.id + 'HeaderTemplate' + panelId;\n                this.renderTemplate(panelModel.header, headerTemplateElement, id, isStringTemplate, 'header');\n                this.panelContent.appendChild(headerTemplateElement);\n                this.renderReactTemplates();\n            }\n        }\n        if (panelModel.content) {\n            var cssClass_1 = panelModel.cssClass ? panelModel.cssClass.split(' ') : null;\n            this.panelBody = cellElement.querySelector('.e-panel-content') ? cellElement.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_1, cellElement.id + '_body', panelContent);\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            if (!cellElement.querySelector('.e-panel-content')) {\n                var id = this.element.id + 'ContentTemplate' + panelId;\n                this.renderTemplate(panelModel.content, this.panelBody, id, isStringTemplate, 'content');\n                this.panelContent.appendChild(this.panelBody);\n                this.renderReactTemplates();\n            }\n        }\n        return cellElement;\n    };\n    DashboardLayout.prototype.disablePanel = function (panelElement) {\n        addClass([panelElement], [disable]);\n    };\n    DashboardLayout.prototype.getInlinePanels = function (panelElement) {\n        var model = {\n            sizeX: panelElement.hasAttribute('data-sizex') ? parseInt(panelElement.getAttribute('data-sizex'), 10) : 1,\n            sizeY: panelElement.hasAttribute('data-sizey') ? parseInt(panelElement.getAttribute('data-sizey'), 10) : 1,\n            minSizeX: panelElement.hasAttribute('data-minsizex') ? parseInt(panelElement.getAttribute('data-minsizex'), 10) : 1,\n            minSizeY: panelElement.hasAttribute('data-minsizey') ? parseInt(panelElement.getAttribute('data-minsizey'), 10) : 1,\n            maxSizeX: panelElement.hasAttribute('data-maxsizex') ? parseInt(panelElement.getAttribute('data-maxsizex'), 10) : null,\n            maxSizeY: panelElement.hasAttribute('data-maxsizey') ? parseInt(panelElement.getAttribute('data-maxsizey'), 10) : null,\n            row: panelElement.hasAttribute('data-row') ? parseInt(panelElement.getAttribute('data-row'), 10) : 0,\n            col: panelElement.hasAttribute('data-col') ? parseInt(panelElement.getAttribute('data-col'), 10) : 0,\n            id: panelElement.getAttribute('id'),\n            zIndex: panelElement.hasAttribute('data-zindex') ? parseInt(panelElement.getAttribute('data-zIndex'), 10) : 1000,\n            header: panelElement.querySelector('.e-panel-header') && '.e-panel-header',\n            content: panelElement.querySelector('.e-panel-content') && '.e-panel-content'\n        };\n        if (!model.id) {\n            model.id = 'layout_' + this.panelID.toString();\n            panelElement.setAttribute('id', model.id);\n            this.panelID = this.panelID + 1;\n        }\n        if (isUndefined(model.enabled)) {\n            model.enabled = true;\n        }\n        panelElement.style.zIndex = '' + model.zIndex;\n        // eslint-disable-next-line\n        var panelProp = new Panel(this, 'panels', model, true);\n        this.panels.push(panelProp);\n    };\n    DashboardLayout.prototype.resizeEvents = function () {\n        if (this.allowResizing) {\n            var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n            for (var i = 0; i < panelElements.length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(panelElements[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(panelElements[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.bindEvents = function () {\n        this.refreshListener = this.refresh.bind(this);\n        // eslint-disable-next-line\n        EventHandler.add(window, 'resize', this.refreshListener);\n        this.resizeEvents();\n    };\n    DashboardLayout.prototype.downResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.pageX;\n        this.lastMouseY = e.pageY;\n        var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n        var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, moveEventName, this.moveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, upEventName, this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.downHandler = function (e) {\n        this.resizeCalled = false;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var el = closest((e.currentTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resizeStart', args);\n        this.downTarget = e.currentTarget;\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        addClass([this.element], [preventSelect]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.elementX = parseFloat(el.style.left);\n        this.elementY = parseFloat(el.style.top);\n        this.elementWidth = el.offsetWidth;\n        this.elementHeight = el.offsetHeight;\n        this.originalWidth = this.getCellInstance(el.id).sizeX;\n        this.originalHeight = this.getCellInstance(el.id).sizeY;\n        this.previousRow = this.getCellInstance(el.id).row;\n    };\n    DashboardLayout.prototype.touchDownResizeHandler = function (e) {\n        this.downHandler(e);\n        this.lastMouseX = e.changedTouches[0].pageX;\n        this.lastMouseY = e.changedTouches[0].pageY;\n        if (!this.isMouseMoveBound) {\n            EventHandler.add(document, 'touchmove', this.touchMoveResizeHandler, this);\n            this.isMouseMoveBound = true;\n        }\n        if (!this.isMouseUpBound) {\n            EventHandler.add(document, 'touchend', this.upResizeHandler, this);\n            this.isMouseUpBound = true;\n        }\n    };\n    DashboardLayout.prototype.getCellSize = function () {\n        return [this.cellSize[0], this.cellSize[1]];\n    };\n    DashboardLayout.prototype.updateMaxTopLeft = function (e) {\n        this.moveTarget = this.downTarget;\n        var el = closest((this.moveTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        this.trigger('resize', args);\n    };\n    DashboardLayout.prototype.updateResizeElement = function (el) {\n        this.maxLeft = this.element.offsetWidth - 1;\n        this.maxTop = this.cellSize[1] * this.maxRows - 1;\n        removeClass([el], 'e-panel-transition');\n        addClass([el], [dragging]);\n        var handleArray = [east, west, north, south, southEast, northEast, northWest, southWest];\n        for (var i = 0; i < this.moveTarget.classList.length; i++) {\n            if (handleArray.indexOf(this.moveTarget.classList[i]) !== -1) {\n                this.handleClass = (this.moveTarget.classList[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.moveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.pageX || this.lastMouseY === e.pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.pageX;\n        this.mouseY = e.pageY;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseY = this.mouseY;\n        this.lastMouseX = this.mouseX;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    DashboardLayout.prototype.touchMoveResizeHandler = function (e) {\n        this.updateMaxTopLeft(e);\n        var el = closest((this.moveTarget), '.e-panel');\n        if (this.lastMouseX === e.changedTouches[0].pageX || this.lastMouseY === e.changedTouches[0].pageY) {\n            return;\n        }\n        this.updateResizeElement(el);\n        var panelModel = this.getCellInstance(el.getAttribute('id'));\n        this.mouseX = e.changedTouches[0].pageX;\n        this.mouseY = e.changedTouches[0].pageY;\n        var diffX = this.mouseX - this.lastMouseX + this.mOffX;\n        var diffY = this.mouseY - this.lastMouseY + this.mOffY;\n        this.mOffX = this.mOffY = 0;\n        this.lastMouseX = this.mouseX;\n        this.lastMouseY = this.mouseY;\n        this.resizingPanel(el, panelModel, diffX, diffY);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.resizingPanel = function (el, panelModel, currentX, currentY) {\n        var oldSizeX = this.getCellInstance(el.id).sizeX;\n        var oldSizeY = this.getCellInstance(el.id).sizeY;\n        var dY = currentY;\n        var dX = currentX;\n        if (this.handleClass.indexOf('north') >= 0) {\n            if (this.elementHeight - dY < this.getMinHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMinHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight - dY > this.getMaxHeight(panelModel)) {\n                currentY = this.elementHeight - this.getMaxHeight(panelModel);\n                this.mOffY = dY - currentY;\n            }\n            else if (this.elementY + dY < this.minTop) {\n                currentY = this.minTop - this.elementY;\n                this.mOffY = dY - currentY;\n            }\n            this.elementY += currentY;\n            this.elementHeight -= currentY;\n        }\n        if (this.handleClass.indexOf('south') >= 0) {\n            if (this.elementHeight + dY < this.getMinHeight(panelModel)) {\n                currentY = this.getMinHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            else if (panelModel.maxSizeY && this.elementHeight + dY > this.getMaxHeight(panelModel)) {\n                currentY = this.getMaxHeight(panelModel) - this.elementHeight;\n                this.mOffY = dY - currentY;\n            }\n            this.elementHeight += currentY;\n        }\n        if (this.handleClass.indexOf('west') >= 0) {\n            if (this.elementWidth - dX < this.getMinWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMinWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth - dX > this.getMaxWidth(panelModel)) {\n                currentX = this.elementWidth - this.getMaxWidth(panelModel);\n                this.mOffX = dX - currentX;\n            }\n            else if (this.elementX + dX < this.minLeft) {\n                currentX = this.minLeft - this.elementX;\n                this.mOffX = dX - currentX;\n            }\n            this.elementX += currentX;\n            this.elementWidth -= currentX;\n        }\n        if (this.handleClass.indexOf('east') >= 0) {\n            if (this.elementWidth + dX < this.getMinWidth(panelModel)) {\n                currentX = this.getMinWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            else if (panelModel.maxSizeX && this.elementWidth + dX > this.getMaxWidth(panelModel)) {\n                currentX = this.getMaxWidth(panelModel) - this.elementWidth;\n                this.mOffX = dX - currentX;\n            }\n            this.elementWidth += currentX;\n        }\n        el.style.top = this.elementY + 'px';\n        el.style.left = this.elementX + 'px';\n        el.style.width = this.elementWidth + 'px';\n        el.style.height = this.elementHeight + 'px';\n        var item = this.getResizeRowColumn(panelModel);\n        if (item.col + item.sizeX > this.columns) {\n            this.panelPropertyChange(item, { sizeX: item.sizeX - 1 });\n        }\n        this.shadowEle.style.top = ((item.row * this.getCellSize()[1] + (item.row * this.cellSpacing[1]))) + 'px';\n        this.shadowEle.style.left = ((item.col * this.getCellSize()[0]) + ((item.col) * this.cellSpacing[0])) + 'px';\n        this.shadowEle.style.height = ((item.sizeY * (this.getCellSize()[1] + (this.cellSpacing[1])))) + 'px';\n        this.shadowEle.style.width = ((item.sizeX * (this.getCellSize()[0] + (this.cellSpacing[0])))) + 'px';\n        if (oldSizeX !== item.sizeX || oldSizeY !== item.sizeY) {\n            oldSizeX = item.sizeX;\n            oldSizeY = item.sizeY;\n            var model = this.getCellInstance(el.id);\n            var value = {\n                attributes: {\n                    row: model.row.toString(),\n                    col: model.col.toString(),\n                    sizeX: model.sizeX.toString(),\n                    sizeY: model.sizeY.toString()\n                }\n            };\n            this.setAttributes(value, el);\n            this.mainElement = el;\n            this.updatePanelLayout(el, this.getCellInstance(el.id));\n            this.updateOldRowColumn();\n            this.sortedPanel();\n        }\n    };\n    DashboardLayout.prototype.upResizeHandler = function (e) {\n        if (isNullOrUndefined(this.downTarget)) {\n            return;\n        }\n        this.upTarget = this.downTarget;\n        var el = closest((this.upTarget), '.e-panel');\n        var args = { event: e, element: el, isInteracted: true };\n        if (el) {\n            addClass([el], 'e-panel-transition');\n            var moveEventName = (Browser.info.name === 'msie') ? 'mousemove pointermove' : 'mousemove';\n            var upEventName = (Browser.info.name === 'msie') ? 'mouseup pointerup' : 'mouseup';\n            EventHandler.remove(document, moveEventName, this.moveResizeHandler);\n            EventHandler.remove(document, upEventName, this.upResizeHandler);\n            if (Browser.info.name !== 'msie') {\n                EventHandler.remove(document, 'touchmove', this.touchMoveResizeHandler);\n                EventHandler.remove(document, 'touchend', this.upResizeHandler);\n            }\n            this.isMouseUpBound = false;\n            this.isMouseMoveBound = false;\n            if (this.shadowEle) {\n                detach(this.shadowEle);\n            }\n            this.shadowEle = null;\n            var panelModel = this.getCellInstance(el.getAttribute('id'));\n            this.setPanelPosition(el, panelModel.row, panelModel.col);\n            this.setHeightAndWidth(el, panelModel);\n        }\n        removeClass([el], [dragging]);\n        this.trigger('resizeStop', args);\n        this.resizeCalled = false;\n        this.lastMouseX = this.lastMouseY = undefined;\n        this.mOffX = this.mOffY = 0;\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(true);\n    };\n    DashboardLayout.prototype.getResizeRowColumn = function (item) {\n        var isChanged = false;\n        var col = item.col;\n        if (['e-west', 'e-south-west'].indexOf(this.handleClass) !== -1) {\n            col = this.pixelsToColumns(this.elementX, false);\n        }\n        var row = item.row;\n        if (['e-north'].indexOf(this.handleClass) !== -1) {\n            row = this.pixelsToRows(this.elementY, false);\n            if (this.previousRow !== row) {\n                this.previousRow = row;\n                isChanged = true;\n            }\n        }\n        var sizeX = item.sizeX;\n        if (['e-north', 'e-south'].indexOf(this.handleClass) === -1) {\n            sizeX = this.pixelsToColumns(this.elementWidth - (sizeX) * this.cellSpacing[1], true);\n        }\n        var sizeY = item.sizeY;\n        if (['e-east', 'e-west'].indexOf(this.handleClass) === -1) {\n            if (this.handleClass === 'e-north' ? isChanged : true) {\n                sizeY = this.pixelsToRows(this.elementHeight - (sizeY) * this.cellSpacing[0], true);\n            }\n        }\n        if (item.col + item.sizeX > this.columns) {\n            item.sizeX = item.sizeX - 1;\n        }\n        var canOccupy = row > -1 && col > -1 && sizeX + col <= this.maxCol() && sizeY + row <= this.maxRow();\n        if (canOccupy && (this.collisions(row, col, sizeX, sizeY, this.getPanelBase(item.id)).length === 0)\n            || this.allowPushing !== false) {\n            this.panelPropertyChange(item, { row: row, col: col, sizeX: sizeX, sizeY: sizeY });\n        }\n        return item;\n    };\n    DashboardLayout.prototype.pixelsToColumns = function (pixels, isCeil) {\n        var curColWidth = this.cellSize[0];\n        if (isCeil) {\n            return Math.ceil(pixels / curColWidth);\n        }\n        else {\n            return Math.floor(pixels / curColWidth);\n        }\n    };\n    DashboardLayout.prototype.pixelsToRows = function (pixels, isCeil) {\n        if (isCeil) {\n            return Math.round(pixels / this.cellSize[1]);\n        }\n        else {\n            return Math.round(pixels / (this.cellSize[1] + this.cellSpacing[0]));\n        }\n    };\n    DashboardLayout.prototype.getMinWidth = function (item) {\n        return (item.minSizeX) * this.getCellSize()[0];\n    };\n    DashboardLayout.prototype.getMaxWidth = function (item) {\n        return (item.maxSizeX) * this.getCellSize()[0];\n    };\n    DashboardLayout.prototype.getMinHeight = function (item) {\n        return (item.minSizeY) * this.getCellSize()[1];\n    };\n    DashboardLayout.prototype.getMaxHeight = function (item) {\n        return (item.maxSizeY) * this.getCellSize()[1];\n    };\n    DashboardLayout.prototype.sortedPanel = function () {\n        this.sortedArray = [];\n        for (var i = 0, l = this.panelCollection.length; i < l; ++i) {\n            this.sortItem(this.panelCollection[i]);\n        }\n    };\n    DashboardLayout.prototype.moveItemsUpwards = function () {\n        if (this.allowFloating === false) {\n            return;\n        }\n        for (var rowIndex = 0, l = this.sortedArray.length; rowIndex < l; ++rowIndex) {\n            var columns = this.sortedArray[rowIndex];\n            if (!columns) {\n                continue;\n            }\n            for (var colIndex = 0, len = columns.length; colIndex < len; ++colIndex) {\n                var item = columns[colIndex];\n                if (item) {\n                    this.moveItemUpwards(item);\n                }\n            }\n        }\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.moveItemUpwards = function (item) {\n        if (this.allowFloating === false || item === this.mainElement) {\n            return;\n        }\n        var colIndex = this.getCellInstance(item.id).col;\n        var sizeY = parseInt(item.getAttribute('data-sizeY'), 10);\n        var sizeX = parseInt(item.getAttribute('data-sizeX'), 10);\n        var availableRow = null;\n        var availableColumn = null;\n        var rowIndex = parseInt(item.getAttribute('data-row'), 10) - 1;\n        while (rowIndex > -1) {\n            var items = this.collisions(rowIndex, colIndex, sizeX, sizeY, item);\n            if (items.length !== 0) {\n                break;\n            }\n            availableRow = rowIndex;\n            availableColumn = colIndex;\n            --rowIndex;\n        }\n        if (availableRow !== null) {\n            this.sortItem(item, availableRow, availableColumn);\n        }\n    };\n    DashboardLayout.prototype.sortItem = function (item, rowValue, columnValue) {\n        this.overlapElement = [];\n        var column = parseInt(item.getAttribute('data-col'), 10);\n        var row = parseInt(item.getAttribute('data-row'), 10);\n        if (!this.sortedArray[row]) {\n            this.sortedArray[row] = [];\n        }\n        this.sortedArray[row][column] = item;\n        if (item !== undefined && rowValue !== undefined && columnValue !== undefined) {\n            if (this.oldRowCol[item.id] !== undefined && this.oldRowCol[item.id].row !== null &&\n                typeof this.oldRowCol[item.id].col !== 'undefined') {\n                {\n                    var oldRow = this.sortedArray[this.oldRowCol[item.id].row];\n                    if (this.oldRowCol[item.id] && oldRow[this.oldRowCol[item.id].col] === item) {\n                        delete oldRow[this.oldRowCol[item.id].col];\n                        this.updateOldRowColumn();\n                        this.sortedPanel();\n                    }\n                }\n            }\n            this.oldRowCol[item.id].row = rowValue;\n            this.oldRowCol[item.id].row = columnValue;\n            if (!this.sortedArray[row]) {\n                this.sortedArray[row] = [];\n            }\n            this.sortedArray[row][column] = item;\n            if (this.allItems.indexOf(item) === -1) {\n                this.allItems.push(item);\n            }\n            this.panelPropertyChange(this.getCellInstance(item.id), { row: rowValue, col: columnValue });\n            var panelModel = this.getCellInstance(item.id);\n            this.setAttributes({ value: { col: panelModel.col.toString(), row: panelModel.row.toString() } }, item);\n            this.updateLayout(item, this.getCellInstance(item.id));\n        }\n    };\n    DashboardLayout.prototype.updateLayout = function (element, panelModel) {\n        this.setPanelPosition(element, panelModel.row, panelModel.col);\n        this.setHeightAndWidth(element, panelModel);\n        this.updateRowHeight();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.refresh = function () {\n        this.panelsSizeY = 0;\n        this.updateDragArea();\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        else {\n            if (this.element.classList.contains(responsive)) {\n                removeClass([this.element], [responsive]);\n                for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n                    var ele = this.element.querySelectorAll('.e-panel')[i];\n                    var cellInstance = this.getCellInstance(ele.id);\n                    var row = parseInt(ele.getAttribute('data-row'), 10);\n                    var col = parseInt(ele.getAttribute('data-col'), 10);\n                    this.panelPropertyChange(cellInstance, { row: row, col: col });\n                    this.setHeightAndWidth(ele, this.getCellInstance(ele.id));\n                    this.setPanelPosition(ele, row, col);\n                    this.updateRowHeight();\n                }\n            }\n            this.panelResponsiveUpdate();\n            this.updateGridLines();\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        this.resizeEvents();\n        this.checkDragging(this.dragCollection);\n    };\n    DashboardLayout.prototype.updateGridLines = function () {\n        if (this.element.querySelector('.e-dashboard-gridline-table')) {\n            if (this.table) {\n                detach(this.table);\n            }\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkDragging = function (dragCollection) {\n        if (this.checkMediaQuery() || !this.allowDragging) {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n        }\n        else {\n            for (var i = 0; i < dragCollection.length; i++) {\n                dragCollection[i].destroy();\n            }\n            this.enableDraggingContent(this.panelCollection);\n        }\n    };\n    DashboardLayout.prototype.sortPanels = function () {\n        var model = [];\n        var _loop_1 = function (row) {\n            var _loop_2 = function (col) {\n                this_1.panels.filter(function (panel) {\n                    if (panel.row === row && panel.col === col) {\n                        model.push(panel);\n                    }\n                });\n            };\n            for (var col = 0; col < this_1.columns; col++) {\n                _loop_2(col);\n            }\n        };\n        var this_1 = this;\n        for (var row = 0; row <= this.rows; row++) {\n            _loop_1(row);\n        }\n        return model;\n    };\n    DashboardLayout.prototype.checkMediaQuerySizing = function () {\n        addClass([this.element], [responsive]);\n        var updatedPanel;\n        if (this.isPanelRemoved && this.panels) {\n            updatedPanel = this.panels;\n        }\n        else {\n            updatedPanel = this.sortPanels();\n        }\n        this.updatedRows = updatedPanel.length;\n        for (var i = 0; i < updatedPanel.length; i++) {\n            var panelElement = document.getElementById(updatedPanel[i].id);\n            // eslint-disable-next-line\n            var updatedHeight = void 0;\n            if (panelElement) {\n                setStyle(panelElement, { 'width': '100%' });\n                panelElement.style.height = ' ' + ((this.element.parentElement\n                    && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) + 'px';\n                if (updatedPanel[i].sizeY > 1) {\n                    updatedHeight = ((this.element.parentElement\n                        && this.element.parentElement.offsetWidth / this.cellAspectRatio) * updatedPanel[i].sizeY) +\n                        // eslint-disable-next-line radix\n                        parseInt((Math.round(updatedPanel[i].sizeY / 2) * this.cellSpacing[1]).toString(), 0);\n                    panelElement.style.height = '' + updatedHeight + 'px';\n                }\n                this.resizeHeight = true;\n                this.panelPropertyChange(updatedPanel[i], { row: i, col: 0 });\n                this.setPanelPosition(panelElement, updatedPanel[i].row, updatedPanel[i].col);\n                this.panelsSizeY = this.panelsSizeY + updatedPanel[i].sizeY;\n                this.setClasses(this.panelCollection);\n                this.checkDragging(this.dragCollection);\n                this.removeResizeClasses(this.panelCollection);\n            }\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.panelResponsiveUpdate = function () {\n        this.element.classList.add('e-responsive');\n        this.calculateCellSize();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n        }\n        for (var i = 0; i < this.panels.length; i++) {\n            this.setPanelPosition(document.getElementById(this.panels[i].id), this.panels[i].row, this.panels[i].col);\n        }\n        this.updateRowHeight();\n    };\n    DashboardLayout.prototype.updateRowHeight = function () {\n        this.getRowColumn();\n        this.setHeightWidth();\n    };\n    DashboardLayout.prototype.setHeightWidth = function () {\n        var heightValue;\n        var widthValue;\n        if (this.checkMediaQuery()) {\n            heightValue = ((this.maxRow()) *\n                (this.element.parentElement && ((this.element.parentElement.offsetWidth)) / this.cellAspectRatio) +\n                (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        else {\n            heightValue = ((this.maxRow()) *\n                (this.cellSize[0] / this.cellAspectRatio) + (this.maxRow() - 1) * this.cellSpacing[1]) + 'px';\n        }\n        setStyle(this.element, { 'height': heightValue });\n        // eslint-disable-next-line prefer-const\n        widthValue = window.getComputedStyle(this.element).width;\n        setStyle(this.element, { 'width': widthValue });\n    };\n    DashboardLayout.prototype.setHeightAndWidth = function (panelElement, panelModel) {\n        setStyle(panelElement, { 'height': formatUnit(this.setXYDimensions(panelModel)[0]) });\n        setStyle(panelElement, { 'width': formatUnit(this.setXYDimensions(panelModel)[1]) });\n    };\n    DashboardLayout.prototype.renderCell = function (panel, isStringTemplate, index) {\n        var cellElement;\n        this.dimensions = this.setXYDimensions(panel);\n        if (isUndefined(panel.enabled)) {\n            panel.enabled = true;\n        }\n        if (this.contentTemplateChild.length > 0 && !isNullOrUndefined(index)) {\n            cellElement = this.contentTemplateChild[index];\n            if (panel.cssClass) {\n                addClass([cellElement], [panel.cssClass]);\n            }\n            if (panel.id) {\n                cellElement.setAttribute('id', panel.id);\n            }\n        }\n        else {\n            cellElement = this.createPanelElement(panel.cssClass ? panel.cssClass.split(' ') : null, panel.id);\n        }\n        cellElement.style.zIndex = '' + panel.zIndex;\n        this.element.appendChild(cellElement);\n        this.renderReactTemplates();\n        var dashBoardCell = this.renderPanels(cellElement, panel, panel.id, isStringTemplate);\n        this.panelCollection.push(dashBoardCell);\n        this.setXYAttributes(cellElement, panel);\n        this.setHeightAndWidth(cellElement, panel);\n        return cellElement;\n    };\n    DashboardLayout.prototype.setPanelPosition = function (cellElement, row, col) {\n        if (!cellElement) {\n            return;\n        }\n        if (this.checkMediaQuery()) {\n            this.calculateCellSize();\n        }\n        var heightValue = this.getCellSize()[1];\n        var widthValue = this.getCellSize()[0];\n        var left = col === 0 ? 0 : (((col) * ((widthValue) + this.cellSpacing[0])));\n        var top = row === 0 ? 0 : (((row) * ((heightValue) + this.cellSpacing[1])));\n        if (this.checkMediaQuery()) {\n            top = row === 0 ? 0 : ((this.panelsSizeY) * ((heightValue) + this.cellSpacing[1]));\n        }\n        setStyle(cellElement, { 'left': left + 'px', 'top': top + 'px' });\n    };\n    DashboardLayout.prototype.getRowColumn = function () {\n        this.rows = null;\n        if (this.element.querySelectorAll('.e-panel').length > 0 && !this.updatedRows) {\n            var panelElements = this.element.querySelectorAll('.e-panel');\n            for (var i = 0; i < panelElements.length; i++) {\n                var panelElement = panelElements[i];\n                var rowValue = parseInt(panelElement.getAttribute('data-row'), 10);\n                var xValue = parseInt(panelElement.getAttribute('data-sizeY'), 10);\n                this.rows = Math.max(this.rows, (rowValue + xValue));\n            }\n        }\n        else {\n            if (this.updatedRows) {\n                this.rows = this.updatedRows;\n                this.updatedRows = null;\n            }\n            for (var i = 0; i < this.panels.length; i++) {\n                this.rows = Math.max(this.rows, this.panels[i].row);\n            }\n        }\n    };\n    DashboardLayout.prototype.setMinMaxValues = function (panel) {\n        if (!panel.sizeX || panel.sizeX < panel.minSizeX) {\n            this.panelPropertyChange(panel, { sizeX: panel.minSizeX });\n        }\n        else if ((panel.maxSizeX && panel.sizeX > panel.maxSizeX)) {\n            this.panelPropertyChange(panel, { sizeX: panel.maxSizeX });\n        }\n        else if (panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: this.columns });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX });\n        }\n        if (!panel.sizeY || panel.sizeY < panel.minSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.minSizeY });\n        }\n        else if (panel.maxSizeY && panel.sizeY > panel.maxSizeY) {\n            this.panelPropertyChange(panel, { sizeY: panel.maxSizeY });\n        }\n        else {\n            this.panelPropertyChange(panel, { sizeY: panel.sizeY });\n        }\n    };\n    DashboardLayout.prototype.checkMinMaxValues = function (panel) {\n        if (panel.col + panel.sizeX > this.columns) {\n            this.panelPropertyChange(panel, { sizeX: panel.sizeX + (this.columns - (panel.col + panel.sizeX)) });\n        }\n    };\n    DashboardLayout.prototype.panelPropertyChange = function (panel, value) {\n        // eslint-disable-next-line\n        panel.setProperties(value, true);\n    };\n    DashboardLayout.prototype.renderDashBoardCells = function (cells) {\n        if (this.element.querySelectorAll('.e-panel').length > 0 || this.panels.length > 0) {\n            for (var j = 0; j < cells.length; j++) {\n                this.gridPanelCollection.push(cells[j]);\n                this.setMinMaxValues(cells[j]);\n                if (this.maxColumnValue < cells[j].col || this.maxColumnValue < (cells[j].col + cells[j].sizeX)) {\n                    this.panelPropertyChange(cells[j], { col: this.maxColumnValue - cells[j].sizeX });\n                }\n                var cell = this.renderCell(cells[j], false, j);\n                if (this.enableRtl) {\n                    addClass([cell], 'e-rtl');\n                }\n                this.element.appendChild(cell);\n                this.renderReactTemplates();\n                if (this.checkMediaQuery() && j === cells.length - 1) {\n                    this.checkMediaQuerySizing();\n                }\n                else {\n                    this.setPanelPosition(cell, cells[j].row, cells[j].col);\n                    this.mainElement = cell;\n                    this.updatePanelLayout(cell, cells[j]);\n                    this.mainElement = null;\n                }\n            }\n        }\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.collisions = function (row, col, sizeX, sizeY, ignore) {\n        var items = [];\n        if (!sizeX || !sizeY) {\n            sizeX = sizeY = 1;\n        }\n        if (ignore && !(ignore instanceof Array)) {\n            ignore = [ignore];\n        }\n        var item;\n        for (var h = 0; h < sizeY; ++h) {\n            for (var w = 0; w < sizeX; ++w) {\n                item = this.getPanel(row + h, col + w, ignore);\n                if (item && (!ignore || ignore.indexOf(document.getElementById(item.id)) === -1) &&\n                    items.indexOf(document.getElementById(item.id)) === -1) {\n                    items.push(document.getElementById(item.id));\n                }\n            }\n        }\n        return items;\n    };\n    DashboardLayout.prototype.rightWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var columns = [];\n        var spacedColumns = [];\n        rowElements.forEach(function (element) {\n            var columnValue = parseInt(element.getAttribute('data-col'), 10);\n            var sizeXValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col < _this.columns && columnValue >= col) {\n                if (sizeXValue > 1) {\n                    for (var i = columnValue; i < columnValue + sizeXValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(columnValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var i = col + 1; i <= this.columns - 1; i++) {\n                if (columns.indexOf(i) === -1 && i !== col) {\n                    if (spacedColumns.indexOf(i) === -1) {\n                        spacedColumns.push(i);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue > col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col > parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, previous) { return next - previous; });\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.getOccupiedColumns = function (element) {\n        var occupiedItems = [];\n        var sizeX = parseInt(element.getAttribute('data-sizeX'), 10);\n        var col = parseInt(element.getAttribute('data-col'), 10);\n        for (var i = col; (i < col + sizeX && i <= this.columns); i++) {\n            occupiedItems.push(i);\n        }\n        return occupiedItems;\n    };\n    DashboardLayout.prototype.leftWardsSpaceChecking = function (rowElements, col, ele) {\n        var _this = this;\n        var spacedColumns = [];\n        var columns = [];\n        rowElements.forEach(function (element) {\n            var colValue = parseInt(element.getAttribute('data-col'), 10);\n            var xValue = parseInt(element.getAttribute('data-sizeX'), 10);\n            if (col <= _this.columns && colValue <= col) {\n                if (xValue > 1) {\n                    for (var i = colValue; i < colValue + xValue; i++) {\n                        columns.push(i);\n                    }\n                }\n                else {\n                    columns.push(colValue);\n                }\n            }\n        });\n        if (columns.length > 0) {\n            for (var j = 0; j <= col; j++) {\n                if (columns.indexOf(j) === -1 && j !== col) {\n                    if (spacedColumns.indexOf(j) === -1) {\n                        spacedColumns.push(j);\n                    }\n                }\n            }\n        }\n        var occupiedValues = this.getOccupiedColumns(ele);\n        occupiedValues.forEach(function (colValue) {\n            if (colValue < col && spacedColumns.indexOf(colValue) !== -1) {\n                spacedColumns.splice(spacedColumns.indexOf(colValue), 1);\n            }\n        });\n        var eleOccupiedValues = this.getOccupiedColumns(this.checkingElement);\n        eleOccupiedValues.forEach(function (col) {\n            if (col < parseInt(ele.getAttribute('data-col'), 10) && occupiedValues.indexOf(col) === -1 &&\n                spacedColumns.indexOf(col) === -1) {\n                spacedColumns.push(col);\n            }\n        });\n        spacedColumns = spacedColumns.sort(function (next, prev) { return next - prev; });\n        spacedColumns = spacedColumns.reverse();\n        return spacedColumns;\n    };\n    DashboardLayout.prototype.adjustmentAvailable = function (row, col, sizeY, sizeX, ele) {\n        this.leftAdjustable = undefined;\n        this.rightAdjustable = undefined;\n        var isAdjustable = false;\n        var rightSpacing;\n        var rowElement = [];\n        this.topAdjustable = undefined;\n        var eleSizeX = parseInt(ele.getAttribute('data-sizeX'), 10);\n        var eleCol = parseInt(ele.getAttribute('data-col'), 10);\n        rowElement = this.getRowElements(this.collisions(row, 0, this.columns, sizeY, []));\n        if (rowElement.indexOf(ele) === -1) {\n            rowElement.push(ele);\n        }\n        var leftSpacing = this.leftWardsSpaceChecking(rowElement, col, ele);\n        if (leftSpacing.length > 0) {\n            this.leftAdjustable = this.isLeftAdjustable(leftSpacing, ele, row, col, sizeX, sizeY);\n            if (this.spacedColumnValue !== eleCol - this.getCellInstance(this.checkingElement.id).sizeX) {\n                this.leftAdjustable = false;\n            }\n            if (this.leftAdjustable) {\n                this.rightAdjustable = false;\n            }\n            else {\n                this.leftAdjustable = false;\n                rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n                this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n                if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                    this.rightAdjustable = false;\n                }\n                if (!this.rightAdjustable) {\n                    this.rightAdjustable = false;\n                }\n            }\n        }\n        else {\n            rightSpacing = this.rightWardsSpaceChecking(rowElement, col, ele);\n            this.rightAdjustable = rightSpacing.length > 0 ? this.isRightAdjustable(rightSpacing, ele, row, col, sizeX, sizeY) : false;\n            if (this.spacedColumnValue !== eleSizeX + eleCol) {\n                this.rightAdjustable = false;\n            }\n            if (this.rightAdjustable) {\n                this.leftAdjustable = false;\n            }\n        }\n        if (!this.rightAdjustable && !this.leftAdjustable && row > 0) {\n            var endRow = this.getCellInstance(ele.id).row;\n            var topCheck = false;\n            if (this.startRow !== endRow) {\n                topCheck = true;\n            }\n            for (var rowValue = row; rowValue >= 0; rowValue--) {\n                var element = (this.getCellInstance(ele.id).sizeY > 1 && topCheck) ? this.checkingElement : ele;\n                if ((rowValue !== endRow) && (rowValue === endRow - sizeY) &&\n                    this.collisions(rowValue, col, sizeX, sizeY, element).length === 0) {\n                    topCheck = false;\n                    this.topAdjustable = true;\n                    this.spacedRowValue = isNullOrUndefined(this.spacedRowValue) ? rowValue : this.spacedRowValue;\n                    this.spacedColumnValue = col;\n                }\n            }\n        }\n        if (this.rightAdjustable || this.leftAdjustable || this.topAdjustable) {\n            isAdjustable = true;\n            if (isNullOrUndefined(this.spacedRowValue)) {\n                this.spacedRowValue = row;\n            }\n        }\n        return isAdjustable;\n    };\n    DashboardLayout.prototype.isXSpacingAvailable = function (spacing, sizeX) {\n        var isSpaceAvailable = false;\n        var subSpacingColumns = [];\n        for (var i = 0; i < spacing.length; i++) {\n            if (spacing[i + 1] - spacing[i] === 1 || spacing[i + 1] - spacing[i] === -1) {\n                subSpacingColumns.push(spacing[i]);\n                if (sizeX === 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                }\n                if (i === spacing.length - 2) {\n                    subSpacingColumns.push(spacing[i + 1]);\n                    if (subSpacingColumns.length > sizeX) {\n                        subSpacingColumns.splice(-1);\n                    }\n                }\n                if (subSpacingColumns.length === sizeX) {\n                    isSpaceAvailable = true;\n                    this.spacedColumnValue = subSpacingColumns.sort(function (next, previous) { return next - previous; })[0];\n                    if (this.spacedColumnValue < 0) {\n                        this.spacedColumnValue = 1;\n                    }\n                    return isSpaceAvailable;\n                }\n            }\n            else {\n                subSpacingColumns = [];\n                continue;\n            }\n        }\n        return isSpaceAvailable;\n    };\n    DashboardLayout.prototype.getRowElements = function (base) {\n        var rowElements = [];\n        for (var i = 0; i < base.length; i++) {\n            rowElements.push(base[i]);\n        }\n        return rowElements;\n    };\n    DashboardLayout.prototype.isLeftAdjustable = function (spaces, ele, row, col, sizeX, sizeY) {\n        var isLeftAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spaces.length > 0) {\n            this.spacedColumnValue = spaces[0];\n            isLeftAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isLeftAdjudtable = this.isXSpacingAvailable(spaces, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spaces.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spaces.length; i++) {\n                        var collisionValue = this.collisions(row, spaces[i], sizeX, sizeY, this.checkingElement);\n                        if (collisionValue.length === 0) {\n                            this.spacedColumnValue = spaces[i];\n                            isLeftAdjudtable = true;\n                            return isLeftAdjudtable;\n                        }\n                        else {\n                            isLeftAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isLeftAdjudtable = this.replacable(spaces, sizeX, row, sizeY, ele);\n            }\n        }\n        return isLeftAdjudtable;\n    };\n    DashboardLayout.prototype.isRightAdjustable = function (spacing, ele, row, col, sizeX, sizeY) {\n        var isRightAdjudtable;\n        if (sizeX === 1 && sizeY === 1 && spacing.length > 0) {\n            this.spacedColumnValue = spacing[0];\n            isRightAdjudtable = true;\n        }\n        else if (sizeX > 1 && sizeY === 1) {\n            isRightAdjudtable = this.isXSpacingAvailable(spacing, sizeX);\n        }\n        else if (sizeY > 1) {\n            if (sizeX === 1) {\n                var xAdjust = void 0;\n                if (spacing.length >= 1) {\n                    xAdjust = true;\n                }\n                if (xAdjust) {\n                    for (var i = 0; i < spacing.length; i++) {\n                        var collisionValue = this.collisions(row, spacing[i], sizeX, sizeY, this.checkingElement);\n                        for (var collision = 0; collision < collisionValue.length; collision++) {\n                            if (parseInt(ele.getAttribute('data-col'), 10) !== spacing[i]) {\n                                collisionValue.splice(collisionValue.indexOf(collisionValue[collision]), 1);\n                            }\n                        }\n                        if (collisionValue.length === 0) {\n                            isRightAdjudtable = true;\n                            this.spacedColumnValue = spacing[i];\n                            return isRightAdjudtable;\n                        }\n                        else {\n                            isRightAdjudtable = false;\n                        }\n                    }\n                }\n            }\n            else {\n                isRightAdjudtable = this.replacable(spacing, sizeX, row, sizeY, ele);\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.replacable = function (spacing, sizeX, row, sizeY, ele) {\n        var isRightAdjudtable;\n        var updatedCollision = [];\n        for (var j = 0; j < spacing.length; j++) {\n            var xAdjust = this.isXSpacingAvailable(spacing, sizeX);\n            if (xAdjust) {\n                var exclusions = [];\n                exclusions.push(this.checkingElement);\n                exclusions.push(ele);\n                if (updatedCollision.length === 0) {\n                    isRightAdjudtable = true;\n                    // eslint-disable-next-line no-self-assign\n                    this.spacedColumnValue = this.spacedColumnValue;\n                    return isRightAdjudtable;\n                }\n                else {\n                    isRightAdjudtable = false;\n                }\n            }\n        }\n        return isRightAdjudtable;\n    };\n    DashboardLayout.prototype.sortCollisionItems = function (collisionItems) {\n        var updatedCollision = [];\n        var rowElements;\n        var _loop_3 = function (row) {\n            rowElements = [];\n            collisionItems.forEach(function (element) {\n                if (element && element.getAttribute('data-row') === row.toString()) {\n                    rowElements.push(element);\n                }\n            });\n            var _loop_4 = function (column) {\n                rowElements.forEach(function (item) {\n                    if (item && item.getAttribute('data-col') === column.toString()) {\n                        updatedCollision.push(item);\n                    }\n                });\n            };\n            for (var column = this_2.columns - 1; column >= 0; column--) {\n                _loop_4(column);\n            }\n        };\n        var this_2 = this;\n        for (var row = this.rows - 1; row >= 0; row--) {\n            _loop_3(row);\n        }\n        return updatedCollision;\n    };\n    DashboardLayout.prototype.updatedModels = function (collisionItems, panelModel, ele) {\n        var _this = this;\n        var removeableElement = [];\n        if (!this.mainElement) {\n            this.sortedPanel();\n        }\n        collisionItems.forEach(function (element) {\n            _this.checkingElement = element;\n            var model = _this.getCellInstance(element.id);\n            var adjust = !_this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, ele);\n            if (model.sizeX > 1 && adjust) {\n                for (var rowValue = model.row; rowValue < panelModel.row + panelModel.sizeY; rowValue++) {\n                    var collisions = _this.collisions(rowValue, model.col, model.sizeX, model.sizeY, element);\n                    collisions.forEach(function (item) {\n                        if (collisionItems.indexOf(item) >= 0 && removeableElement.indexOf(item) === -1) {\n                            removeableElement.push(item);\n                        }\n                    });\n                }\n            }\n        });\n        removeableElement.forEach(function (item) {\n            if (removeableElement.indexOf(item) >= 0) {\n                collisionItems.splice(collisionItems.indexOf(item), 1);\n            }\n        });\n        return collisionItems;\n    };\n    DashboardLayout.prototype.resetLayout = function (model) {\n        var collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        if (!this.mainElement || this.addPanelCalled || this.resizeCalled || this.movePanelCalled) {\n            return collisions;\n        }\n        if (this.mainElement && this.oldRowCol !== this.cloneObject) {\n            for (var i = 0; i < this.panels.length; i++) {\n                var element = document.getElementById(this.panels[i].id);\n                if (element === this.mainElement) {\n                    continue;\n                }\n                var rowValue = this.cloneObject[element.id].row;\n                var colValue = this.cloneObject[element.id].col;\n                this.setPanelPosition(element, rowValue, colValue);\n                this.panelPropertyChange(this.getCellInstance(element.id), { row: rowValue, col: colValue });\n                this.setAttributes({ value: { col: colValue.toString(), row: rowValue.toString() } }, element);\n                this.updateOldRowColumn();\n            }\n        }\n        this.sortedArray = this.cloneArray;\n        collisions = this.collisions(model.row, model.col, model.sizeX, model.sizeY, this.mainElement);\n        this.sortedPanel();\n        this.updateOldRowColumn();\n        if (this.checkCollision && this.checkCollision.length > 0 && collisions.indexOf(this.checkCollision[0]) === -1 &&\n            this.cloneObject[this.checkCollision[0].id].row === model.row) {\n            collisions.push(this.checkCollision[0]);\n        }\n        return collisions;\n    };\n    DashboardLayout.prototype.swapAvailability = function (collisions, element) {\n        var available = true;\n        var eleModel = this.getCellInstance(element.id);\n        for (var count = 0; count < collisions.length; count++) {\n            var collideModel = this.getCellInstance(collisions[count].id);\n            for (var i = 1; i < eleModel.sizeY; i++) {\n                var excludeEle = [];\n                excludeEle.push(element);\n                excludeEle.push(collisions[count]);\n                var collision = this.collisions(eleModel.row + i, collideModel.col, collideModel.sizeX, collideModel.sizeY, excludeEle);\n                if (collision.length > 0) {\n                    available = false;\n                    return false;\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return available;\n    };\n    DashboardLayout.prototype.checkForSwapping = function (collisions, element) {\n        if (!this.mainElement || collisions.length === 0) {\n            return false;\n        }\n        var direction;\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        if (!this.swapAvailability(collisions, element)) {\n            return false;\n        }\n        var isSwappable = false;\n        for (var count1 = 0; count1 < collisions.length; count1++) {\n            if (collisions.length >= 1 && this.cloneObject[this.mainElement.id].row === this.oldRowCol[this.mainElement.id].row) {\n                return false;\n            }\n        }\n        var updatedRow = direction === 0 ?\n            this.getCellInstance(this.mainElement.id).row + this.getCellInstance(this.mainElement.id).sizeY\n            : this.startRow;\n        for (var count = 0; count < collisions.length; count++) {\n            var collideInstance = this.getCellInstance(collisions[count].id);\n            var elementinstance = this.getCellInstance(element.id);\n            var ignore = [];\n            if (collideInstance.sizeY === 1 && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            else if (collideInstance.sizeY > 1 && ignore.indexOf(collisions[count]) === -1) {\n                if (direction === 1 && elementinstance.row === (this.cloneObject[collideInstance.id].row + collideInstance.sizeY - 1)) {\n                    ignore.push(collisions[count]);\n                }\n                else if (direction === 0 && elementinstance.row === (this.cloneObject[collideInstance.id].row)) {\n                    ignore.push(collisions[count]);\n                }\n                else {\n                    return false;\n                }\n            }\n            if (collideInstance.sizeY <= elementinstance.sizeY && ignore.indexOf(collisions[count]) === -1) {\n                ignore.push(collisions[count]);\n            }\n            ignore.push(this.mainElement);\n            var swapCollision = this.collisions(updatedRow, collideInstance.col, collideInstance.sizeX, collideInstance.sizeY, ignore);\n            if (swapCollision.length > 0) {\n                isSwappable = false;\n                return isSwappable;\n            }\n            else {\n                if (count === collisions.length - 1) {\n                    isSwappable = true;\n                }\n                continue;\n            }\n        }\n        return isSwappable;\n    };\n    DashboardLayout.prototype.swapItems = function (collisions, element, panelModel) {\n        var _this = this;\n        var direction;\n        var swappedElements = [];\n        swappedElements.push(element);\n        var eleSwapRow = parseInt(collisions[0].getAttribute('data-row'), 10);\n        if (this.startRow < eleSwapRow) {\n            direction = 1;\n        }\n        else if (this.startRow > eleSwapRow) {\n            direction = 0;\n        }\n        var collisionItemsRow = direction === 0 ? eleSwapRow + panelModel.sizeY : this.startRow;\n        if (!this.movePanelCalled) {\n            var collisionInstance = this.getCellInstance(collisions[0].id);\n            this.panelPropertyChange(panelModel, { row: direction === 0 ? eleSwapRow : collisionItemsRow + collisionInstance.sizeY });\n        }\n        for (var count = 0; count < collisions.length; count++) {\n            swappedElements.push(collisions[count]);\n            this.setPanelPosition(collisions[count], collisionItemsRow, (this.getCellInstance(collisions[count].id)).col);\n            this.panelPropertyChange(this.getCellInstance(collisions[count].id), { row: collisionItemsRow });\n            collisions[count].setAttribute('data-row', collisionItemsRow.toString());\n        }\n        element.setAttribute('data-row', panelModel.row.toString());\n        this.setPanelPosition(this.shadowEle, panelModel.row, panelModel.col);\n        for (var i = 0; i < this.panels.length; i++) {\n            this.oldRowCol[this.panels[i].id] = { row: this.panels[i].row, col: this.panels[i].col };\n        }\n        this.startRow = panelModel.row;\n        this.updateOldRowColumn();\n        swappedElements.forEach(function (item) {\n            _this.cloneObject[item.id] = _this.oldRowCol[item.id];\n            var itemModel = _this.getCellInstance(item.id);\n            for (var i = 0; i < _this.sortedArray.length; i++) {\n                if (!_this.sortedArray[i]) {\n                    continue;\n                }\n                for (var j = 0; j < _this.sortedArray[i].length; j++) {\n                    if (_this.sortedArray[i][j] === item) {\n                        _this.sortedArray[i][j] = undefined;\n                    }\n                }\n            }\n            if (!_this.sortedArray[itemModel.row]) {\n                _this.sortedArray[itemModel.row] = [];\n            }\n            _this.sortedArray[itemModel.row][itemModel.col] = item;\n            _this.cloneArray = _this.sortedArray;\n        });\n    };\n    DashboardLayout.prototype.updatePanelLayout = function (element, panelModel) {\n        this.collisionChecker = {};\n        var initialModel = [];\n        var checkForAdjustment;\n        var collisionModels = [];\n        var swappingAvailable;\n        if (this.mainElement && this.isRenderComplete) {\n            initialModel = this.resetLayout(panelModel);\n        }\n        else {\n            initialModel = this.collisions(panelModel.row, panelModel.col, panelModel.sizeX, panelModel.sizeY, element);\n        }\n        if (initialModel.length > 0) {\n            initialModel = this.sortCollisionItems(initialModel);\n            initialModel = this.updatedModels(initialModel, panelModel, element);\n            swappingAvailable = !isNullOrUndefined(this.startRow) ? this.checkForSwapping(initialModel, element) : false;\n            if (swappingAvailable) {\n                this.swapItems(initialModel, element, panelModel);\n            }\n            else {\n                for (var i = 0; i < initialModel.length; i++) {\n                    var model = this.getCellInstance(initialModel[i].id);\n                    this.checkingElement = initialModel[i];\n                    this.spacedRowValue = null;\n                    this.spacedColumnValue = null;\n                    checkForAdjustment = this.adjustmentAvailable(model.row, model.col, model.sizeY, model.sizeX, element);\n                    if (checkForAdjustment && !isNullOrUndefined(this.spacedColumnValue)) {\n                        this.setPanelPosition(initialModel[i], this.spacedRowValue, this.spacedColumnValue);\n                        this.oldRowCol[(initialModel[i].id)] = { row: this.spacedRowValue, col: this.spacedColumnValue };\n                        var value = {\n                            attributes: {\n                                row: this.spacedRowValue.toString(),\n                                col: this.spacedColumnValue.toString()\n                            }\n                        };\n                        this.setAttributes(value, initialModel[i]);\n                        this.panelPropertyChange(model, { col: this.spacedColumnValue, row: this.spacedRowValue });\n                        // updated the panel model array as inTopAdjustable case with floating enabled instead of dragging and extra row\n                        if (this.topAdjustable && this.allowFloating) {\n                            this.updatePanels();\n                            this.updateCloneArrayObject();\n                        }\n                        this.spacedRowValue = null;\n                        if (i < initialModel.length) {\n                            continue;\n                        }\n                    }\n                    else {\n                        collisionModels.push(initialModel[i]);\n                    }\n                }\n            }\n        }\n        if (collisionModels.length > 0) {\n            // eslint-disable-next-line\n            var proxy_1 = this;\n            collisionModels.forEach(function (item1) {\n                if (proxy_1.overlapElement.indexOf(item1) === -1) {\n                    proxy_1.overlapElement.push(item1);\n                }\n            });\n            if (this.overlapElement && this.overlapElement.indexOf(element) !== -1) {\n                this.overlapElement.splice(this.overlapElement.indexOf(element), 1);\n            }\n            if (collisionModels.length > 0) {\n                this.updateRowColumn(panelModel.row, this.overlapElement, element);\n                this.checkForCompletePushing();\n            }\n        }\n        if (!this.isSubValue) {\n            this.sortedPanel();\n        }\n        this.updateRowHeight();\n        this.updateGridLines();\n    };\n    DashboardLayout.prototype.checkForCompletePushing = function () {\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.collisionChecker[this.panels[i].id] && this.collisionChecker[this.panels[i].id] !== null) {\n                this.overlapElement = [this.collisionChecker[this.panels[i].id].ele];\n                var key = this.panels[i].id;\n                this.updateRowColumn(this.collisionChecker[key].row, this.overlapElement, this.collisionChecker[key].srcEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.updateCollisionChecked = function (item) {\n        for (var count = 0; count < Object.keys(this.collisionChecker).length; count++) {\n            this.collisionChecker[item.id] = null;\n        }\n    };\n    DashboardLayout.prototype.updateRowColumn = function (row, ele, srcEle) {\n        if (!srcEle) {\n            return;\n        }\n        var eleSizeY = parseInt(srcEle.getAttribute('data-sizeY'), 10);\n        var eleRow = parseInt(srcEle.getAttribute('data-row'), 10);\n        this.overlapElementClone = this.overlapElement && !this.shouldRestrict ? this.overlapElement : this.overlapElement;\n        for (var i = 0; i < this.overlapElementClone.length; i++) {\n            if (this.overlapElementClone.length === 0) {\n                return;\n            }\n            for (var i_1 = 0; i_1 < this.overlapElementClone.length; i_1++) {\n                this.collisionChecker[this.overlapElementClone[i_1].id] = {\n                    ele: this.overlapElementClone[i_1],\n                    row: row,\n                    srcEle: srcEle\n                };\n            }\n            var updatedRow = eleRow + eleSizeY;\n            var collisionY = parseInt(this.overlapElementClone[i].getAttribute('data-sizeY'), 10);\n            var collisionCol = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n            var collisionX = parseInt(this.overlapElementClone[i].getAttribute('data-sizeX'), 10);\n            var colValue = void 0;\n            var collisionModels = void 0;\n            if (this.overlapSubElementClone.indexOf(srcEle) === -1) {\n                this.overlapSubElementClone.push(srcEle);\n            }\n            if (this.overlapSubElementClone.indexOf(this.overlapElementClone[i]) === -1) {\n                this.overlapSubElementClone.push(this.overlapElementClone[i]);\n            }\n            if (collisionY > 1 || collisionX > 1) {\n                var overlapElementModel = this.getCellInstance(this.overlapElementClone[i].id);\n                colValue = overlapElementModel.col;\n                var ele_1 = document.getElementById(overlapElementModel.id);\n                for (var k = overlapElementModel.row; k < eleRow + eleSizeY; k++) {\n                    this.isSubValue = true;\n                    this.panelPropertyChange(overlapElementModel, { row: overlapElementModel.row + 1 });\n                    ele_1.setAttribute('data-row', overlapElementModel.row.toString());\n                    this.setPanelPosition(ele_1, overlapElementModel.row, colValue);\n                    this.updateCollisionChecked(ele_1);\n                    this.oldRowCol[(ele_1.id)] = { row: overlapElementModel.row, col: colValue };\n                    var panelModel = this.getCellInstance(ele_1.id);\n                    this.panelPropertyChange(panelModel, { col: colValue, row: overlapElementModel.row });\n                    var eleRow_1 = parseInt(ele_1.getAttribute('data-row'), 10);\n                    var eleCol = parseInt(ele_1.getAttribute('data-col'), 10);\n                    var sizeX = parseInt(ele_1.getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(ele_1.getAttribute('data-sizeY'), 10);\n                    var excludeElements = [];\n                    excludeElements.push(ele_1);\n                    excludeElements.push(srcEle);\n                    collisionModels = this.collisions(eleRow_1, eleCol, sizeX, sizeY, excludeElements);\n                    if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                        collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                    }\n                    this.collisionPanel(collisionModels, eleCol, eleRow_1, ele_1);\n                }\n                this.isSubValue = false;\n            }\n            else {\n                if (this.addPanelCalled) {\n                    this.addPanelCalled = false;\n                }\n                this.overlapElementClone[i].setAttribute('data-row', updatedRow.toString());\n                var excludeEle = [];\n                excludeEle.push(this.overlapElementClone[i]);\n                excludeEle.push(srcEle);\n                collisionModels = this.collisions(updatedRow, collisionCol, collisionX, collisionY, excludeEle);\n                if (this.mainElement && collisionModels.indexOf(this.mainElement) !== -1) {\n                    collisionModels.splice(collisionModels.indexOf(this.mainElement), 1);\n                }\n                colValue = parseInt(this.overlapElementClone[i].getAttribute('data-col'), 10);\n                this.setPanelPosition(this.overlapElementClone[i], updatedRow, colValue);\n                this.updateCollisionChecked(this.overlapElementClone[i]);\n                this.oldRowCol[(this.overlapElementClone[i].id)] = { row: updatedRow, col: colValue };\n                var panelModel = this.getCellInstance(this.overlapElementClone[i].id);\n                this.panelPropertyChange(panelModel, { col: colValue, row: updatedRow });\n                this.collisionPanel(collisionModels, colValue, updatedRow, this.overlapElementClone[i]);\n            }\n        }\n    };\n    DashboardLayout.prototype.collisionPanel = function (collisionModels, colValue, updatedRow, clone) {\n        var panelModel = this.getCellInstance(clone.id);\n        this.panelPropertyChange(panelModel, { row: updatedRow, col: colValue });\n        if (collisionModels.length > 0) {\n            // eslint-disable-next-line\n            var proxy_2 = this;\n            this.overlapElement = [];\n            this.shouldRestrict = true;\n            collisionModels.forEach(function (item1) {\n                proxy_2.overlapElement.push(item1);\n            });\n            var overlapElementRow1 = parseInt(clone.getAttribute('data-row'), 10);\n            for (var m = 0; m < this.overlapElement.length; m++) {\n                this.updateRowColumn(overlapElementRow1, this.overlapElement, clone);\n            }\n            this.shouldRestrict = false;\n        }\n        else {\n            if (!this.addPanelCalled) {\n                this.sortedPanel();\n            }\n            if (this.overlapSubElementClone.length > 0) {\n                var _loop_5 = function (p) {\n                    var rowVal = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-row'), 10);\n                    var colValue_1 = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-col'), 10);\n                    var sizeX = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeX'), 10);\n                    var sizeY = parseInt(this_3.overlapSubElementClone[p].getAttribute('data-sizeY'), 10);\n                    var collisionModels1 = this_3.collisions(rowVal, colValue_1, sizeX, sizeY, this_3.overlapSubElementClone);\n                    if (this_3.mainElement && collisionModels1.indexOf(this_3.mainElement) !== -1) {\n                        collisionModels1.splice(collisionModels1.indexOf(this_3.mainElement), 1);\n                    }\n                    // eslint-disable-next-line\n                    var proxy = this_3;\n                    collisionModels1.forEach(function (item1) {\n                        proxy.overlapElement.push(item1);\n                    });\n                    if (collisionModels1.length > 0) {\n                        this_3.updateRowColumn(rowVal, this_3.overlapElement, this_3.overlapSubElementClone[p]);\n                    }\n                };\n                var this_3 = this;\n                for (var p = 0; p < this.overlapSubElementClone.length; p++) {\n                    _loop_5(p);\n                }\n            }\n            this.overlapSubElementClone = [];\n        }\n    };\n    DashboardLayout.prototype.removeResizeClasses = function (panelElements) {\n        for (var i = 0; i < panelElements.length; i++) {\n            var element = panelElements[i];\n            var resizerElements = element.querySelectorAll('.e-resize');\n            for (var i_2 = 0; i_2 < resizerElements.length; i_2++) {\n                detach(resizerElements[i_2]);\n            }\n        }\n    };\n    DashboardLayout.prototype.ensureDrag = function () {\n        this.checkDragging(this.dragCollection);\n        var dragPanels = this.element.querySelectorAll('.' + drag);\n        removeClass(dragPanels, [drag]);\n        this.setClasses(this.panelCollection);\n    };\n    DashboardLayout.prototype.setClasses = function (panelCollection) {\n        for (var i = 0; i < panelCollection.length; i++) {\n            var element = panelCollection[i];\n            var containerEle = panelCollection[i].querySelector('.e-panel-container');\n            if (this.allowDragging) {\n                if (this.draggableHandle && element.querySelectorAll(this.draggableHandle)[0]) {\n                    addClass([element.querySelectorAll(this.draggableHandle)[0]], [drag]);\n                }\n                else {\n                    addClass([element], [drag]);\n                }\n            }\n            if (this.allowResizing &&\n                this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n                this.setResizingClass(element, containerEle);\n            }\n        }\n    };\n    DashboardLayout.prototype.setResizingClass = function (ele, container) {\n        this.availableClasses = this.resizableHandles;\n        if (!ele.querySelector(\".e-resize\")) {\n            for (var j = 0; j < this.availableClasses.length; j++) {\n                var spanEle = this.createElement('span');\n                var addClassValue = void 0;\n                container.appendChild(spanEle);\n                if (this.availableClasses[j] === 'e-east' || this.availableClasses[j] === 'e-west' ||\n                    this.availableClasses[j] === 'e-north' || this.availableClasses[j] === 'e-south') {\n                    addClassValue = single;\n                }\n                else {\n                    addClassValue = double;\n                }\n                addClass([spanEle], [addClassValue, this.availableClasses[j], resize, resizeicon]);\n            }\n        }\n    };\n    DashboardLayout.prototype.setXYAttributes = function (element, panelModel) {\n        var value = {\n            value: {\n                sizeX: panelModel.sizeX.toString(),\n                sizeY: panelModel.sizeY.toString(),\n                minSizeX: panelModel.minSizeX.toString(),\n                minSizeY: panelModel.minSizeY.toString(),\n                maxSizeX: !isNullOrUndefined(panelModel.maxSizeX) ? panelModel.maxSizeX.toString() : undefined,\n                maxSizeY: !isNullOrUndefined(panelModel.maxSizeY) ? panelModel.maxSizeY.toString() : undefined,\n                row: panelModel.row.toString(),\n                col: panelModel.col.toString()\n            }\n        };\n        this.setAttributes(value, element);\n    };\n    DashboardLayout.prototype.setXYDimensions = function (panelModel) {\n        var cellHeight = this.getCellSize()[1];\n        var cellWidth = this.getCellSize()[0];\n        var widthValue;\n        var heigthValue;\n        if (panelModel && typeof (cellWidth) === 'number' && typeof (panelModel.sizeX) === 'number' && panelModel.sizeX > 1) {\n            widthValue = (panelModel.sizeX * cellWidth) + (panelModel.sizeX - 1) * this.cellSpacing[0];\n        }\n        else {\n            widthValue = cellWidth;\n        }\n        if (panelModel && typeof (cellHeight) === 'number' && panelModel.sizeY > 1 && typeof (panelModel.sizeY) === 'number') {\n            heigthValue = (panelModel.sizeY * cellHeight) + (panelModel.sizeY - 1) * this.cellSpacing[1];\n        }\n        else {\n            heigthValue = formatUnit(cellHeight);\n        }\n        return [heigthValue, widthValue];\n    };\n    DashboardLayout.prototype.getRowColumnDragValues = function (args) {\n        var value = [];\n        var elementTop = parseFloat(args.element.style.top);\n        var elementLeft = parseFloat(args.element.style.left);\n        var row = Math.round(elementTop / (this.getCellSize()[1] + this.cellSpacing[1]));\n        var col = Math.round(elementLeft / (this.getCellSize()[0] + +this.cellSpacing[0]));\n        value = [row, col];\n        return value;\n    };\n    DashboardLayout.prototype.checkForChanges = function (isInteracted, added, removed) {\n        var changedPanels = [];\n        if (this.removeAllCalled) {\n            changedPanels = [];\n        }\n        else {\n            for (var i = 0; i < this.panels.length; i++) {\n                if (((!isNullOrUndefined(added) ? (this.panels[i].id !== added[0].id) : true) &&\n                    (!isNullOrUndefined(removed) ? (this.panels[i].id !== removed[0].id) : true)) &&\n                    (this.panels[i].row !== this.panelsInitialModel[i].row || this.panels[i].col !== this.panelsInitialModel[i].col)) {\n                    changedPanels.push(this.panels[i]);\n                }\n            }\n        }\n        if (changedPanels.length > 0 || this.removeAllCalled) {\n            var changedArgs = {\n                changedPanels: changedPanels, isInteracted: isInteracted,\n                addedPanels: !isNullOrUndefined(added) ? added : [], removedPanels: !isNullOrUndefined(removed) ? removed : []\n            };\n            this.trigger('change', changedArgs);\n        }\n    };\n    DashboardLayout.prototype.enableDraggingContent = function (collections) {\n        var _this = this;\n        for (var i = 0; i < collections.length; i++) {\n            var abortArray = ['.e-resize', '.' + dragRestrict];\n            var cellElement = collections[i];\n            {\n                this.dragobj = new Draggable(cellElement, {\n                    preventDefault: false,\n                    clone: false,\n                    dragArea: this.element,\n                    isDragScroll: true,\n                    handle: this.draggableHandle ? this.draggableHandle : '.e-panel',\n                    abort: abortArray,\n                    dragStart: this.onDraggingStart.bind(this),\n                    dragStop: function (args) {\n                        var model = _this.getCellInstance(_this.mainElement.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(model.row, model.col, model.sizeX, model.sizeY, _this.mainElement).length > 0) {\n                            _this.setHolderPosition(args);\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                            _this.updatePanelLayout(_this.mainElement, model);\n                        }\n                        else {\n                            _this.setPanelPosition(_this.mainElement, model.row, model.col);\n                        }\n                        _this.mainElement = null;\n                        var item = _this.getPanelBase(args);\n                        if (_this.shadowEle) {\n                            detach(_this.shadowEle);\n                        }\n                        removeClass([_this.element], [preventSelect]);\n                        removeClass([args.element], [dragging]);\n                        _this.shadowEle = null;\n                        args.element.classList.remove('e-dragging');\n                        var row = _this.getRowColumnDragValues(args)[0];\n                        var col = _this.getRowColumnDragValues(args)[1];\n                        var panelModel = _this.getCellInstance(args.element.id);\n                        if (_this.allowPushing &&\n                            _this.collisions(row, col, panelModel.sizeX, panelModel.sizeY, document.getElementById(item.id)).length === 0) {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), { row: row, col: col });\n                            _this.oldRowCol[args.element.id].row = row;\n                            _this.oldRowCol[args.element.id].col = col;\n                            _this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n                            _this.sortedPanel();\n                        }\n                        else {\n                            _this.panelPropertyChange(_this.getCellInstance(args.element.id), {\n                                row: _this.oldRowCol[args.element.id].row,\n                                col: _this.oldRowCol[args.element.id].col\n                            });\n                            args.element.setAttribute('data-col', _this.getCellInstance(args.element.id).col.toString());\n                            args.element.setAttribute('data-row', _this.getCellInstance(args.element.id).row.toString());\n                            _this.sortedPanel();\n                        }\n                        var panelInstance = _this.getCellInstance(args.element.id);\n                        _this.setPanelPosition(args.element, panelInstance.row, panelInstance.col);\n                        _this.updatePanels();\n                        _this.updateCloneArrayObject();\n                        _this.checkForChanges(true);\n                        _this.dragStopEventArgs = { event: args.event, element: args.element };\n                        _this.trigger('dragStop', args);\n                        _this.resizeEvents();\n                        _this.rows = _this.maxRow(true);\n                        _this.setHeightWidth();\n                        _this.updateDragArea();\n                    },\n                    drag: function (args) {\n                        _this.draggedEventArgs = {\n                            event: args.event,\n                            element: args.element,\n                            target: closest((args.target), '.e-panel')\n                        };\n                        _this.trigger('drag', _this.draggedEventArgs);\n                        _this.onDragStart(args);\n                    }\n                });\n                if (this.dragCollection.indexOf(this.dragobj) === -1) {\n                    this.dragCollection.push(this.dragobj);\n                }\n            }\n        }\n    };\n    DashboardLayout.prototype.updatePanels = function () {\n        this.moveItemsUpwards();\n        this.updateOldRowColumn();\n        this.sortedPanel();\n    };\n    DashboardLayout.prototype.updateDragArea = function () {\n        this.dragCollection.forEach(function (dragobj) {\n            // eslint-disable-next-line\n            dragobj.setDragArea();\n        });\n    };\n    DashboardLayout.prototype.updateRowsHeight = function (row, sizeY, addRows) {\n        if (row + sizeY >= this.rows) {\n            this.rows = this.rows + addRows;\n            this.setHeightWidth();\n        }\n    };\n    DashboardLayout.prototype.onDraggingStart = function (args) {\n        var dragArgs = args;\n        this.trigger('dragStart', dragArgs, function (dragArgs) {\n        });\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.mainElement = args.element;\n        this.cloneObject = JSON.parse(JSON.stringify(this.cloneObject));\n        var eleRowValue = this.startRow = parseInt(args.element.getAttribute('data-row'), 10);\n        this.startCol = parseInt(args.element.getAttribute('data-col'), 10);\n        var eleSizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        this.updateRowsHeight(eleRowValue, eleSizeY, eleSizeY);\n        this.updateDragArea();\n        this.shadowEle = document.createElement('div');\n        this.shadowEle.classList.add('e-holder');\n        this.shadowEle.classList.add('e-holder-transition');\n        setStyle(this.shadowEle, { 'position': 'absolute' });\n        addClass([this.element], [preventSelect]);\n        addClass([args.element], [dragging]);\n        this.element.appendChild(this.shadowEle);\n        this.renderReactTemplates();\n        this.shadowEle = document.querySelector('.e-holder');\n        this.shadowEle.style.height = (this.getCellInstance(args.element.id).sizeY * this.cellSize[1]) + 'px';\n        this.shadowEle.style.width = (this.getCellInstance(args.element.id).sizeX * this.cellSize[0]) + 'px';\n        var panelInstance = this.getCellInstance(args.element.id);\n        this.setPanelPosition(this.shadowEle, panelInstance.row, panelInstance.col);\n    };\n    // eslint-disable-next-line\n    DashboardLayout.prototype.cloneModels = function (source, target) {\n        if (target === undefined) {\n            target = [];\n        }\n        for (var i = 0; i < source.length; i++) {\n            // tslint:disable-next-line\n            if (!target[i]) {\n                target[i] = {};\n            }\n            // eslint-disable-next-line guard-for-in\n            for (var k in source[i]) {\n                target[i][k] = source[i][k];\n            }\n        }\n        return target;\n    };\n    DashboardLayout.prototype.onDragStart = function (args) {\n        var endCol;\n        var endRow;\n        var dragCol;\n        var col = dragCol = this.getRowColumnDragValues(args)[1];\n        var row = this.getRowColumnDragValues(args)[0];\n        if (col < 0 || row < 0) {\n            return;\n        }\n        this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        var panelModel = this.getCellInstance(args.element.id);\n        this.updateRowsHeight(panelModel.row, panelModel.sizeY, 1);\n        this.updateDragArea();\n        if (this.allowPushing) {\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            endCol = this.oldRowCol[(args.element.id)].col;\n            endRow = this.oldRowCol[(args.element.id)].row;\n            this.oldRowCol[(args.element.id)] = { row: row, col: col };\n            this.updateOldRowColumn();\n            if (this.startCol !== endCol || this.startRow !== endRow) {\n                this.setHolderPosition(args);\n                if (this.startCol !== endCol) {\n                    this.startRow = endRow;\n                }\n                if (this.startRow !== endRow) {\n                    this.startCol = endCol;\n                }\n                if (this.allowPushing) {\n                    this.mainElement = args.element;\n                    var model = panelModel;\n                    this.checkCollision = this.collisions(model.row, model.col, model.sizeX, model.sizeY, args.element);\n                    if (panelModel.col >= this.checkColumnValue) {\n                        this.checkCollision = [];\n                    }\n                    this.updatePanelLayout(args.element, panelModel);\n                    this.moveItemsUpwards();\n                }\n            }\n        }\n        if (this.allowPushing !== false) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n        }\n        if (this.oldRowCol[args.element.id].row !== row || this.oldRowCol[args.element.id].col !== col) {\n            this.panelPropertyChange(this.getCellInstance(args.element.id), { row: row, col: col });\n            this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, args.element);\n        }\n        if (this.startCol !== dragCol) {\n            this.startCol = endCol;\n            this.moveItemsUpwards();\n        }\n        if (!this.allowPushing) {\n            this.setHolderPosition(args);\n        }\n        this.removeResizeClasses(this.panelCollection);\n        this.setClasses(this.panelCollection);\n        if (this.allowPushing === false) {\n            return;\n        }\n    };\n    DashboardLayout.prototype.getPanelBase = function (args) {\n        var item;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === ((args.element\n                && args.element.id) || args)) {\n                item = this.panelCollection[i];\n            }\n        }\n        return item;\n    };\n    DashboardLayout.prototype.getPanel = function (row, column, excludeItems) {\n        if (excludeItems && !(excludeItems instanceof Array)) {\n            excludeItems = [excludeItems];\n        }\n        var sizeY = 1;\n        while (row > -1) {\n            var sizeX = 1;\n            var col = column;\n            while (col > -1) {\n                var items = this.sortedArray[row];\n                if (items) {\n                    var item = items[col];\n                    if (item && (!excludeItems ||\n                        excludeItems.indexOf(item) === -1) && parseInt(item.getAttribute('data-sizeX'), 10) >= sizeX\n                        && parseInt(item.getAttribute('data-sizeY'), 10) >= sizeY) {\n                        return item;\n                    }\n                }\n                ++sizeX;\n                --col;\n            }\n            --row;\n            ++sizeY;\n        }\n        return null;\n    };\n    DashboardLayout.prototype.setHolderPosition = function (args) {\n        var sizeY = parseInt(args.element.getAttribute('data-sizeY'), 10);\n        var col = parseInt(args.element.getAttribute('data-col'), 10);\n        var row = parseInt(args.element.getAttribute('data-row'), 10);\n        var sizeX = parseInt(args.element.getAttribute('data-sizeX'), 10);\n        var widthValue = this.getCellSize()[0];\n        var heightValue = this.getCellSize()[1];\n        var top = row === 0 ? 0 : (((row) * (heightValue + this.cellSpacing[1])));\n        var left = col === 0 ? 0 : (((col) * (widthValue + this.cellSpacing[0])));\n        var cellSizeOne = this.getCellSize()[1];\n        var cellSizeZero = this.getCellSize()[0];\n        this.elementRef.top = this.shadowEle.style.top = top + 'px';\n        this.elementRef.left = this.shadowEle.style.left = left + 'px';\n        this.elementRef.height = this.shadowEle.style.height = ((sizeY * cellSizeOne) + ((sizeY - 1) * this.cellSpacing[1])) + 'px';\n        this.elementRef.width = this.shadowEle.style.width = ((sizeX * cellSizeZero) + ((sizeX - 1) * this.cellSpacing[0])) + 'px';\n    };\n    DashboardLayout.prototype.getCellInstance = function (idValue) {\n        var currentCellInstance;\n        for (var i = 0; i < this.panels.length; i++) {\n            if (this.panels[i].id === idValue) {\n                currentCellInstance = this.panels[i];\n            }\n        }\n        return currentCellInstance;\n    };\n    /**\n     * Allows to add a panel to the Dashboardlayout.\n     *\n     * @param {panel} panel -  Defines the panel element.\n     *\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.addPanel = function (panel) {\n        this.panelsSizeY = 0;\n        this.maxCol();\n        if (!panel.minSizeX) {\n            panel.minSizeX = 1;\n        }\n        if (!panel.minSizeY) {\n            panel.minSizeY = 1;\n        }\n        if (!panel.id) {\n            panel.id = 'layout_' + this.panelID.toString();\n            this.panelID = this.panelID + 1;\n        }\n        // eslint-disable-next-line\n        var panelProp = new Panel(this, 'panels', panel, true);\n        this.panels.push(panelProp);\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        this.setMinMaxValues(panelProp);\n        if (this.maxColumnValue < panelProp.col || this.maxColumnValue < (panelProp.col + panelProp.sizeX)) {\n            this.panelPropertyChange(panelProp, { col: this.maxColumnValue - panelProp.sizeX });\n        }\n        var cell = this.renderCell(panelProp, true, null);\n        this.oldRowCol[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.cloneObject[panelProp.id] = { row: panelProp.row, col: panelProp.col };\n        this.updateOldRowColumn();\n        this.element.insertAdjacentElement('afterbegin', cell);\n        this.addPanelCalled = true;\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n            this.removeResizeClasses(this.panelCollection);\n        }\n        else {\n            this.mainElement = cell;\n            if (!this.checkCollision) {\n                this.checkCollision = [];\n            }\n            this.setPanelPosition(cell, panelProp.row, panelProp.col);\n            this.updatePanelLayout(cell, panelProp);\n        }\n        this.addPanelCalled = false;\n        if (this.allowDragging &&\n            this.mediaQuery ? !(this.checkMediaQuery()) : false) {\n            this.enableDraggingContent([document.getElementById(panelProp.id)]);\n        }\n        this.setClasses([cell]);\n        if (this.allowFloating) {\n            this.mainElement = null;\n            this.moveItemsUpwards();\n        }\n        this.updateOldRowColumn();\n        this.sortedPanel();\n        this.updateCloneArrayObject();\n        if (this.allowResizing) {\n            for (var i = 0; i < cell.querySelectorAll('.e-resize').length; i++) {\n                var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                EventHandler.add(cell.querySelectorAll('.e-resize')[i], eventName, this.downResizeHandler, this);\n                if (Browser.info.name !== 'msie') {\n                    EventHandler.add(cell.querySelectorAll('.e-resize')[i], 'touchstart', this.touchDownResizeHandler, this);\n                }\n            }\n        }\n        this.checkForChanges(false, [panelProp]);\n    };\n    /**\n     * Allows to update a panel in the DashboardLayout.\n     *\n     * @param {panel} panel - Defines the panel element.\n     *\n     * @returns void\n     * @deprecated\n     */\n    DashboardLayout.prototype.updatePanel = function (panel) {\n        this.panelsSizeY = 0;\n        if (!panel.id) {\n            return;\n        }\n        var panelInstance = this.getCellInstance(panel.id);\n        if (!panelInstance) {\n            return;\n        }\n        this.maxCol();\n        panel.col = (panel.col < 1) ? 0 : ((panel.col > this.columns)) ? this.columns - 1 : panel.col;\n        if (isNullOrUndefined(panel.col)) {\n            panel.col = panelInstance.col;\n        }\n        this.panelPropertyChange(panelInstance, panel);\n        this.setMinMaxValues(panelInstance);\n        var cell = document.getElementById(panel.id);\n        this.mainElement = cell;\n        var cssClass = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n        this.panelContent = cell.querySelector('.e-panel-container') ?\n            cell.querySelector('.e-panel-container') :\n            this.createSubElement(cssClass, cell.id + '_content', panelContainer);\n        cell.appendChild(this.panelContent);\n        if (panelInstance.header) {\n            var headerTemplateElement = cell.querySelector('.e-panel-header') ?\n                cell.querySelector('.e-panel-header') : this.createSubElement([], cell.id + 'template', '');\n            addClass([headerTemplateElement], [header]);\n            headerTemplateElement.innerHTML = '';\n            var id = this.element.id + 'HeaderTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.header, headerTemplateElement, id, true, 'header');\n            this.panelContent.appendChild(headerTemplateElement);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-header')) {\n                detach(cell.querySelector('.e-panel-header'));\n            }\n        }\n        if (panelInstance.content) {\n            var cssClass_2 = panelInstance.cssClass ? panelInstance.cssClass.split(' ') : null;\n            this.panelBody = cell.querySelector('.e-panel-content') ? cell.querySelector('.e-panel-content') :\n                this.createSubElement(cssClass_2, cell.id + '_body', panelContent);\n            this.panelBody.innerHTML = '';\n            var headerHeight = this.panelContent.querySelector('.e-panel-header') ?\n                window.getComputedStyle(this.panelContent.querySelector('.e-panel-header')).height : '0px';\n            var contentHeightValue = 'calc( 100% - ' + headerHeight + ')';\n            setStyle(this.panelBody, { height: contentHeightValue });\n            var id = this.element.id + 'ContentTemplate' + panelInstance.id;\n            this.renderTemplate(panelInstance.content, this.panelBody, id, true, 'content');\n            this.panelContent.appendChild(this.panelBody);\n            this.renderReactTemplates();\n        }\n        else {\n            if (cell.querySelector('.e-panel-content')) {\n                detach(cell.querySelector('.e-panel-content'));\n            }\n        }\n        this.setXYAttributes(cell, panelInstance);\n        this.setHeightAndWidth(cell, panelInstance);\n        this.setPanelPosition(cell, panelInstance.row, panelInstance.col);\n        this.updatePanelLayout(cell, panelInstance);\n        if (this.checkMediaQuery()) {\n            this.checkMediaQuerySizing();\n        }\n        this.mainElement = null;\n        this.updatePanels();\n        this.updateCloneArrayObject();\n    };\n    DashboardLayout.prototype.updateCloneArrayObject = function () {\n        this.cloneArray = this.sortedArray;\n        this.cloneObject = JSON.parse(JSON.stringify(this.oldRowCol));\n    };\n    /**\n     * Returns the panels object of the DashboardLayout.\n     *\n     * @returns [`PanelModel[]`](./panelModel)\n     */\n    DashboardLayout.prototype.serialize = function () {\n        var cloneModel = this.cloneModels(this.panels);\n        var customObject = [];\n        for (var i = 0; i < cloneModel.length; i++) {\n            customObject.push({\n                id: cloneModel[i].id, row: cloneModel[i].row, col: cloneModel[i].col, sizeX: cloneModel[i].sizeX,\n                sizeY: cloneModel[i].sizeY, minSizeX: cloneModel[i].minSizeX, minSizeY: cloneModel[i].minSizeY,\n                maxSizeX: cloneModel[i].maxSizeX, maxSizeY: cloneModel[i].maxSizeY\n            });\n        }\n        return (customObject);\n    };\n    /**\n     * Removes all the panels from the DashboardLayout.\n     */\n    DashboardLayout.prototype.removeAll = function () {\n        this.removeAllCalled = true;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            detach(this.panelCollection[i]);\n            this.clearTemplate();\n        }\n        this.removeAllPanel();\n        this.rows = 0;\n        this.gridPanelCollection = [];\n        this.setHeightWidth();\n        this.sortedPanel();\n        this.sortedArray = [];\n        this.overlapElementClone = [];\n        this.overlapElement = [];\n        this.overlapSubElementClone = [];\n        this.panelCollection = [];\n        this.oldRowCol = {};\n        this.cloneObject = {};\n        var clonedPanels = this.cloneModels(this.panels);\n        this.setProperties({ panels: [] }, true);\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, clonedPanels);\n        this.removeAllCalled = false;\n    };\n    /**\n     * Removes the panel from the DashboardLayout.\n     *\n     * @param {string} id -  Defines the panel ID.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.removePanel = function (id) {\n        var _this = this;\n        this.panelsSizeY = 0;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var removedPanel;\n        for (var i = 0; i < this.panelCollection.length; i++) {\n            if (this.panelCollection[i].id === id) {\n                detach(this.panelCollection[i]);\n                this.panelCollection.splice(i, 1);\n            }\n            if (this.panels[i].id === id) {\n                removedPanel = this.panels[i];\n                this.panels.splice(i, 1);\n                this.panelsInitialModel.splice(i, 1);\n                this.updateOldRowColumn();\n                this.sortedPanel();\n            }\n        }\n        this.updatePanels();\n        if (this.checkMediaQuery()) {\n            this.isPanelRemoved = true;\n            this.checkMediaQuerySizing();\n            this.isPanelRemoved = false;\n        }\n        this.gridPanelCollection.forEach(function (item) {\n            if (item.id === id) {\n                _this.gridPanelCollection.splice(_this.gridPanelCollection.indexOf(item), 1);\n            }\n        });\n        this.updateCloneArrayObject();\n        this.checkForChanges(false, null, [removedPanel]);\n    };\n    /**\n     *Moves the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param  {number} row - Defines the row of dashboard layout.\n     *\n     * @param {number} col - Defines the column of dashboard layout.\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.movePanel = function (id, row, col) {\n        this.movePanelCalled = true;\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        if ((isNaN(row) || row === null) || (isNaN(col) || col === null) || !panelInstance) {\n            return;\n        }\n        if (col < 0) {\n            col = 0;\n        }\n        else if (col > this.columns) {\n            col = this.columns - panelInstance.sizeX;\n        }\n        this.panelPropertyChange(panelInstance, { row: row, col: col });\n        var ele = document.getElementById(id);\n        this.mainElement = ele;\n        this.startRow = parseInt(ele.getAttribute('data-row'), 10);\n        this.startCol = parseInt(ele.getAttribute('data-col'), 10);\n        this.setAttributes({ value: { col: col.toString(), row: row.toString() } }, ele);\n        this.updateOldRowColumn();\n        this.setPanelPosition(ele, row, col);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updateRowHeight();\n        this.updatePanels();\n        this.updateCloneArrayObject();\n        this.mainElement = null;\n        if (this.allowFloating) {\n            this.moveItemsUpwards();\n        }\n        this.movePanelCalled = false;\n        this.checkForChanges(false);\n    };\n    DashboardLayout.prototype.setAttributes = function (value, ele) {\n        for (var i = 0; i < Object.keys(value).length; i++) {\n            if (Object.keys(value)) {\n                if (value[Object.keys(value)[i]].col) {\n                    ele.setAttribute('data-col', value[Object.keys(value)[i]].col.toString());\n                }\n                if (value[Object.keys(value)[i]].row) {\n                    ele.setAttribute('data-row', value[Object.keys(value)[i]].row.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeX) {\n                    ele.setAttribute('data-sizeX', value[Object.keys(value)[i]].sizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].sizeY) {\n                    ele.setAttribute('data-sizeY', value[Object.keys(value)[i]].sizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeX) {\n                    ele.setAttribute('data-minSizeX', value[Object.keys(value)[i]].minSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].minSizeY) {\n                    ele.setAttribute('data-minSizeY', value[Object.keys(value)[i]].minSizeY.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeX) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeX.toString());\n                }\n                if (value[Object.keys(value)[i]].maxSizeY) {\n                    ele.setAttribute('data-maxSizeY', value[Object.keys(value)[i]].maxSizeY.toString());\n                }\n            }\n        }\n    };\n    /**\n     * Resize the panel in the DashboardLayout.\n     *\n     * @param {string} id - Defines the panel ID.\n     *\n     * @param {number} sizeX - Defines the sizeX of dashboard layout.\n     *\n     * @param {number} sizeY - Defines the sizeY of dashboard layout.\n     */\n    DashboardLayout.prototype.resizePanel = function (id, sizeX, sizeY) {\n        this.panelsInitialModel = this.cloneModels(this.panels);\n        var panelInstance = this.getCellInstance(id);\n        this.resizeCalled = true;\n        var ele = document.getElementById(id);\n        var args = { event: null, element: ele, isInteracted: false };\n        this.trigger('resizeStart', args);\n        this.panelPropertyChange(panelInstance, { sizeX: sizeX, sizeY: sizeY });\n        this.setMinMaxValues(panelInstance);\n        this.checkMinMaxValues(panelInstance);\n        this.mainElement = ele;\n        this.setAttributes({ value: { sizeX: panelInstance.sizeX.toString(), sizeY: panelInstance.sizeY.toString() } }, ele);\n        this.setHeightAndWidth(ele, panelInstance);\n        this.updatePanelLayout(ele, panelInstance);\n        this.updatePanels();\n        this.updateRowHeight();\n        this.resizeCalled = false;\n        this.trigger('resizeStop', args);\n        this.checkForChanges(false);\n    };\n    /**\n     * Destroys the DashboardLayout component\n     *\n     * @returns void\n     */\n    DashboardLayout.prototype.destroy = function () {\n        // eslint-disable-next-line\n        EventHandler.remove(window, 'resize', this.refreshListener);\n        removeClass([this.element], ['e-dashboardlayout', 'e-lib', 'e-responsive', 'e-control']);\n        this.element.removeAttribute('style');\n        for (var i = 0; i < this.dragCollection.length; i++) {\n            this.dragCollection[i].destroy();\n        }\n        this.removeAllPanel();\n        _super.prototype.destroy.call(this);\n        this.clearTemplate();\n        this.renderReactTemplates();\n    };\n    DashboardLayout.prototype.removeAllPanel = function () {\n        while (this.element.firstElementChild) {\n            detach(this.element.firstElementChild);\n            this.clearTemplate();\n        }\n    };\n    DashboardLayout.prototype.setEnableRtl = function () {\n        if (this.enableRtl === true) {\n            addClass([this.element], 'e-rtl');\n        }\n        else {\n            removeClass([this.element], 'e-rtl');\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * returns void\n     *\n     * @private\n     */\n    DashboardLayout.prototype.updateCellSizeAndSpacing = function () {\n        this.panelResponsiveUpdate();\n        this.setHeightWidth();\n        this.getRowColumn();\n        for (var i = 0; i < this.element.querySelectorAll('.e-panel').length; i++) {\n            var ele = this.element.querySelectorAll('.e-panel')[i];\n            var panelModel = this.getCellInstance(ele.id);\n            this.setHeightAndWidth(ele, panelModel);\n            this.setPanelPosition(ele, panelModel.row, panelModel.col);\n        }\n    };\n    DashboardLayout.prototype.updatePanelsDynamically = function (panels) {\n        this.removeAll();\n        this.setProperties({ panels: panels }, true);\n        this.setOldRowCol();\n        if (this.table) {\n            this.table.remove();\n        }\n        this.initialize();\n        if (this.checkMediaQuery()) {\n            this.refresh();\n        }\n        if (this.showGridLines) {\n            this.initGridLines();\n        }\n    };\n    DashboardLayout.prototype.checkForIDValues = function (panels) {\n        var _this = this;\n        if (!isNullOrUndefined(panels) && panels.length > 0) {\n            this.panelID = 0;\n            panels.forEach(function (panel) {\n                if (!panel.id) {\n                    _this.panelPropertyChange(panel, { id: 'layout_' + _this.panelID.toString() });\n                    _this.panelID = _this.panelID + 1;\n                }\n            });\n        }\n        else {\n            this.restrictDynamicUpdate = true;\n        }\n    };\n    /**\n     * Called internally if any of the property value changed.\n     *\n     * returns void\n     *\n     * @private\n     */\n    // eslint-disable-next-line\n    DashboardLayout.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var _this = this;\n        if (newProp.panels && newProp.panels.length > 0 && newProp.panels[0] instanceof Panel) {\n            this.checkForIDValues(newProp.panels);\n        }\n        for (var _i = 0, _a = Object.keys(newProp); _i < _a.length; _i++) {\n            var prop = _a[_i];\n            switch (prop) {\n                case 'enableRtl':\n                    this.setProperties({ enableRtl: newProp.enableRtl }, true);\n                    this.setEnableRtl();\n                    break;\n                case 'mediaQuery':\n                    this.setProperties({ mediaQuery: newProp.mediaQuery }, true);\n                    if (this.checkMediaQuery()) {\n                        this.checkMediaQuerySizing();\n                    }\n                    break;\n                case 'allowDragging':\n                    this.setProperties({ allowDragging: newProp.allowDragging }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowResizing':\n                    this.setProperties({ allowResizing: newProp.allowResizing }, true);\n                    if (this.allowResizing) {\n                        this.setClasses(this.panelCollection);\n                        this.resizeEvents();\n                    }\n                    else {\n                        var panelElements = this.element.querySelectorAll('.e-panel .e-panel-container .e-resize');\n                        for (var i = 0; i < panelElements.length; i++) {\n                            var eventName = (Browser.info.name === 'msie') ? 'mousedown pointerdown' : 'mousedown';\n                            var element = panelElements[i];\n                            EventHandler.remove(element, eventName, this.downResizeHandler);\n                            if (Browser.info.name !== 'msie') {\n                                EventHandler.remove(element, 'touchstart', this.touchDownResizeHandler);\n                            }\n                        }\n                        this.removeResizeClasses(this.panelCollection);\n                    }\n                    break;\n                case 'cellSpacing':\n                    this.setProperties({ cellSpacing: newProp.cellSpacing }, true);\n                    this.updateCellSizeAndSpacing();\n                    this.updateGridLines();\n                    break;\n                case 'draggableHandle':\n                    this.setProperties({ draggableHandle: newProp.draggableHandle }, true);\n                    this.ensureDrag();\n                    break;\n                case 'allowFloating':\n                    this.setProperties({ allowFloating: newProp.allowFloating }, true);\n                    this.moveItemsUpwards();\n                    break;\n                case 'showGridLines':\n                    if (this.showGridLines) {\n                        this.setProperties({ showGridLines: newProp.showGridLines }, true);\n                        this.initGridLines();\n                    }\n                    else {\n                        if (this.table) {\n                            detach(this.table);\n                        }\n                    }\n                    break;\n                case 'allowPushing':\n                    this.setProperties({ allowPushing: newProp.allowPushing }, true);\n                    break;\n                case 'panels':\n                    if (!newProp.columns && !this.restrictDynamicUpdate && (newProp.panels[0] && newProp.panels.length > 0)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(newProp.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else if (!(newProp.panels[0] && newProp.panels.length)) {\n                        this.isRenderComplete = false;\n                        this.updatePanelsDynamically(this.panels);\n                        this.isRenderComplete = true;\n                    }\n                    else {\n                        this.restrictDynamicUpdate = false;\n                    }\n                    break;\n                case 'columns':\n                    this.isRenderComplete = false;\n                    if (newProp.panels) {\n                        this.updatePanelsDynamically(newProp.panels);\n                    }\n                    this.setProperties({ columns: newProp.columns }, true);\n                    this.panelCollection = [];\n                    this.maxColumnValue = this.columns;\n                    this.calculateCellSize();\n                    this.panels.forEach(function (panel) {\n                        _this.setMinMaxValues(panel);\n                        if (_this.maxColumnValue < panel.col || _this.maxColumnValue < (panel.col + panel.sizeX)) {\n                            var colValue = _this.maxColumnValue - panel.sizeX;\n                            _this.panelPropertyChange(panel, { col: colValue < 0 ? 0 : colValue });\n                            _this.setXYAttributes(document.getElementById(panel.id), panel);\n                        }\n                        _this.setHeightAndWidth(document.getElementById(panel.id), panel);\n                        _this.panelCollection.push(document.getElementById(panel.id));\n                        _this.setPanelPosition(document.getElementById(panel.id), panel.row, panel.col);\n                        _this.mainElement = document.getElementById(panel.id);\n                        _this.updatePanelLayout(document.getElementById(panel.id), panel);\n                        _this.mainElement = null;\n                    });\n                    this.updatePanels();\n                    this.updateCloneArrayObject();\n                    this.isRenderComplete = true;\n                    this.updateGridLines();\n                    break;\n            }\n        }\n    };\n    /**\n     * Gets the properties to be maintained upon browser refresh.\n     *\n     * @returns string\n     * @private\n     */\n    DashboardLayout.prototype.getPersistData = function () {\n        var keyEntity = ['panels'];\n        return this.addOnPersist(keyEntity);\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePersistPanelData = function (persistedData) {\n        var data = window.localStorage.getItem(this.getModuleName() + this.element.id);\n        if (!(isNullOrUndefined(data) || (data === '')) || !isNullOrUndefined(persistedData)) {\n            var dataObj = !isNullOrUndefined(persistedData) ? persistedData : JSON.parse(data);\n            var keys = Object.keys(dataObj);\n            this.isProtectedOnChange = true;\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if ((typeof getValue(key, this) === 'object' && !isNullOrUndefined(getValue(key, this)))) {\n                    if (Array.isArray(getValue(key, this)) && key === 'panels') {\n                        this.mergePanels(dataObj[key], this[key]);\n                    }\n                }\n            }\n            this.isProtectedOnChange = false;\n        }\n    };\n    /* istanbul ignore next */\n    DashboardLayout.prototype.mergePanels = function (sortedPanels, panels) {\n        var storedColumns = sortedPanels;\n        var _loop_6 = function (i) {\n            this_4.checkForIDValues(panels);\n            var localPanel = panels.filter(function (pan) { return pan.id === storedColumns[i].id; })[0];\n            if (!isNullOrUndefined(localPanel)) {\n                storedColumns[i] = extend(localPanel, storedColumns[i], {}, true);\n            }\n        };\n        var this_4 = this;\n        for (var i = 0; i < storedColumns.length; i++) {\n            _loop_6(i);\n        }\n    };\n    /**\n     * Returns the current module name.\n     *\n     * @returns string\n     *\n     * @private\n     */\n    DashboardLayout.prototype.getModuleName = function () {\n        return 'DashboardLayout';\n    };\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowDragging\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowPushing\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"enableHtmlSanitizer\", void 0);\n    __decorate([\n        Property(true)\n    ], DashboardLayout.prototype, \"allowFloating\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"cellAspectRatio\", void 0);\n    __decorate([\n        Property([5, 5])\n    ], DashboardLayout.prototype, \"cellSpacing\", void 0);\n    __decorate([\n        Property(1)\n    ], DashboardLayout.prototype, \"columns\", void 0);\n    __decorate([\n        Property(false)\n    ], DashboardLayout.prototype, \"showGridLines\", void 0);\n    __decorate([\n        Property(null)\n    ], DashboardLayout.prototype, \"draggableHandle\", void 0);\n    __decorate([\n        Property('en-US')\n    ], DashboardLayout.prototype, \"locale\", void 0);\n    __decorate([\n        Property('max-width: 600px')\n    ], DashboardLayout.prototype, \"mediaQuery\", void 0);\n    __decorate([\n        Collection([], Panel)\n    ], DashboardLayout.prototype, \"panels\", void 0);\n    __decorate([\n        Property(['e-south-east'])\n    ], DashboardLayout.prototype, \"resizableHandles\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"change\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"drag\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"dragStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resize\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], DashboardLayout.prototype, \"destroyed\", void 0);\n    DashboardLayout = __decorate([\n        NotifyPropertyChanges\n    ], DashboardLayout);\n    return DashboardLayout;\n}(Component));\nexport { DashboardLayout };\n"],"names":["__extends","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__","this","constructor","prototype","create","__decorate","decorators","target","key","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","defineProperty","ROOT","HORIZONTAL_PANE","VERTICAL_PANE","PANE","SPLIT_H_PANE","SPLIT_V_PANE","SPLIT_BAR","SPLIT_H_BAR","SPLIT_V_BAR","STATIC_PANE","SCROLL_PANE","RESIZE_BAR","RESIZABLE_BAR","SPLIT_BAR_HOVER","SPLIT_BAR_ACTIVE","HIDE_HANDLER","DISABLED","COLLAPSIBLE","NAVIGATE_ARROW","ARROW_RIGHT","ARROW_LEFT","ARROW_UP","ARROW_DOWN","HIDE_ICON","EXPAND_PANE","COLLAPSE_PANE","PANE_HIDDEN","RESIZABLE_PANE","LAST_BAR","PaneProperties","_super","apply","Property","ChildProperty","Splitter","options","element","_this","call","allPanes","paneOrder","separatorOrder","allBars","previousCoordinates","currentCoordinates","updatePrePaneInPercentage","updateNextPaneInPercentage","panesDimensions","border","validDataAttributes","validElementAttributes","iconsDelay","templateElement","collapseFlag","expandFlag","onPropertyChanged","newProp","oldProp","classList","contains","_i","_a","keys","setSplitterSize","height","width","setCssClass","cssClass","isEnabled","enabled","setReversePane","setSeparatorSize","separatorSize","changeOrientation","orientation","paneSettings","destroyPaneSettings","createSplitPane","addSeparator","getPanesDimensions","setRTL","enableRtl","isCollapsed","paneCounts","index","parseInt","changedPropsCount","j","property","newValue","isNullOrUndefined","innerHTML","setTemplate","newVal","resizableModel","collapsibleModelUpdate","collapsed","collapsedOnchange","newValSize","updatePaneSize","style","flexBasis","staticPaneWidth","flexPaneIndexes","flexCount","size","innerText","offsetWidth","offsetHeight","avgDiffWidth","add","preRender","onReportWindowSize","reportWindowSize","bind","onMouseMoveHandler","onMouseMove","onMouseUpHandler","onMouseUp","onTouchMoveHandler","onTouchEndHandler","wrapper","cloneNode","wrapperParent","parentElement","removeClass","addClass","css","Browser","info","name","isDevice","getPersistData","addOnPersist","getModuleName","render","checkDataAttributes","setDimension","getHeight","getWidth","setPaneSettings","enableReversePanes","EventHandler","document","onDocumentClick","renderComplete","ownerDocument","defaultView","addEventListener","onMove","e","currentSeparator","remove","checkPaneSize","prePaneSize","previousPane","nextPaneSize","nextPane","splitBarSize","indexOf","previousFlexBasis","updatePaneFlexBasis","nextFlexBasis","totalPercent","totalWidth","convertPercentageToPixel","type","keyCode","getMinInPixel","nextPaneIndex","min","prevPaneIndex","addStaticPaneClass","event","getSeparatorIndex","isPrevpaneCollapsed","isPrevpaneExpanded","isNextpaneCollapsed","activeElement","resizable","preventDefault","triggerResizing","collapsible","expand","collapse","minValue","paneMinRange","convertPixelToNumber","toString","sanitizeHelper","value","enableHtmlSanitizer","item","SanitizeHtmlHelper","beforeSanitize","extend","cancel","helper","trigger","serializeValue","api","dataIndex","getAttribute","removeDataPrefix","paneIndex","children","dataAttr","max","content","paneAPI","slice","forEach","el","detach","restoreElem","childCount","paneCollection","paneValue","setProperties","checkArrow","targetArrow","querySelector","attribute","lastIndexOf","rtl","reverse","setAttribute","removeAttribute","formatUnit","setStyleAttribute","push","getBoundingClientRect","className","split","hideResizer","select","showResizer","onMouseDown","isResizable","updateResizablePanes","arrow2","arrow1","paneCollapsible","updateCollapseIcons","collapseArrow","barIndex","arrow","selectAll","updateIsCollapsed","lastBarArrow","lastBarIndex","click","m","targetArrows","event_1","eventArgs","beforeAction","beforeCollapseArgs","collapsedindex","sort","collapseEventArgs","afterAction","splitterProperty","sizeValue","separator","splitBar","resizeBar","isVertical","checkSplitPane","currentBar","elementIndex","collectPanes","childNodes","elements","getPrevPane","order","getOrderPane","getNextPane","pane","getOrderIndex","panes","updateSeparatorSize","resizeHanlder","addResizeHandler","createElement","appendChild","updateIconClass","leftArrow","rightArrow","createSeparator","proxy","addMouseActions","getPaneDetails","clonedEle","parentNode","toLowerCase","wireClickEvents","eventName","allBar","querySelectorAll","sepSize","paddingLeft","paddingRight","getPreviousPaneIndex","getNextPaneIndex","sTout","hoverTimeOut","setTimeout","clearTimeout","getEventType","updateCurrentSeparator","isSeparator","isMouseEvent","isMouse","pointerType","updateCursorPosition","changeCoordinates","x","pageX","y","pageY","eventType","touches","coordinates","paneCount","body","updateSplitterSize","removeEventListener","iswindowResize","getComputedStyle","marginLeft","marginTop","marginBottom","diff","updatePane","flexPane","sizeDiff","isPercent","convertPixelToPercentage","wireResizeEvents","touchMoveEvent","touchEndEvent","unwireResizeEvents","clickHandler","hoverBars","icon","collapseAction","expandAction","splitterDetails","beforeExpandArgs","expandPane","expandEventArgs","removeStaticPanes","collapseCount","flexStatus","nextElementSibling","collapseClass","updatePaneSettings","updateIconsOnExpand","updateFlexGrow","checkStaticPanes","flexGrow","staticPane","status","visiblePane","hideTargetBarIcon","targetBar","showTargetBarIcon","updateIconsOnCollapse","showCurrentBarIcon","currentBarIndex","prevBar","previousElementSibling","splitInstance","prevPaneCollapsed","nextPaneExpanded","nextPaneNextEle","getPrevBar","nextBar","collapsePane","paneValues","nextPaneCollapsible","prevPaneCollapsible","prevPaneExpanded","nextPaneCollapsed","prevPanePreEle","currentIndex","array","getNextBar","updateBars","paneSize","prePaneDimenson","nextPaneDimension","pointerEvents","resizeStartArgs","previous","removePercentageUnit","offset","parseFloat","targetElement","convertedValue","percentage","offsetValue","Math","ceil","calcDragPosition","rectValue","getSeparatorPosition","rectBound","left","top","window","scrollY","offSet","getMinMax","selection","defaultVal","separatorIndex","prevPane","getPaneHeight","isValidSize","isValid","getPaneDimensions","previousPaneHeightWidth","nextPaneHeightWidth","checkCoordinates","coordinatesChanged","isCursorMoved","getBorder","clientWidth","clientHeight","separatorNewPosition","validateDraggedPosition","prevPaneCurrentWidth","nextPaneCurrentWidth","validateMinMaxValues","difference","calculateCurrentDimensions","validateMinRange","paneCurrentWidth","paneMinDimensions","validatedVal","validateMaxRange","paneMaxDimensions","paneMaxRange","equatePaneWidths","round","Number","draggedPos","prevPaneHeightWidth","separatorTopLeft","offsetLeft","offsetTop","prePaneRange","nextPaneRange","pane1MinSize","pane2MinSize","pane1MaxSize","pane2MaxSize","validatedSize","enablePersistence","panesDimension","child","sizeFlag","flex-basis","template","toElement","templateCompile","isReact","renderReactTemplates","ele","cnt","tempEle","compileElement","childEle","val","prop","eleVal","display","removeProperty","trim","templateFn","outerHTML","compile","templateFUN","id","childElement","nodeName","destroy","isDestroyed","attributes","refreshing","clearTemplate","addPaneClass","removePaneOrders","paneClass","setPaneOrder","removeSeparator","updatePanes","addPane","paneProperties","newPane","paneDetails","splice","insertBefore","removePane","elementClass","Collection","Event","NotifyPropertyChanges","Component","preventSelect","dragging","drag","responsive","panelContent","panelContainer","header","Panel","DashboardLayout","rows","panelID","movePanelCalled","resizeCalled","mOffX","mOffY","maxTop","maxRows","mouseX","mouseY","minTop","minLeft","isInlineRendering","removeAllCalled","isPanelRemoved","panelsSizeY","resizeHeight","setValue","mergePersistPanelData","panelCollection","sortedArray","gridPanelCollection","overlapElement","overlapElementClone","overlapSubElementClone","collisionChecker","dragCollection","elementRef","dimensions","allItems","oldRowCol","availableClasses","setOldRowCol","calculateCellSize","contentTemplateChild","panels","panelPropertyChange","row","col","createPanelElement","idValue","initialize","isRenderComplete","showGridLines","checkMediaQuery","initGridLines","updateDragArea","table","tbody","maxRow","tr","columns","td","setAttributes","sizeX","sizeY","setPanelPosition","setHeightAndWidth","updateRowHeight","childElementCount","panelElements","panelElement","getInlinePanels","maxCol","setMinMaxValues","maxColumnValue","colValue","setXYAttributes","panel_1","renderPanels","tempObject","mediaQuery","matchMedia","matches","mainElement","updatePanelLayout","setClasses","updateOldRowColumn","checkMediaQuerySizing","renderDashBoardCells","allowDragging","enableDraggingContent","sortedPanel","bindEvents","updatePanels","updateCloneArrayObject","checkColumnValue","panelResponsiveUpdate","setEnableRtl","cellSize","cellAspectRatio","cellSpacing","recheck","getElementById","createSubElement","templateParser","error","sanitizedValue","sanitize","renderTemplate","appendElement","isStringTemplate","templateElements","tagName","compilerFn","compilerFn_1","append","cellElement","panelModel","panelId","disablePanel","headerTemplateElement","cssClass_1","panelBody","contentHeightValue","setStyle","model","hasAttribute","minSizeX","minSizeY","maxSizeX","maxSizeY","zIndex","isUndefined","panelProp","resizeEvents","allowResizing","downResizeHandler","touchDownResizeHandler","refreshListener","refresh","downHandler","lastMouseX","lastMouseY","moveEventName","upEventName","isMouseMoveBound","moveResizeHandler","isMouseUpBound","upResizeHandler","panelsInitialModel","cloneModels","closest","args","isInteracted","downTarget","currentTarget","shadowEle","elementX","elementY","elementWidth","elementHeight","originalWidth","getCellInstance","originalHeight","previousRow","changedTouches","touchMoveResizeHandler","getCellSize","updateMaxTopLeft","moveTarget","updateResizeElement","maxLeft","handleArray","handleClass","diffY","diffX","resizingPanel","currentX","currentY","oldSizeX","oldSizeY","dY","dX","getMinHeight","getMaxHeight","getMinWidth","getMaxWidth","getResizeRowColumn","upTarget","undefined","allowFloating","moveItemsUpwards","checkForChanges","isChanged","pixelsToColumns","pixelsToRows","collisions","getPanelBase","allowPushing","pixels","isCeil","curColWidth","floor","l","sortItem","rowIndex","colIndex","len","moveItemUpwards","updateGridLines","availableRow","availableColumn","rowValue","columnValue","column","oldRow","updateLayout","cellInstance","removeResizeClasses","checkDragging","sortPanels","_loop_1","_loop_2","this_1","filter","panel","updatedPanel","updatedRows","updatedHeight","getRowColumn","setHeightWidth","heightValue","widthValue","setXYDimensions","renderCell","dashBoardCell","xValue","checkMinMaxValues","cells","cell","ignore","items","h","w","getPanel","rightWardsSpaceChecking","rowElements","spacedColumns","sizeXValue","occupiedValues","getOccupiedColumns","checkingElement","next","occupiedItems","leftWardsSpaceChecking","prev","adjustmentAvailable","leftAdjustable","rightAdjustable","rightSpacing","isAdjustable","rowElement","topAdjustable","eleSizeX","eleCol","getRowElements","leftSpacing","isLeftAdjustable","spacedColumnValue","isRightAdjustable","endRow","topCheck","startRow","spacedRowValue","isXSpacingAvailable","spacing","isSpaceAvailable","subSpacingColumns","base","spaces","isLeftAdjudtable","xAdjust","replacable","isRightAdjudtable","collisionValue","collision","updatedCollision","exclusions","sortCollisionItems","collisionItems","_loop_3","_loop_4","this_2","updatedModels","removeableElement","adjust","resetLayout","addPanelCalled","cloneObject","cloneArray","checkCollision","swapAvailability","available","eleModel","count","collideModel","excludeEle","checkForSwapping","direction","eleSwapRow","isSwappable","count1","updatedRow","collideInstance","elementinstance","swapItems","swappedElements","collisionItemsRow","collisionInstance","itemModel","initialModel","collisionModels","proxy_1","item1","updateRowColumn","checkForCompletePushing","isSubValue","srcEle","updateCollisionChecked","eleSizeY","eleRow","shouldRestrict","i_1","collisionY","collisionCol","collisionX","overlapElementModel","ele_1","k","eleRow_1","excludeElements","collisionPanel","clone","proxy_2","overlapElementRow1","_loop_5","rowVal","this_3","colValue_1","collisionModels1","resizerElements","i_2","ensureDrag","dragPanels","containerEle","draggableHandle","setResizingClass","container","resizableHandles","spanEle","addClassValue","heigthValue","cellHeight","cellWidth","getRowColumnDragValues","elementTop","elementLeft","added","removed","changedPanels","changedArgs","addedPanels","removedPanels","collections","abortArray","dragobj","Draggable","dragArea","isDragScroll","handle","abort","dragStart","onDraggingStart","dragStop","setHolderPosition","panelInstance","dragStopEventArgs","draggedEventArgs","onDragStart","setDragArea","updateRowsHeight","addRows","dragArgs","JSON","parse","stringify","eleRowValue","startCol","position","source","endCol","dragCol","excludeItems","cellSizeOne","cellSizeZero","currentCellInstance","addPanel","insertAdjacentElement","updatePanel","cssClass_2","serialize","cloneModel","customObject","removeAll","removeAllPanel","clonedPanels","removePanel","removedPanel","movePanel","isNaN","resizePanel","firstElementChild","updateCellSizeAndSpacing","updatePanelsDynamically","checkForIDValues","restrictDynamicUpdate","persistedData","data","localStorage","getItem","dataObj","isProtectedOnChange","keys_1","getValue","isArray","mergePanels","sortedPanels","storedColumns","_loop_6","this_4","localPanel","pan"],"mappings":"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"}